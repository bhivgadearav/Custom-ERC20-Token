{
	"id": "2b6a2118128a549948d8e30154506a47",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CustomToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n/// @title CustomToken - An ERC20 token with image URI support\r\n/// @dev Extends ERC20 functionality with image metadata and minting/burning capabilities\r\ncontract CustomToken is ERC20, Ownable {\r\n    /// @notice Storage for token image URI\r\n    /// @dev This can be updated by the contract owner\r\n    string public imageURI;\r\n    \r\n    /// @notice Contract constructor\r\n    /// @dev Initializes the token with initial supply and image URI\r\n    /// @param name Token name\r\n    /// @param symbol Token symbol\r\n    /// @param _imageURI Token image URI\r\n    /// @param _amount Initial supply (before decimals)\r\n    constructor(\r\n        string memory name,\r\n        string memory symbol,\r\n        string memory _imageURI,\r\n        uint256 _amount\r\n    ) ERC20(name, symbol) Ownable(msg.sender) {\r\n        if (bytes(_imageURI).length == 0) revert(\"Empty URI\");\r\n        imageURI = _imageURI;\r\n        \r\n        uint8 decimalsValue = decimals();\r\n        if (_amount > type(uint256).max / (10 ** decimalsValue)) {\r\n            revert(\"Amount too large\");\r\n        }\r\n        \r\n        _mint(msg.sender, _amount * 10 ** decimalsValue);\r\n    }\r\n\r\n    /// @notice Creates new tokens\r\n    /// @dev Only callable by contract owner\r\n    /// @param to Address to receive the minted tokens\r\n    /// @param amount Amount of tokens to mint (including decimals)\r\n    function mint(address to, uint256 amount) external onlyOwner {\r\n        if (to == address(0)) revert(\"Zero address\");\r\n        if (amount == 0) revert(\"Zero amount\");\r\n        _mint(to, amount);\r\n    }\r\n\r\n    /// @notice Destroys tokens from caller's balance\r\n    /// @dev Can be called by any token holder\r\n    /// @param amount Amount of tokens to burn (including decimals)\r\n    function burn(uint256 amount) external {\r\n        if (amount == 0) revert(\"Zero amount\");\r\n        _burn(msg.sender, amount);\r\n    }\r\n\r\n    /// @notice Updates the token's image URI\r\n    /// @dev Only callable by contract owner\r\n    /// @param newImageURI New URI to set for the token image\r\n    function setImageURI(string memory newImageURI) external onlyOwner {\r\n        if (bytes(newImageURI).length == 0) revert(\"Empty URI\");\r\n        imageURI = newImageURI;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CustomToken.sol": {
				"CustomToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_imageURI",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "imageURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newImageURI",
									"type": "string"
								}
							],
							"name": "setImageURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extends ERC20 functionality with image metadata and minting/burning capabilities",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Can be called by any token holder",
								"params": {
									"amount": "Amount of tokens to burn (including decimals)"
								}
							},
							"constructor": {
								"details": "Initializes the token with initial supply and image URI",
								"params": {
									"_amount": "Initial supply (before decimals)",
									"_imageURI": "Token image URI",
									"name": "Token name",
									"symbol": "Token symbol"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"mint(address,uint256)": {
								"details": "Only callable by contract owner",
								"params": {
									"amount": "Amount of tokens to mint (including decimals)",
									"to": "Address to receive the minted tokens"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setImageURI(string)": {
								"details": "Only callable by contract owner",
								"params": {
									"newImageURI": "New URI to set for the token image"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"imageURI": {
								"details": "This can be updated by the contract owner"
							}
						},
						"title": "CustomToken - An ERC20 token with image URI support",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CustomToken.sol\":329:2379  contract CustomToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CustomToken.sol\":786:1310  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CustomToken.sol\":953:963  msg.sender */\n  caller\n    /* \"contracts/CustomToken.sol\":931:935  name */\n  dup5\n    /* \"contracts/CustomToken.sol\":937:943  symbol */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/CustomToken.sol\":1007:1008  0 */\n  0x00\n    /* \"contracts/CustomToken.sol\":986:995  _imageURI */\n  dup3\n    /* \"contracts/CustomToken.sol\":980:1003  bytes(_imageURI).length */\n  mload\n    /* \"contracts/CustomToken.sol\":980:1008  bytes(_imageURI).length == 0 */\n  sub\n    /* \"contracts/CustomToken.sol\":976:1029  if (bytes(_imageURI).length == 0) revert(\"Empty URI\") */\n  tag_18\n  jumpi\n    /* \"contracts/CustomToken.sol\":1010:1029  revert(\"Empty URI\") */\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/CustomToken.sol\":976:1029  if (bytes(_imageURI).length == 0) revert(\"Empty URI\") */\ntag_18:\n    /* \"contracts/CustomToken.sol\":1051:1060  _imageURI */\n  dup2\n    /* \"contracts/CustomToken.sol\":1040:1048  imageURI */\n  0x06\n    /* \"contracts/CustomToken.sol\":1040:1060  imageURI = _imageURI */\n  swap1\n  dup2\n  tag_21\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_21:\n  pop\n    /* \"contracts/CustomToken.sol\":1081:1100  uint8 decimalsValue */\n  0x00\n    /* \"contracts/CustomToken.sol\":1103:1113  decimals() */\n  tag_22\n    /* \"contracts/CustomToken.sol\":1103:1111  decimals */\n  shl(0x20, tag_23)\n    /* \"contracts/CustomToken.sol\":1103:1113  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"contracts/CustomToken.sol\":1081:1113  uint8 decimalsValue = decimals() */\n  swap1\n  pop\n    /* \"contracts/CustomToken.sol\":1165:1178  decimalsValue */\n  dup1\n    /* \"contracts/CustomToken.sol\":1159:1161  10 */\n  0x0a\n    /* \"contracts/CustomToken.sol\":1159:1178  10 ** decimalsValue */\n  tag_24\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"contracts/CustomToken.sol\":1138:1155  type(uint256).max */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"contracts/CustomToken.sol\":1138:1179  type(uint256).max / (10 ** decimalsValue) */\n  tag_26\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"contracts/CustomToken.sol\":1128:1135  _amount */\n  dup3\n    /* \"contracts/CustomToken.sol\":1128:1179  _amount > type(uint256).max / (10 ** decimalsValue) */\n  gt\n    /* \"contracts/CustomToken.sol\":1124:1234  if (_amount > type(uint256).max / (10 ** decimalsValue)) {... */\n  iszero\n  tag_28\n  jumpi\n    /* \"contracts/CustomToken.sol\":1196:1222  revert(\"Amount too large\") */\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_29\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/CustomToken.sol\":1124:1234  if (_amount > type(uint256).max / (10 ** decimalsValue)) {... */\ntag_28:\n    /* \"contracts/CustomToken.sol\":1254:1302  _mint(msg.sender, _amount * 10 ** decimalsValue) */\n  tag_31\n    /* \"contracts/CustomToken.sol\":1260:1270  msg.sender */\n  caller\n    /* \"contracts/CustomToken.sol\":1288:1301  decimalsValue */\n  dup3\n    /* \"contracts/CustomToken.sol\":1282:1284  10 */\n  0x0a\n    /* \"contracts/CustomToken.sol\":1282:1301  10 ** decimalsValue */\n  tag_32\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_32:\n    /* \"contracts/CustomToken.sol\":1272:1279  _amount */\n  dup5\n    /* \"contracts/CustomToken.sol\":1272:1301  _amount * 10 ** decimalsValue */\n  tag_33\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"contracts/CustomToken.sol\":1254:1259  _mint */\n  shl(0x20, tag_35)\n    /* \"contracts/CustomToken.sol\":1254:1302  _mint(msg.sender, _amount * 10 ** decimalsValue) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"contracts/CustomToken.sol\":965:1310  {... */\n  pop\n    /* \"contracts/CustomToken.sol\":786:1310  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/CustomToken.sol\":329:2379  contract CustomToken is ERC20, Ownable {... */\n  jump(tag_36)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_41\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_41:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_42\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_43)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_43:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_45\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_46\n  swap2\n  swap1\n  tag_47\n  jump\t// in\ntag_46:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_48)\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_49\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_50\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_48:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_52\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_53)\ntag_52:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_53:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_54\n  swap2\n  swap1\n  tag_55\n  jump\t// in\ntag_54:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_56:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_57:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_58:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_59:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_60:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_61:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_62:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_63:\n    /* \"#utility.yul\":957:984   */\n  tag_114\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_61\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_115\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_116\n  tag_62\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":1030:1118   */\ntag_115:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_64:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_118\n  tag_56\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_119\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_63\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_65:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_122\n  tag_62\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":1434:1490   */\ntag_121:\n    /* \"#utility.yul\":1508:1537   */\n  tag_123\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_61\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_66:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_67:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_126\n    /* \"#utility.yul\":1885:1934   */\n  tag_127\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_65\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":1869:1935   */\n  tag_64\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_129\n  tag_60\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":2010:2122   */\ntag_128:\n    /* \"#utility.yul\":2131:2183   */\n  tag_130\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_66\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_68:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_132\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_133\n  tag_59\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":2292:2414   */\ntag_132:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_134\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_67\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2647   */\ntag_69:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2636:2641   */\n  dup2\n    /* \"#utility.yul\":2625:2641   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2647   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2653:2775   */\ntag_70:\n    /* \"#utility.yul\":2726:2750   */\n  tag_137\n    /* \"#utility.yul\":2744:2749   */\n  dup2\n    /* \"#utility.yul\":2726:2750   */\n  tag_69\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":2719:2724   */\n  dup2\n    /* \"#utility.yul\":2716:2751   */\n  eq\n    /* \"#utility.yul\":2706:2769   */\n  tag_138\n  jumpi\n    /* \"#utility.yul\":2765:2766   */\n  0x00\n    /* \"#utility.yul\":2762:2763   */\n  dup1\n    /* \"#utility.yul\":2755:2767   */\n  revert\n    /* \"#utility.yul\":2706:2769   */\ntag_138:\n    /* \"#utility.yul\":2653:2775   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2781:2924   */\ntag_71:\n    /* \"#utility.yul\":2838:2843   */\n  0x00\n    /* \"#utility.yul\":2869:2875   */\n  dup2\n    /* \"#utility.yul\":2863:2876   */\n  mload\n    /* \"#utility.yul\":2854:2876   */\n  swap1\n  pop\n    /* \"#utility.yul\":2885:2918   */\n  tag_140\n    /* \"#utility.yul\":2912:2917   */\n  dup2\n    /* \"#utility.yul\":2885:2918   */\n  tag_70\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":2781:2924   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2930:4269   */\ntag_3:\n    /* \"#utility.yul\":3057:3063   */\n  0x00\n    /* \"#utility.yul\":3065:3071   */\n  dup1\n    /* \"#utility.yul\":3073:3079   */\n  0x00\n    /* \"#utility.yul\":3081:3087   */\n  dup1\n    /* \"#utility.yul\":3130:3133   */\n  0x80\n    /* \"#utility.yul\":3118:3127   */\n  dup6\n    /* \"#utility.yul\":3109:3116   */\n  dup8\n    /* \"#utility.yul\":3105:3128   */\n  sub\n    /* \"#utility.yul\":3101:3134   */\n  slt\n    /* \"#utility.yul\":3098:3218   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":3137:3216   */\n  tag_143\n  tag_57\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":3098:3218   */\ntag_142:\n    /* \"#utility.yul\":3278:3279   */\n  0x00\n    /* \"#utility.yul\":3267:3276   */\n  dup6\n    /* \"#utility.yul\":3263:3280   */\n  add\n    /* \"#utility.yul\":3257:3281   */\n  mload\n    /* \"#utility.yul\":3308:3326   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3300:3306   */\n  dup2\n    /* \"#utility.yul\":3297:3327   */\n  gt\n    /* \"#utility.yul\":3294:3411   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":3330:3409   */\n  tag_145\n  tag_58\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":3294:3411   */\ntag_144:\n    /* \"#utility.yul\":3435:3509   */\n  tag_146\n    /* \"#utility.yul\":3501:3508   */\n  dup8\n    /* \"#utility.yul\":3492:3498   */\n  dup3\n    /* \"#utility.yul\":3481:3490   */\n  dup9\n    /* \"#utility.yul\":3477:3499   */\n  add\n    /* \"#utility.yul\":3435:3509   */\n  tag_68\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":3425:3509   */\n  swap5\n  pop\n    /* \"#utility.yul\":3228:3519   */\n  pop\n    /* \"#utility.yul\":3579:3581   */\n  0x20\n    /* \"#utility.yul\":3568:3577   */\n  dup6\n    /* \"#utility.yul\":3564:3582   */\n  add\n    /* \"#utility.yul\":3558:3583   */\n  mload\n    /* \"#utility.yul\":3610:3628   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3602:3608   */\n  dup2\n    /* \"#utility.yul\":3599:3629   */\n  gt\n    /* \"#utility.yul\":3596:3713   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":3632:3711   */\n  tag_148\n  tag_58\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":3596:3713   */\ntag_147:\n    /* \"#utility.yul\":3737:3811   */\n  tag_149\n    /* \"#utility.yul\":3803:3810   */\n  dup8\n    /* \"#utility.yul\":3794:3800   */\n  dup3\n    /* \"#utility.yul\":3783:3792   */\n  dup9\n    /* \"#utility.yul\":3779:3801   */\n  add\n    /* \"#utility.yul\":3737:3811   */\n  tag_68\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":3727:3811   */\n  swap4\n  pop\n    /* \"#utility.yul\":3529:3821   */\n  pop\n    /* \"#utility.yul\":3881:3883   */\n  0x40\n    /* \"#utility.yul\":3870:3879   */\n  dup6\n    /* \"#utility.yul\":3866:3884   */\n  add\n    /* \"#utility.yul\":3860:3885   */\n  mload\n    /* \"#utility.yul\":3912:3930   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3904:3910   */\n  dup2\n    /* \"#utility.yul\":3901:3931   */\n  gt\n    /* \"#utility.yul\":3898:4015   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":3934:4013   */\n  tag_151\n  tag_58\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":3898:4015   */\ntag_150:\n    /* \"#utility.yul\":4039:4113   */\n  tag_152\n    /* \"#utility.yul\":4105:4112   */\n  dup8\n    /* \"#utility.yul\":4096:4102   */\n  dup3\n    /* \"#utility.yul\":4085:4094   */\n  dup9\n    /* \"#utility.yul\":4081:4103   */\n  add\n    /* \"#utility.yul\":4039:4113   */\n  tag_68\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":4029:4113   */\n  swap3\n  pop\n    /* \"#utility.yul\":3831:4123   */\n  pop\n    /* \"#utility.yul\":4162:4164   */\n  0x60\n    /* \"#utility.yul\":4188:4252   */\n  tag_153\n    /* \"#utility.yul\":4244:4251   */\n  dup8\n    /* \"#utility.yul\":4235:4241   */\n  dup3\n    /* \"#utility.yul\":4224:4233   */\n  dup9\n    /* \"#utility.yul\":4220:4242   */\n  add\n    /* \"#utility.yul\":4188:4252   */\n  tag_71\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":4178:4252   */\n  swap2\n  pop\n    /* \"#utility.yul\":4133:4262   */\n  pop\n    /* \"#utility.yul\":2930:4269   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4275:4374   */\ntag_72:\n    /* \"#utility.yul\":4327:4333   */\n  0x00\n    /* \"#utility.yul\":4361:4366   */\n  dup2\n    /* \"#utility.yul\":4355:4367   */\n  mload\n    /* \"#utility.yul\":4345:4367   */\n  swap1\n  pop\n    /* \"#utility.yul\":4275:4374   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4380:4560   */\ntag_73:\n    /* \"#utility.yul\":4428:4505   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4425:4426   */\n  0x00\n    /* \"#utility.yul\":4418:4506   */\n  mstore\n    /* \"#utility.yul\":4525:4529   */\n  0x22\n    /* \"#utility.yul\":4522:4523   */\n  0x04\n    /* \"#utility.yul\":4515:4530   */\n  mstore\n    /* \"#utility.yul\":4549:4553   */\n  0x24\n    /* \"#utility.yul\":4546:4547   */\n  0x00\n    /* \"#utility.yul\":4539:4554   */\n  revert\n    /* \"#utility.yul\":4566:4886   */\ntag_74:\n    /* \"#utility.yul\":4610:4616   */\n  0x00\n    /* \"#utility.yul\":4647:4648   */\n  0x02\n    /* \"#utility.yul\":4641:4645   */\n  dup3\n    /* \"#utility.yul\":4637:4649   */\n  div\n    /* \"#utility.yul\":4627:4649   */\n  swap1\n  pop\n    /* \"#utility.yul\":4694:4695   */\n  0x01\n    /* \"#utility.yul\":4688:4692   */\n  dup3\n    /* \"#utility.yul\":4684:4696   */\n  and\n    /* \"#utility.yul\":4715:4733   */\n  dup1\n    /* \"#utility.yul\":4705:4786   */\n  tag_157\n  jumpi\n    /* \"#utility.yul\":4771:4775   */\n  0x7f\n    /* \"#utility.yul\":4763:4769   */\n  dup3\n    /* \"#utility.yul\":4759:4776   */\n  and\n    /* \"#utility.yul\":4749:4776   */\n  swap2\n  pop\n    /* \"#utility.yul\":4705:4786   */\ntag_157:\n    /* \"#utility.yul\":4833:4835   */\n  0x20\n    /* \"#utility.yul\":4825:4831   */\n  dup3\n    /* \"#utility.yul\":4822:4836   */\n  lt\n    /* \"#utility.yul\":4802:4820   */\n  dup2\n    /* \"#utility.yul\":4799:4837   */\n  sub\n    /* \"#utility.yul\":4796:4880   */\n  tag_158\n  jumpi\n    /* \"#utility.yul\":4852:4870   */\n  tag_159\n  tag_73\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":4796:4880   */\ntag_158:\n    /* \"#utility.yul\":4617:4886   */\n  pop\n    /* \"#utility.yul\":4566:4886   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4892:5033   */\ntag_75:\n    /* \"#utility.yul\":4941:4945   */\n  0x00\n    /* \"#utility.yul\":4964:4967   */\n  dup2\n    /* \"#utility.yul\":4956:4967   */\n  swap1\n  pop\n    /* \"#utility.yul\":4987:4990   */\n  dup2\n    /* \"#utility.yul\":4984:4985   */\n  0x00\n    /* \"#utility.yul\":4977:4991   */\n  mstore\n    /* \"#utility.yul\":5021:5025   */\n  0x20\n    /* \"#utility.yul\":5018:5019   */\n  0x00\n    /* \"#utility.yul\":5008:5026   */\n  keccak256\n    /* \"#utility.yul\":5000:5026   */\n  swap1\n  pop\n    /* \"#utility.yul\":4892:5033   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5039:5132   */\ntag_76:\n    /* \"#utility.yul\":5076:5082   */\n  0x00\n    /* \"#utility.yul\":5123:5125   */\n  0x20\n    /* \"#utility.yul\":5118:5120   */\n  0x1f\n    /* \"#utility.yul\":5111:5116   */\n  dup4\n    /* \"#utility.yul\":5107:5121   */\n  add\n    /* \"#utility.yul\":5103:5126   */\n  div\n    /* \"#utility.yul\":5093:5126   */\n  swap1\n  pop\n    /* \"#utility.yul\":5039:5132   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5138:5245   */\ntag_77:\n    /* \"#utility.yul\":5182:5190   */\n  0x00\n    /* \"#utility.yul\":5232:5237   */\n  dup3\n    /* \"#utility.yul\":5226:5230   */\n  dup3\n    /* \"#utility.yul\":5222:5238   */\n  shl\n    /* \"#utility.yul\":5201:5238   */\n  swap1\n  pop\n    /* \"#utility.yul\":5138:5245   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5251:5644   */\ntag_78:\n    /* \"#utility.yul\":5320:5326   */\n  0x00\n    /* \"#utility.yul\":5370:5371   */\n  0x08\n    /* \"#utility.yul\":5358:5368   */\n  dup4\n    /* \"#utility.yul\":5354:5372   */\n  mul\n    /* \"#utility.yul\":5393:5490   */\n  tag_164\n    /* \"#utility.yul\":5423:5489   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5412:5421   */\n  dup3\n    /* \"#utility.yul\":5393:5490   */\n  tag_77\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":5511:5550   */\n  tag_165\n    /* \"#utility.yul\":5541:5549   */\n  dup7\n    /* \"#utility.yul\":5530:5539   */\n  dup4\n    /* \"#utility.yul\":5511:5550   */\n  tag_77\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":5499:5550   */\n  swap6\n  pop\n    /* \"#utility.yul\":5583:5587   */\n  dup1\n    /* \"#utility.yul\":5579:5588   */\n  not\n    /* \"#utility.yul\":5572:5577   */\n  dup5\n    /* \"#utility.yul\":5568:5589   */\n  and\n    /* \"#utility.yul\":5559:5589   */\n  swap4\n  pop\n    /* \"#utility.yul\":5632:5636   */\n  dup1\n    /* \"#utility.yul\":5622:5630   */\n  dup7\n    /* \"#utility.yul\":5618:5637   */\n  and\n    /* \"#utility.yul\":5611:5616   */\n  dup5\n    /* \"#utility.yul\":5608:5638   */\n  or\n    /* \"#utility.yul\":5598:5638   */\n  swap3\n  pop\n    /* \"#utility.yul\":5327:5644   */\n  pop\n  pop\n    /* \"#utility.yul\":5251:5644   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5650:5710   */\ntag_79:\n    /* \"#utility.yul\":5678:5681   */\n  0x00\n    /* \"#utility.yul\":5699:5704   */\n  dup2\n    /* \"#utility.yul\":5692:5704   */\n  swap1\n  pop\n    /* \"#utility.yul\":5650:5710   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5716:5858   */\ntag_80:\n    /* \"#utility.yul\":5766:5775   */\n  0x00\n    /* \"#utility.yul\":5799:5852   */\n  tag_168\n    /* \"#utility.yul\":5817:5851   */\n  tag_169\n    /* \"#utility.yul\":5826:5850   */\n  tag_170\n    /* \"#utility.yul\":5844:5849   */\n  dup5\n    /* \"#utility.yul\":5826:5850   */\n  tag_69\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":5817:5851   */\n  tag_79\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":5799:5852   */\n  tag_69\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":5786:5852   */\n  swap1\n  pop\n    /* \"#utility.yul\":5716:5858   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5864:5939   */\ntag_81:\n    /* \"#utility.yul\":5907:5910   */\n  0x00\n    /* \"#utility.yul\":5928:5933   */\n  dup2\n    /* \"#utility.yul\":5921:5933   */\n  swap1\n  pop\n    /* \"#utility.yul\":5864:5939   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5945:6214   */\ntag_82:\n    /* \"#utility.yul\":6055:6094   */\n  tag_173\n    /* \"#utility.yul\":6086:6093   */\n  dup4\n    /* \"#utility.yul\":6055:6094   */\n  tag_80\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":6116:6207   */\n  tag_174\n    /* \"#utility.yul\":6165:6206   */\n  tag_175\n    /* \"#utility.yul\":6189:6205   */\n  dup3\n    /* \"#utility.yul\":6165:6206   */\n  tag_81\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":6157:6163   */\n  dup5\n    /* \"#utility.yul\":6150:6154   */\n  dup5\n    /* \"#utility.yul\":6144:6155   */\n  sload\n    /* \"#utility.yul\":6116:6207   */\n  tag_78\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":6110:6114   */\n  dup3\n    /* \"#utility.yul\":6103:6208   */\n  sstore\n    /* \"#utility.yul\":6021:6214   */\n  pop\n    /* \"#utility.yul\":5945:6214   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6220:6293   */\ntag_83:\n    /* \"#utility.yul\":6265:6268   */\n  0x00\n    /* \"#utility.yul\":6220:6293   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6299:6488   */\ntag_84:\n    /* \"#utility.yul\":6376:6408   */\n  tag_178\n  tag_83\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":6417:6482   */\n  tag_179\n    /* \"#utility.yul\":6475:6481   */\n  dup2\n    /* \"#utility.yul\":6467:6473   */\n  dup5\n    /* \"#utility.yul\":6461:6465   */\n  dup5\n    /* \"#utility.yul\":6417:6482   */\n  tag_82\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":6352:6488   */\n  pop\n    /* \"#utility.yul\":6299:6488   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6494:6680   */\ntag_85:\n    /* \"#utility.yul\":6554:6674   */\ntag_181:\n    /* \"#utility.yul\":6571:6574   */\n  dup2\n    /* \"#utility.yul\":6564:6569   */\n  dup2\n    /* \"#utility.yul\":6561:6575   */\n  lt\n    /* \"#utility.yul\":6554:6674   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":6625:6664   */\n  tag_184\n    /* \"#utility.yul\":6662:6663   */\n  0x00\n    /* \"#utility.yul\":6655:6660   */\n  dup3\n    /* \"#utility.yul\":6625:6664   */\n  tag_84\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":6598:6599   */\n  0x01\n    /* \"#utility.yul\":6591:6596   */\n  dup2\n    /* \"#utility.yul\":6587:6600   */\n  add\n    /* \"#utility.yul\":6578:6600   */\n  swap1\n  pop\n    /* \"#utility.yul\":6554:6674   */\n  jump(tag_181)\ntag_183:\n    /* \"#utility.yul\":6494:6680   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6686:7229   */\ntag_86:\n    /* \"#utility.yul\":6787:6789   */\n  0x1f\n    /* \"#utility.yul\":6782:6785   */\n  dup3\n    /* \"#utility.yul\":6779:6790   */\n  gt\n    /* \"#utility.yul\":6776:7222   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":6821:6859   */\n  tag_187\n    /* \"#utility.yul\":6853:6858   */\n  dup2\n    /* \"#utility.yul\":6821:6859   */\n  tag_75\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":6905:6934   */\n  tag_188\n    /* \"#utility.yul\":6923:6933   */\n  dup5\n    /* \"#utility.yul\":6905:6934   */\n  tag_76\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":6895:6903   */\n  dup2\n    /* \"#utility.yul\":6891:6935   */\n  add\n    /* \"#utility.yul\":7088:7090   */\n  0x20\n    /* \"#utility.yul\":7076:7086   */\n  dup6\n    /* \"#utility.yul\":7073:7091   */\n  lt\n    /* \"#utility.yul\":7070:7119   */\n  iszero\n  tag_189\n  jumpi\n    /* \"#utility.yul\":7109:7117   */\n  dup2\n    /* \"#utility.yul\":7094:7117   */\n  swap1\n  pop\n    /* \"#utility.yul\":7070:7119   */\ntag_189:\n    /* \"#utility.yul\":7132:7212   */\n  tag_190\n    /* \"#utility.yul\":7188:7210   */\n  tag_191\n    /* \"#utility.yul\":7206:7209   */\n  dup6\n    /* \"#utility.yul\":7188:7210   */\n  tag_76\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":7178:7186   */\n  dup4\n    /* \"#utility.yul\":7174:7211   */\n  add\n    /* \"#utility.yul\":7161:7172   */\n  dup3\n    /* \"#utility.yul\":7132:7212   */\n  tag_85\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":6791:7222   */\n  pop\n  pop\n    /* \"#utility.yul\":6776:7222   */\ntag_186:\n    /* \"#utility.yul\":6686:7229   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7235:7352   */\ntag_87:\n    /* \"#utility.yul\":7289:7297   */\n  0x00\n    /* \"#utility.yul\":7339:7344   */\n  dup3\n    /* \"#utility.yul\":7333:7337   */\n  dup3\n    /* \"#utility.yul\":7329:7345   */\n  shr\n    /* \"#utility.yul\":7308:7345   */\n  swap1\n  pop\n    /* \"#utility.yul\":7235:7352   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7358:7527   */\ntag_88:\n    /* \"#utility.yul\":7402:7408   */\n  0x00\n    /* \"#utility.yul\":7435:7486   */\n  tag_194\n    /* \"#utility.yul\":7483:7484   */\n  0x00\n    /* \"#utility.yul\":7479:7485   */\n  not\n    /* \"#utility.yul\":7471:7476   */\n  dup5\n    /* \"#utility.yul\":7468:7469   */\n  0x08\n    /* \"#utility.yul\":7464:7477   */\n  mul\n    /* \"#utility.yul\":7435:7486   */\n  tag_87\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":7431:7487   */\n  not\n    /* \"#utility.yul\":7516:7520   */\n  dup1\n    /* \"#utility.yul\":7510:7514   */\n  dup4\n    /* \"#utility.yul\":7506:7521   */\n  and\n    /* \"#utility.yul\":7496:7521   */\n  swap2\n  pop\n    /* \"#utility.yul\":7409:7527   */\n  pop\n    /* \"#utility.yul\":7358:7527   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7532:7827   */\ntag_89:\n    /* \"#utility.yul\":7608:7612   */\n  0x00\n    /* \"#utility.yul\":7754:7783   */\n  tag_196\n    /* \"#utility.yul\":7779:7782   */\n  dup4\n    /* \"#utility.yul\":7773:7777   */\n  dup4\n    /* \"#utility.yul\":7754:7783   */\n  tag_88\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":7746:7783   */\n  swap2\n  pop\n    /* \"#utility.yul\":7816:7819   */\n  dup3\n    /* \"#utility.yul\":7813:7814   */\n  0x02\n    /* \"#utility.yul\":7809:7820   */\n  mul\n    /* \"#utility.yul\":7803:7807   */\n  dup3\n    /* \"#utility.yul\":7800:7821   */\n  or\n    /* \"#utility.yul\":7792:7821   */\n  swap1\n  pop\n    /* \"#utility.yul\":7532:7827   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7832:9227   */\ntag_9:\n    /* \"#utility.yul\":7949:7986   */\n  tag_198\n    /* \"#utility.yul\":7982:7985   */\n  dup3\n    /* \"#utility.yul\":7949:7986   */\n  tag_72\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":8051:8069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8043:8049   */\n  dup2\n    /* \"#utility.yul\":8040:8070   */\n  gt\n    /* \"#utility.yul\":8037:8093   */\n  iszero\n  tag_199\n  jumpi\n    /* \"#utility.yul\":8073:8091   */\n  tag_200\n  tag_62\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":8037:8093   */\ntag_199:\n    /* \"#utility.yul\":8117:8155   */\n  tag_201\n    /* \"#utility.yul\":8149:8153   */\n  dup3\n    /* \"#utility.yul\":8143:8154   */\n  sload\n    /* \"#utility.yul\":8117:8155   */\n  tag_74\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":8202:8269   */\n  tag_202\n    /* \"#utility.yul\":8262:8268   */\n  dup3\n    /* \"#utility.yul\":8254:8260   */\n  dup3\n    /* \"#utility.yul\":8248:8252   */\n  dup6\n    /* \"#utility.yul\":8202:8269   */\n  tag_86\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":8296:8297   */\n  0x00\n    /* \"#utility.yul\":8320:8324   */\n  0x20\n    /* \"#utility.yul\":8307:8324   */\n  swap1\n  pop\n    /* \"#utility.yul\":8352:8354   */\n  0x1f\n    /* \"#utility.yul\":8344:8350   */\n  dup4\n    /* \"#utility.yul\":8341:8355   */\n  gt\n    /* \"#utility.yul\":8369:8370   */\n  0x01\n    /* \"#utility.yul\":8364:8982   */\n  dup2\n  eq\n  tag_204\n  jumpi\n    /* \"#utility.yul\":9026:9027   */\n  0x00\n    /* \"#utility.yul\":9043:9049   */\n  dup5\n    /* \"#utility.yul\":9040:9117   */\n  iszero\n  tag_205\n  jumpi\n    /* \"#utility.yul\":9092:9101   */\n  dup3\n    /* \"#utility.yul\":9087:9090   */\n  dup8\n    /* \"#utility.yul\":9083:9102   */\n  add\n    /* \"#utility.yul\":9077:9103   */\n  mload\n    /* \"#utility.yul\":9068:9103   */\n  swap1\n  pop\n    /* \"#utility.yul\":9040:9117   */\ntag_205:\n    /* \"#utility.yul\":9143:9210   */\n  tag_206\n    /* \"#utility.yul\":9203:9209   */\n  dup6\n    /* \"#utility.yul\":9196:9201   */\n  dup3\n    /* \"#utility.yul\":9143:9210   */\n  tag_89\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":9137:9141   */\n  dup7\n    /* \"#utility.yul\":9130:9211   */\n  sstore\n    /* \"#utility.yul\":8999:9221   */\n  pop\n    /* \"#utility.yul\":8334:9221   */\n  jump(tag_203)\n    /* \"#utility.yul\":8364:8982   */\ntag_204:\n    /* \"#utility.yul\":8416:8420   */\n  0x1f\n    /* \"#utility.yul\":8412:8421   */\n  not\n    /* \"#utility.yul\":8404:8410   */\n  dup5\n    /* \"#utility.yul\":8400:8422   */\n  and\n    /* \"#utility.yul\":8450:8487   */\n  tag_207\n    /* \"#utility.yul\":8482:8486   */\n  dup7\n    /* \"#utility.yul\":8450:8487   */\n  tag_75\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":8509:8510   */\n  0x00\n    /* \"#utility.yul\":8523:8731   */\ntag_208:\n    /* \"#utility.yul\":8537:8544   */\n  dup3\n    /* \"#utility.yul\":8534:8535   */\n  dup2\n    /* \"#utility.yul\":8531:8545   */\n  lt\n    /* \"#utility.yul\":8523:8731   */\n  iszero\n  tag_210\n  jumpi\n    /* \"#utility.yul\":8616:8625   */\n  dup5\n    /* \"#utility.yul\":8611:8614   */\n  dup10\n    /* \"#utility.yul\":8607:8626   */\n  add\n    /* \"#utility.yul\":8601:8627   */\n  mload\n    /* \"#utility.yul\":8593:8599   */\n  dup3\n    /* \"#utility.yul\":8586:8628   */\n  sstore\n    /* \"#utility.yul\":8667:8668   */\n  0x01\n    /* \"#utility.yul\":8659:8665   */\n  dup3\n    /* \"#utility.yul\":8655:8669   */\n  add\n    /* \"#utility.yul\":8645:8669   */\n  swap2\n  pop\n    /* \"#utility.yul\":8714:8716   */\n  0x20\n    /* \"#utility.yul\":8703:8712   */\n  dup6\n    /* \"#utility.yul\":8699:8717   */\n  add\n    /* \"#utility.yul\":8686:8717   */\n  swap5\n  pop\n    /* \"#utility.yul\":8560:8564   */\n  0x20\n    /* \"#utility.yul\":8557:8558   */\n  dup2\n    /* \"#utility.yul\":8553:8565   */\n  add\n    /* \"#utility.yul\":8548:8565   */\n  swap1\n  pop\n    /* \"#utility.yul\":8523:8731   */\n  jump(tag_208)\ntag_210:\n    /* \"#utility.yul\":8759:8765   */\n  dup7\n    /* \"#utility.yul\":8750:8757   */\n  dup4\n    /* \"#utility.yul\":8747:8766   */\n  lt\n    /* \"#utility.yul\":8744:8923   */\n  iszero\n  tag_211\n  jumpi\n    /* \"#utility.yul\":8817:8826   */\n  dup5\n    /* \"#utility.yul\":8812:8815   */\n  dup10\n    /* \"#utility.yul\":8808:8827   */\n  add\n    /* \"#utility.yul\":8802:8828   */\n  mload\n    /* \"#utility.yul\":8860:8908   */\n  tag_212\n    /* \"#utility.yul\":8902:8906   */\n  0x1f\n    /* \"#utility.yul\":8894:8900   */\n  dup10\n    /* \"#utility.yul\":8890:8907   */\n  and\n    /* \"#utility.yul\":8879:8888   */\n  dup3\n    /* \"#utility.yul\":8860:8908   */\n  tag_88\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":8852:8858   */\n  dup4\n    /* \"#utility.yul\":8845:8909   */\n  sstore\n    /* \"#utility.yul\":8767:8923   */\n  pop\n    /* \"#utility.yul\":8744:8923   */\ntag_211:\n    /* \"#utility.yul\":8969:8970   */\n  0x01\n    /* \"#utility.yul\":8965:8966   */\n  0x02\n    /* \"#utility.yul\":8957:8963   */\n  dup9\n    /* \"#utility.yul\":8953:8967   */\n  mul\n    /* \"#utility.yul\":8949:8971   */\n  add\n    /* \"#utility.yul\":8943:8947   */\n  dup9\n    /* \"#utility.yul\":8936:8972   */\n  sstore\n    /* \"#utility.yul\":8371:8982   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8334:9221   */\ntag_203:\n  pop\n    /* \"#utility.yul\":7924:9227   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7832:9227   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9233:9359   */\ntag_90:\n    /* \"#utility.yul\":9270:9277   */\n  0x00\n    /* \"#utility.yul\":9310:9352   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9303:9308   */\n  dup3\n    /* \"#utility.yul\":9299:9353   */\n  and\n    /* \"#utility.yul\":9288:9353   */\n  swap1\n  pop\n    /* \"#utility.yul\":9233:9359   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9365:9461   */\ntag_91:\n    /* \"#utility.yul\":9402:9409   */\n  0x00\n    /* \"#utility.yul\":9431:9455   */\n  tag_215\n    /* \"#utility.yul\":9449:9454   */\n  dup3\n    /* \"#utility.yul\":9431:9455   */\n  tag_90\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":9420:9455   */\n  swap1\n  pop\n    /* \"#utility.yul\":9365:9461   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9467:9585   */\ntag_92:\n    /* \"#utility.yul\":9554:9578   */\n  tag_217\n    /* \"#utility.yul\":9572:9577   */\n  dup2\n    /* \"#utility.yul\":9554:9578   */\n  tag_91\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":9549:9552   */\n  dup3\n    /* \"#utility.yul\":9542:9579   */\n  mstore\n    /* \"#utility.yul\":9467:9585   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9591:9813   */\ntag_14:\n    /* \"#utility.yul\":9684:9688   */\n  0x00\n    /* \"#utility.yul\":9722:9724   */\n  0x20\n    /* \"#utility.yul\":9711:9720   */\n  dup3\n    /* \"#utility.yul\":9707:9725   */\n  add\n    /* \"#utility.yul\":9699:9725   */\n  swap1\n  pop\n    /* \"#utility.yul\":9735:9806   */\n  tag_219\n    /* \"#utility.yul\":9803:9804   */\n  0x00\n    /* \"#utility.yul\":9792:9801   */\n  dup4\n    /* \"#utility.yul\":9788:9805   */\n  add\n    /* \"#utility.yul\":9779:9785   */\n  dup5\n    /* \"#utility.yul\":9735:9806   */\n  tag_92\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":9591:9813   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9819:9988   */\ntag_93:\n    /* \"#utility.yul\":9903:9914   */\n  0x00\n    /* \"#utility.yul\":9937:9943   */\n  dup3\n    /* \"#utility.yul\":9932:9935   */\n  dup3\n    /* \"#utility.yul\":9925:9944   */\n  mstore\n    /* \"#utility.yul\":9977:9981   */\n  0x20\n    /* \"#utility.yul\":9972:9975   */\n  dup3\n    /* \"#utility.yul\":9968:9982   */\n  add\n    /* \"#utility.yul\":9953:9982   */\n  swap1\n  pop\n    /* \"#utility.yul\":9819:9988   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9994:10153   */\ntag_94:\n    /* \"#utility.yul\":10134:10145   */\n  0x456d707479205552490000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10130:10131   */\n  0x00\n    /* \"#utility.yul\":10122:10128   */\n  dup3\n    /* \"#utility.yul\":10118:10132   */\n  add\n    /* \"#utility.yul\":10111:10146   */\n  mstore\n    /* \"#utility.yul\":9994:10153   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10159:10524   */\ntag_95:\n    /* \"#utility.yul\":10301:10304   */\n  0x00\n    /* \"#utility.yul\":10322:10388   */\n  tag_223\n    /* \"#utility.yul\":10386:10387   */\n  0x09\n    /* \"#utility.yul\":10381:10384   */\n  dup4\n    /* \"#utility.yul\":10322:10388   */\n  tag_93\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":10315:10388   */\n  swap2\n  pop\n    /* \"#utility.yul\":10397:10490   */\n  tag_224\n    /* \"#utility.yul\":10486:10489   */\n  dup3\n    /* \"#utility.yul\":10397:10490   */\n  tag_94\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":10515:10517   */\n  0x20\n    /* \"#utility.yul\":10510:10513   */\n  dup3\n    /* \"#utility.yul\":10506:10518   */\n  add\n    /* \"#utility.yul\":10499:10518   */\n  swap1\n  pop\n    /* \"#utility.yul\":10159:10524   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10530:10949   */\ntag_20:\n    /* \"#utility.yul\":10696:10700   */\n  0x00\n    /* \"#utility.yul\":10734:10736   */\n  0x20\n    /* \"#utility.yul\":10723:10732   */\n  dup3\n    /* \"#utility.yul\":10719:10737   */\n  add\n    /* \"#utility.yul\":10711:10737   */\n  swap1\n  pop\n    /* \"#utility.yul\":10783:10792   */\n  dup2\n    /* \"#utility.yul\":10777:10781   */\n  dup2\n    /* \"#utility.yul\":10773:10793   */\n  sub\n    /* \"#utility.yul\":10769:10770   */\n  0x00\n    /* \"#utility.yul\":10758:10767   */\n  dup4\n    /* \"#utility.yul\":10754:10771   */\n  add\n    /* \"#utility.yul\":10747:10794   */\n  mstore\n    /* \"#utility.yul\":10811:10942   */\n  tag_226\n    /* \"#utility.yul\":10937:10941   */\n  dup2\n    /* \"#utility.yul\":10811:10942   */\n  tag_95\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":10803:10942   */\n  swap1\n  pop\n    /* \"#utility.yul\":10530:10949   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10955:11135   */\ntag_96:\n    /* \"#utility.yul\":11003:11080   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":11000:11001   */\n  0x00\n    /* \"#utility.yul\":10993:11081   */\n  mstore\n    /* \"#utility.yul\":11100:11104   */\n  0x11\n    /* \"#utility.yul\":11097:11098   */\n  0x04\n    /* \"#utility.yul\":11090:11105   */\n  mstore\n    /* \"#utility.yul\":11124:11128   */\n  0x24\n    /* \"#utility.yul\":11121:11122   */\n  0x00\n    /* \"#utility.yul\":11114:11129   */\n  revert\n    /* \"#utility.yul\":11141:11243   */\ntag_97:\n    /* \"#utility.yul\":11183:11191   */\n  0x00\n    /* \"#utility.yul\":11230:11235   */\n  dup2\n    /* \"#utility.yul\":11227:11228   */\n  0x01\n    /* \"#utility.yul\":11223:11236   */\n  shr\n    /* \"#utility.yul\":11202:11236   */\n  swap1\n  pop\n    /* \"#utility.yul\":11141:11243   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11249:12097   */\ntag_98:\n    /* \"#utility.yul\":11310:11315   */\n  0x00\n    /* \"#utility.yul\":11317:11321   */\n  dup1\n    /* \"#utility.yul\":11341:11347   */\n  dup3\n    /* \"#utility.yul\":11332:11347   */\n  swap2\n  pop\n    /* \"#utility.yul\":11365:11370   */\n  dup4\n    /* \"#utility.yul\":11356:11370   */\n  swap1\n  pop\n    /* \"#utility.yul\":11379:12091   */\ntag_230:\n    /* \"#utility.yul\":11400:11401   */\n  0x01\n    /* \"#utility.yul\":11390:11398   */\n  dup6\n    /* \"#utility.yul\":11387:11402   */\n  gt\n    /* \"#utility.yul\":11379:12091   */\n  iszero\n  tag_232\n  jumpi\n    /* \"#utility.yul\":11495:11499   */\n  dup1\n    /* \"#utility.yul\":11490:11493   */\n  dup7\n    /* \"#utility.yul\":11486:11500   */\n  div\n    /* \"#utility.yul\":11480:11484   */\n  dup2\n    /* \"#utility.yul\":11477:11501   */\n  gt\n    /* \"#utility.yul\":11474:11524   */\n  iszero\n  tag_233\n  jumpi\n    /* \"#utility.yul\":11504:11522   */\n  tag_234\n  tag_96\n  jump\t// in\ntag_234:\n    /* \"#utility.yul\":11474:11524   */\ntag_233:\n    /* \"#utility.yul\":11554:11555   */\n  0x01\n    /* \"#utility.yul\":11544:11552   */\n  dup6\n    /* \"#utility.yul\":11540:11556   */\n  and\n    /* \"#utility.yul\":11537:11988   */\n  iszero\n  tag_235\n  jumpi\n    /* \"#utility.yul\":11969:11973   */\n  dup1\n    /* \"#utility.yul\":11962:11967   */\n  dup3\n    /* \"#utility.yul\":11958:11974   */\n  mul\n    /* \"#utility.yul\":11949:11974   */\n  swap2\n  pop\n    /* \"#utility.yul\":11537:11988   */\ntag_235:\n    /* \"#utility.yul\":12019:12023   */\n  dup1\n    /* \"#utility.yul\":12013:12017   */\n  dup2\n    /* \"#utility.yul\":12009:12024   */\n  mul\n    /* \"#utility.yul\":12001:12024   */\n  swap1\n  pop\n    /* \"#utility.yul\":12049:12081   */\n  tag_236\n    /* \"#utility.yul\":12072:12080   */\n  dup6\n    /* \"#utility.yul\":12049:12081   */\n  tag_97\n  jump\t// in\ntag_236:\n    /* \"#utility.yul\":12037:12081   */\n  swap5\n  pop\n    /* \"#utility.yul\":11379:12091   */\n  jump(tag_230)\ntag_232:\n    /* \"#utility.yul\":11249:12097   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12103:13176   */\ntag_99:\n    /* \"#utility.yul\":12157:12162   */\n  0x00\n    /* \"#utility.yul\":12348:12356   */\n  dup3\n    /* \"#utility.yul\":12338:12378   */\n  tag_238\n  jumpi\n    /* \"#utility.yul\":12369:12370   */\n  0x01\n    /* \"#utility.yul\":12360:12370   */\n  swap1\n  pop\n    /* \"#utility.yul\":12371:12376   */\n  jump(tag_237)\n    /* \"#utility.yul\":12338:12378   */\ntag_238:\n    /* \"#utility.yul\":12397:12401   */\n  dup2\n    /* \"#utility.yul\":12387:12423   */\n  tag_239\n  jumpi\n    /* \"#utility.yul\":12414:12415   */\n  0x00\n    /* \"#utility.yul\":12405:12415   */\n  swap1\n  pop\n    /* \"#utility.yul\":12416:12421   */\n  jump(tag_237)\n    /* \"#utility.yul\":12387:12423   */\ntag_239:\n    /* \"#utility.yul\":12483:12487   */\n  dup2\n    /* \"#utility.yul\":12531:12532   */\n  0x01\n    /* \"#utility.yul\":12526:12553   */\n  dup2\n  eq\n  tag_241\n  jumpi\n    /* \"#utility.yul\":12567:12568   */\n  0x02\n    /* \"#utility.yul\":12562:12753   */\n  dup2\n  eq\n  tag_242\n  jumpi\n    /* \"#utility.yul\":12476:12753   */\n  jump(tag_240)\n    /* \"#utility.yul\":12526:12553   */\ntag_241:\n    /* \"#utility.yul\":12544:12545   */\n  0x01\n    /* \"#utility.yul\":12535:12545   */\n  swap2\n  pop\n    /* \"#utility.yul\":12546:12551   */\n  pop\n  jump(tag_237)\n    /* \"#utility.yul\":12562:12753   */\ntag_242:\n    /* \"#utility.yul\":12607:12610   */\n  0xff\n    /* \"#utility.yul\":12597:12605   */\n  dup5\n    /* \"#utility.yul\":12594:12611   */\n  gt\n    /* \"#utility.yul\":12591:12634   */\n  iszero\n  tag_243\n  jumpi\n    /* \"#utility.yul\":12614:12632   */\n  tag_244\n  tag_96\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":12591:12634   */\ntag_243:\n    /* \"#utility.yul\":12663:12671   */\n  dup4\n    /* \"#utility.yul\":12660:12661   */\n  0x02\n    /* \"#utility.yul\":12656:12672   */\n  exp\n    /* \"#utility.yul\":12647:12672   */\n  swap2\n  pop\n    /* \"#utility.yul\":12698:12701   */\n  dup5\n    /* \"#utility.yul\":12691:12696   */\n  dup3\n    /* \"#utility.yul\":12688:12702   */\n  gt\n    /* \"#utility.yul\":12685:12725   */\n  iszero\n  tag_245\n  jumpi\n    /* \"#utility.yul\":12705:12723   */\n  tag_246\n  tag_96\n  jump\t// in\ntag_246:\n    /* \"#utility.yul\":12685:12725   */\ntag_245:\n    /* \"#utility.yul\":12738:12743   */\n  pop\n  jump(tag_237)\n    /* \"#utility.yul\":12476:12753   */\ntag_240:\n  pop\n    /* \"#utility.yul\":12862:12864   */\n  0x20\n    /* \"#utility.yul\":12852:12860   */\n  dup4\n    /* \"#utility.yul\":12849:12865   */\n  lt\n    /* \"#utility.yul\":12843:12846   */\n  0x0133\n    /* \"#utility.yul\":12837:12841   */\n  dup4\n    /* \"#utility.yul\":12834:12847   */\n  lt\n    /* \"#utility.yul\":12830:12866   */\n  and\n    /* \"#utility.yul\":12812:12814   */\n  0x4e\n    /* \"#utility.yul\":12802:12810   */\n  dup5\n    /* \"#utility.yul\":12799:12815   */\n  lt\n    /* \"#utility.yul\":12794:12796   */\n  0x0b\n    /* \"#utility.yul\":12788:12792   */\n  dup5\n    /* \"#utility.yul\":12785:12797   */\n  lt\n    /* \"#utility.yul\":12781:12816   */\n  and\n    /* \"#utility.yul\":12765:12876   */\n  or\n    /* \"#utility.yul\":12762:13008   */\n  iszero\n  tag_247\n  jumpi\n    /* \"#utility.yul\":12918:12926   */\n  dup3\n    /* \"#utility.yul\":12912:12916   */\n  dup3\n    /* \"#utility.yul\":12908:12927   */\n  exp\n    /* \"#utility.yul\":12899:12927   */\n  swap1\n  pop\n    /* \"#utility.yul\":12953:12956   */\n  dup4\n    /* \"#utility.yul\":12946:12951   */\n  dup2\n    /* \"#utility.yul\":12943:12957   */\n  gt\n    /* \"#utility.yul\":12940:12980   */\n  iszero\n  tag_248\n  jumpi\n    /* \"#utility.yul\":12960:12978   */\n  tag_249\n  tag_96\n  jump\t// in\ntag_249:\n    /* \"#utility.yul\":12940:12980   */\ntag_248:\n    /* \"#utility.yul\":12993:12998   */\n  jump(tag_237)\n    /* \"#utility.yul\":12762:13008   */\ntag_247:\n    /* \"#utility.yul\":13033:13075   */\n  tag_250\n    /* \"#utility.yul\":13071:13074   */\n  dup5\n    /* \"#utility.yul\":13061:13069   */\n  dup5\n    /* \"#utility.yul\":13055:13059   */\n  dup5\n    /* \"#utility.yul\":13052:13053   */\n  0x01\n    /* \"#utility.yul\":13033:13075   */\n  tag_98\n  jump\t// in\ntag_250:\n    /* \"#utility.yul\":13018:13075   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":13107:13111   */\n  dup2\n    /* \"#utility.yul\":13102:13105   */\n  dup5\n    /* \"#utility.yul\":13098:13112   */\n  div\n    /* \"#utility.yul\":13091:13096   */\n  dup2\n    /* \"#utility.yul\":13088:13113   */\n  gt\n    /* \"#utility.yul\":13085:13136   */\n  iszero\n  tag_251\n  jumpi\n    /* \"#utility.yul\":13116:13134   */\n  tag_252\n  tag_96\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":13085:13136   */\ntag_251:\n    /* \"#utility.yul\":13165:13169   */\n  dup2\n    /* \"#utility.yul\":13158:13163   */\n  dup2\n    /* \"#utility.yul\":13154:13170   */\n  mul\n    /* \"#utility.yul\":13145:13170   */\n  swap1\n  pop\n    /* \"#utility.yul\":12103:13176   */\ntag_237:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13182:13268   */\ntag_100:\n    /* \"#utility.yul\":13217:13224   */\n  0x00\n    /* \"#utility.yul\":13257:13261   */\n  0xff\n    /* \"#utility.yul\":13250:13255   */\n  dup3\n    /* \"#utility.yul\":13246:13262   */\n  and\n    /* \"#utility.yul\":13235:13262   */\n  swap1\n  pop\n    /* \"#utility.yul\":13182:13268   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13274:13555   */\ntag_25:\n    /* \"#utility.yul\":13332:13337   */\n  0x00\n    /* \"#utility.yul\":13356:13379   */\n  tag_255\n    /* \"#utility.yul\":13374:13378   */\n  dup3\n    /* \"#utility.yul\":13356:13379   */\n  tag_69\n  jump\t// in\ntag_255:\n    /* \"#utility.yul\":13348:13379   */\n  swap2\n  pop\n    /* \"#utility.yul\":13400:13425   */\n  tag_256\n    /* \"#utility.yul\":13416:13424   */\n  dup4\n    /* \"#utility.yul\":13400:13425   */\n  tag_100\n  jump\t// in\ntag_256:\n    /* \"#utility.yul\":13388:13425   */\n  swap3\n  pop\n    /* \"#utility.yul\":13444:13548   */\n  tag_257\n    /* \"#utility.yul\":13481:13547   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":13471:13479   */\n  dup5\n    /* \"#utility.yul\":13465:13469   */\n  dup5\n    /* \"#utility.yul\":13444:13548   */\n  tag_99\n  jump\t// in\ntag_257:\n    /* \"#utility.yul\":13435:13548   */\n  swap1\n  pop\n    /* \"#utility.yul\":13274:13555   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13561:13741   */\ntag_101:\n    /* \"#utility.yul\":13609:13686   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":13606:13607   */\n  0x00\n    /* \"#utility.yul\":13599:13687   */\n  mstore\n    /* \"#utility.yul\":13706:13710   */\n  0x12\n    /* \"#utility.yul\":13703:13704   */\n  0x04\n    /* \"#utility.yul\":13696:13711   */\n  mstore\n    /* \"#utility.yul\":13730:13734   */\n  0x24\n    /* \"#utility.yul\":13727:13728   */\n  0x00\n    /* \"#utility.yul\":13720:13735   */\n  revert\n    /* \"#utility.yul\":13747:13932   */\ntag_27:\n    /* \"#utility.yul\":13787:13788   */\n  0x00\n    /* \"#utility.yul\":13804:13824   */\n  tag_260\n    /* \"#utility.yul\":13822:13823   */\n  dup3\n    /* \"#utility.yul\":13804:13824   */\n  tag_69\n  jump\t// in\ntag_260:\n    /* \"#utility.yul\":13799:13824   */\n  swap2\n  pop\n    /* \"#utility.yul\":13838:13858   */\n  tag_261\n    /* \"#utility.yul\":13856:13857   */\n  dup4\n    /* \"#utility.yul\":13838:13858   */\n  tag_69\n  jump\t// in\ntag_261:\n    /* \"#utility.yul\":13833:13858   */\n  swap3\n  pop\n    /* \"#utility.yul\":13877:13878   */\n  dup3\n    /* \"#utility.yul\":13867:13902   */\n  tag_262\n  jumpi\n    /* \"#utility.yul\":13882:13900   */\n  tag_263\n  tag_101\n  jump\t// in\ntag_263:\n    /* \"#utility.yul\":13867:13902   */\ntag_262:\n    /* \"#utility.yul\":13924:13925   */\n  dup3\n    /* \"#utility.yul\":13921:13922   */\n  dup3\n    /* \"#utility.yul\":13917:13926   */\n  div\n    /* \"#utility.yul\":13912:13926   */\n  swap1\n  pop\n    /* \"#utility.yul\":13747:13932   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13938:14104   */\ntag_102:\n    /* \"#utility.yul\":14078:14096   */\n  0x416d6f756e7420746f6f206c6172676500000000000000000000000000000000\n    /* \"#utility.yul\":14074:14075   */\n  0x00\n    /* \"#utility.yul\":14066:14072   */\n  dup3\n    /* \"#utility.yul\":14062:14076   */\n  add\n    /* \"#utility.yul\":14055:14097   */\n  mstore\n    /* \"#utility.yul\":13938:14104   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14110:14476   */\ntag_103:\n    /* \"#utility.yul\":14252:14255   */\n  0x00\n    /* \"#utility.yul\":14273:14340   */\n  tag_266\n    /* \"#utility.yul\":14337:14339   */\n  0x10\n    /* \"#utility.yul\":14332:14335   */\n  dup4\n    /* \"#utility.yul\":14273:14340   */\n  tag_93\n  jump\t// in\ntag_266:\n    /* \"#utility.yul\":14266:14340   */\n  swap2\n  pop\n    /* \"#utility.yul\":14349:14442   */\n  tag_267\n    /* \"#utility.yul\":14438:14441   */\n  dup3\n    /* \"#utility.yul\":14349:14442   */\n  tag_102\n  jump\t// in\ntag_267:\n    /* \"#utility.yul\":14467:14469   */\n  0x20\n    /* \"#utility.yul\":14462:14465   */\n  dup3\n    /* \"#utility.yul\":14458:14470   */\n  add\n    /* \"#utility.yul\":14451:14470   */\n  swap1\n  pop\n    /* \"#utility.yul\":14110:14476   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14482:14901   */\ntag_30:\n    /* \"#utility.yul\":14648:14652   */\n  0x00\n    /* \"#utility.yul\":14686:14688   */\n  0x20\n    /* \"#utility.yul\":14675:14684   */\n  dup3\n    /* \"#utility.yul\":14671:14689   */\n  add\n    /* \"#utility.yul\":14663:14689   */\n  swap1\n  pop\n    /* \"#utility.yul\":14735:14744   */\n  dup2\n    /* \"#utility.yul\":14729:14733   */\n  dup2\n    /* \"#utility.yul\":14725:14745   */\n  sub\n    /* \"#utility.yul\":14721:14722   */\n  0x00\n    /* \"#utility.yul\":14710:14719   */\n  dup4\n    /* \"#utility.yul\":14706:14723   */\n  add\n    /* \"#utility.yul\":14699:14746   */\n  mstore\n    /* \"#utility.yul\":14763:14894   */\n  tag_269\n    /* \"#utility.yul\":14889:14893   */\n  dup2\n    /* \"#utility.yul\":14763:14894   */\n  tag_103\n  jump\t// in\ntag_269:\n    /* \"#utility.yul\":14755:14894   */\n  swap1\n  pop\n    /* \"#utility.yul\":14482:14901   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14907:15317   */\ntag_34:\n    /* \"#utility.yul\":14947:14954   */\n  0x00\n    /* \"#utility.yul\":14970:14990   */\n  tag_271\n    /* \"#utility.yul\":14988:14989   */\n  dup3\n    /* \"#utility.yul\":14970:14990   */\n  tag_69\n  jump\t// in\ntag_271:\n    /* \"#utility.yul\":14965:14990   */\n  swap2\n  pop\n    /* \"#utility.yul\":15004:15024   */\n  tag_272\n    /* \"#utility.yul\":15022:15023   */\n  dup4\n    /* \"#utility.yul\":15004:15024   */\n  tag_69\n  jump\t// in\ntag_272:\n    /* \"#utility.yul\":14999:15024   */\n  swap3\n  pop\n    /* \"#utility.yul\":15059:15060   */\n  dup3\n    /* \"#utility.yul\":15056:15057   */\n  dup3\n    /* \"#utility.yul\":15052:15061   */\n  mul\n    /* \"#utility.yul\":15081:15111   */\n  tag_273\n    /* \"#utility.yul\":15099:15110   */\n  dup2\n    /* \"#utility.yul\":15081:15111   */\n  tag_69\n  jump\t// in\ntag_273:\n    /* \"#utility.yul\":15070:15111   */\n  swap2\n  pop\n    /* \"#utility.yul\":15260:15261   */\n  dup3\n    /* \"#utility.yul\":15251:15258   */\n  dup3\n    /* \"#utility.yul\":15247:15262   */\n  div\n    /* \"#utility.yul\":15244:15245   */\n  dup5\n    /* \"#utility.yul\":15241:15263   */\n  eq\n    /* \"#utility.yul\":15221:15222   */\n  dup4\n    /* \"#utility.yul\":15214:15223   */\n  iszero\n    /* \"#utility.yul\":15194:15277   */\n  or\n    /* \"#utility.yul\":15171:15310   */\n  tag_274\n  jumpi\n    /* \"#utility.yul\":15290:15308   */\n  tag_275\n  tag_96\n  jump\t// in\ntag_275:\n    /* \"#utility.yul\":15171:15310   */\ntag_274:\n    /* \"#utility.yul\":14955:15317   */\n  pop\n    /* \"#utility.yul\":14907:15317   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":15323:15514   */\ntag_47:\n    /* \"#utility.yul\":15363:15366   */\n  0x00\n    /* \"#utility.yul\":15382:15402   */\n  tag_277\n    /* \"#utility.yul\":15400:15401   */\n  dup3\n    /* \"#utility.yul\":15382:15402   */\n  tag_69\n  jump\t// in\ntag_277:\n    /* \"#utility.yul\":15377:15402   */\n  swap2\n  pop\n    /* \"#utility.yul\":15416:15436   */\n  tag_278\n    /* \"#utility.yul\":15434:15435   */\n  dup4\n    /* \"#utility.yul\":15416:15436   */\n  tag_69\n  jump\t// in\ntag_278:\n    /* \"#utility.yul\":15411:15436   */\n  swap3\n  pop\n    /* \"#utility.yul\":15459:15460   */\n  dup3\n    /* \"#utility.yul\":15456:15457   */\n  dup3\n    /* \"#utility.yul\":15452:15461   */\n  add\n    /* \"#utility.yul\":15445:15461   */\n  swap1\n  pop\n    /* \"#utility.yul\":15480:15483   */\n  dup1\n    /* \"#utility.yul\":15477:15478   */\n  dup3\n    /* \"#utility.yul\":15474:15484   */\n  gt\n    /* \"#utility.yul\":15471:15507   */\n  iszero\n  tag_279\n  jumpi\n    /* \"#utility.yul\":15487:15505   */\n  tag_280\n  tag_96\n  jump\t// in\ntag_280:\n    /* \"#utility.yul\":15471:15507   */\ntag_279:\n    /* \"#utility.yul\":15323:15514   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":15520:15638   */\ntag_104:\n    /* \"#utility.yul\":15607:15631   */\n  tag_282\n    /* \"#utility.yul\":15625:15630   */\n  dup2\n    /* \"#utility.yul\":15607:15631   */\n  tag_69\n  jump\t// in\ntag_282:\n    /* \"#utility.yul\":15602:15605   */\n  dup3\n    /* \"#utility.yul\":15595:15632   */\n  mstore\n    /* \"#utility.yul\":15520:15638   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":15644:16086   */\ntag_51:\n    /* \"#utility.yul\":15793:15797   */\n  0x00\n    /* \"#utility.yul\":15831:15833   */\n  0x60\n    /* \"#utility.yul\":15820:15829   */\n  dup3\n    /* \"#utility.yul\":15816:15834   */\n  add\n    /* \"#utility.yul\":15808:15834   */\n  swap1\n  pop\n    /* \"#utility.yul\":15844:15915   */\n  tag_284\n    /* \"#utility.yul\":15912:15913   */\n  0x00\n    /* \"#utility.yul\":15901:15910   */\n  dup4\n    /* \"#utility.yul\":15897:15914   */\n  add\n    /* \"#utility.yul\":15888:15894   */\n  dup7\n    /* \"#utility.yul\":15844:15915   */\n  tag_92\n  jump\t// in\ntag_284:\n    /* \"#utility.yul\":15925:15997   */\n  tag_285\n    /* \"#utility.yul\":15993:15995   */\n  0x20\n    /* \"#utility.yul\":15982:15991   */\n  dup4\n    /* \"#utility.yul\":15978:15996   */\n  add\n    /* \"#utility.yul\":15969:15975   */\n  dup6\n    /* \"#utility.yul\":15925:15997   */\n  tag_104\n  jump\t// in\ntag_285:\n    /* \"#utility.yul\":16007:16079   */\n  tag_286\n    /* \"#utility.yul\":16075:16077   */\n  0x40\n    /* \"#utility.yul\":16064:16073   */\n  dup4\n    /* \"#utility.yul\":16060:16078   */\n  add\n    /* \"#utility.yul\":16051:16057   */\n  dup5\n    /* \"#utility.yul\":16007:16079   */\n  tag_104\n  jump\t// in\ntag_286:\n    /* \"#utility.yul\":15644:16086   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":16092:16314   */\ntag_55:\n    /* \"#utility.yul\":16185:16189   */\n  0x00\n    /* \"#utility.yul\":16223:16225   */\n  0x20\n    /* \"#utility.yul\":16212:16221   */\n  dup3\n    /* \"#utility.yul\":16208:16226   */\n  add\n    /* \"#utility.yul\":16200:16226   */\n  swap1\n  pop\n    /* \"#utility.yul\":16236:16307   */\n  tag_288\n    /* \"#utility.yul\":16304:16305   */\n  0x00\n    /* \"#utility.yul\":16293:16302   */\n  dup4\n    /* \"#utility.yul\":16289:16306   */\n  add\n    /* \"#utility.yul\":16280:16286   */\n  dup5\n    /* \"#utility.yul\":16236:16307   */\n  tag_104\n  jump\t// in\ntag_288:\n    /* \"#utility.yul\":16092:16314   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CustomToken.sol\":329:2379  contract CustomToken is ERC20, Ownable {... */\ntag_36:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CustomToken.sol\":329:2379  contract CustomToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x42966c68\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x18160ddd\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x04787ca2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x135d088d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CustomToken.sol\":2202:2376  function setImageURI(string memory newImageURI) external onlyOwner {... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CustomToken.sol\":476:498  string public imageURI */\n    tag_6:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CustomToken.sol\":1525:1726  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/CustomToken.sol\":1906:2038  function burn(uint256 amount) external {... */\n    tag_11:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"contracts/CustomToken.sol\":2202:2376  function setImageURI(string memory newImageURI) external onlyOwner {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_86:\n        /* \"contracts/CustomToken.sol\":2313:2314  0 */\n      0x00\n        /* \"contracts/CustomToken.sol\":2290:2301  newImageURI */\n      dup2\n        /* \"contracts/CustomToken.sol\":2284:2309  bytes(newImageURI).length */\n      mload\n        /* \"contracts/CustomToken.sol\":2284:2314  bytes(newImageURI).length == 0 */\n      sub\n        /* \"contracts/CustomToken.sol\":2280:2335  if (bytes(newImageURI).length == 0) revert(\"Empty URI\") */\n      tag_89\n      jumpi\n        /* \"contracts/CustomToken.sol\":2316:2335  revert(\"Empty URI\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CustomToken.sol\":2280:2335  if (bytes(newImageURI).length == 0) revert(\"Empty URI\") */\n    tag_89:\n        /* \"contracts/CustomToken.sol\":2357:2368  newImageURI */\n      dup1\n        /* \"contracts/CustomToken.sol\":2346:2354  imageURI */\n      0x06\n        /* \"contracts/CustomToken.sol\":2346:2368  imageURI = newImageURI */\n      swap1\n      dup2\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      pop\n        /* \"contracts/CustomToken.sol\":2202:2376  function setImageURI(string memory newImageURI) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_97\n      swap1\n      tag_96\n      jump\t// in\n    tag_97:\n      dup1\n      iszero\n      tag_98\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_99\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_98)\n    tag_99:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_100:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_100\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CustomToken.sol\":476:498  string public imageURI */\n    tag_37:\n      0x06\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_96\n      jump\t// in\n    tag_106:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_107\n      swap1\n      tag_96\n      jump\t// in\n    tag_107:\n      dup1\n      iszero\n      tag_108\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_109\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_108)\n    tag_109:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_110:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_110\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CustomToken.sol\":1525:1726  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_120:\n        /* \"contracts/CustomToken.sol\":1615:1616  0 */\n      0x00\n        /* \"contracts/CustomToken.sol\":1601:1617  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CustomToken.sol\":1601:1603  to */\n      dup3\n        /* \"contracts/CustomToken.sol\":1601:1617  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/CustomToken.sol\":1597:1641  if (to == address(0)) revert(\"Zero address\") */\n      tag_122\n      jumpi\n        /* \"contracts/CustomToken.sol\":1619:1641  revert(\"Zero address\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CustomToken.sol\":1597:1641  if (to == address(0)) revert(\"Zero address\") */\n    tag_122:\n        /* \"contracts/CustomToken.sol\":1666:1667  0 */\n      0x00\n        /* \"contracts/CustomToken.sol\":1656:1662  amount */\n      dup2\n        /* \"contracts/CustomToken.sol\":1656:1667  amount == 0 */\n      sub\n        /* \"contracts/CustomToken.sol\":1652:1690  if (amount == 0) revert(\"Zero amount\") */\n      tag_125\n      jumpi\n        /* \"contracts/CustomToken.sol\":1669:1690  revert(\"Zero amount\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CustomToken.sol\":1652:1690  if (amount == 0) revert(\"Zero amount\") */\n    tag_125:\n        /* \"contracts/CustomToken.sol\":1701:1718  _mint(to, amount) */\n      tag_128\n        /* \"contracts/CustomToken.sol\":1707:1709  to */\n      dup3\n        /* \"contracts/CustomToken.sol\":1711:1717  amount */\n      dup3\n        /* \"contracts/CustomToken.sol\":1701:1706  _mint */\n      tag_129\n        /* \"contracts/CustomToken.sol\":1701:1718  _mint(to, amount) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/CustomToken.sol\":1525:1726  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CustomToken.sol\":1906:2038  function burn(uint256 amount) external {... */\n    tag_58:\n        /* \"contracts/CustomToken.sol\":1970:1971  0 */\n      0x00\n        /* \"contracts/CustomToken.sol\":1960:1966  amount */\n      dup2\n        /* \"contracts/CustomToken.sol\":1960:1971  amount == 0 */\n      sub\n        /* \"contracts/CustomToken.sol\":1956:1994  if (amount == 0) revert(\"Zero amount\") */\n      tag_131\n      jumpi\n        /* \"contracts/CustomToken.sol\":1973:1994  revert(\"Zero amount\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_127\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CustomToken.sol\":1956:1994  if (amount == 0) revert(\"Zero amount\") */\n    tag_131:\n        /* \"contracts/CustomToken.sol\":2005:2030  _burn(msg.sender, amount) */\n      tag_133\n        /* \"contracts/CustomToken.sol\":2011:2021  msg.sender */\n      caller\n        /* \"contracts/CustomToken.sol\":2023:2029  amount */\n      dup3\n        /* \"contracts/CustomToken.sol\":2005:2010  _burn */\n      tag_134\n        /* \"contracts/CustomToken.sol\":2005:2030  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_133:\n        /* \"contracts/CustomToken.sol\":1906:2038  function burn(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_143\n      swap1\n      tag_96\n      jump\t// in\n    tag_143:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_144\n      swap1\n      tag_96\n      jump\t// in\n    tag_144:\n      dup1\n      iszero\n      tag_145\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_146\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_145)\n    tag_146:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_147:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_147\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_161\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_176\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_197\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_202)\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_205\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_206)\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_207\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_208:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_209:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_210:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_211:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_212:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      dup1\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:682   */\n    tag_213:\n        /* \"#utility.yul\":621:627   */\n      0x00\n        /* \"#utility.yul\":672:674   */\n      0x1f\n        /* \"#utility.yul\":668:675   */\n      not\n        /* \"#utility.yul\":663:665   */\n      0x1f\n        /* \"#utility.yul\":656:661   */\n      dup4\n        /* \"#utility.yul\":652:666   */\n      add\n        /* \"#utility.yul\":648:676   */\n      and\n        /* \"#utility.yul\":638:676   */\n      swap1\n      pop\n        /* \"#utility.yul\":580:682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":688:868   */\n    tag_214:\n        /* \"#utility.yul\":736:813   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":733:734   */\n      0x00\n        /* \"#utility.yul\":726:814   */\n      mstore\n        /* \"#utility.yul\":833:837   */\n      0x41\n        /* \"#utility.yul\":830:831   */\n      0x04\n        /* \"#utility.yul\":823:838   */\n      mstore\n        /* \"#utility.yul\":857:861   */\n      0x24\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":847:862   */\n      revert\n        /* \"#utility.yul\":874:1155   */\n    tag_215:\n        /* \"#utility.yul\":957:984   */\n      tag_270\n        /* \"#utility.yul\":979:983   */\n      dup3\n        /* \"#utility.yul\":957:984   */\n      tag_213\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":949:955   */\n      dup2\n        /* \"#utility.yul\":945:985   */\n      add\n        /* \"#utility.yul\":1087:1093   */\n      dup2\n        /* \"#utility.yul\":1075:1085   */\n      dup2\n        /* \"#utility.yul\":1072:1094   */\n      lt\n        /* \"#utility.yul\":1051:1069   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1039:1049   */\n      dup3\n        /* \"#utility.yul\":1036:1070   */\n      gt\n        /* \"#utility.yul\":1033:1095   */\n      or\n        /* \"#utility.yul\":1030:1118   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":1098:1116   */\n      tag_272\n      tag_214\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":1030:1118   */\n    tag_271:\n        /* \"#utility.yul\":1138:1148   */\n      dup1\n        /* \"#utility.yul\":1134:1136   */\n      0x40\n        /* \"#utility.yul\":1127:1149   */\n      mstore\n        /* \"#utility.yul\":917:1155   */\n      pop\n        /* \"#utility.yul\":874:1155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1161:1290   */\n    tag_216:\n        /* \"#utility.yul\":1195:1201   */\n      0x00\n        /* \"#utility.yul\":1222:1242   */\n      tag_274\n      tag_208\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":1212:1242   */\n      swap1\n      pop\n        /* \"#utility.yul\":1251:1284   */\n      tag_275\n        /* \"#utility.yul\":1279:1283   */\n      dup3\n        /* \"#utility.yul\":1271:1277   */\n      dup3\n        /* \"#utility.yul\":1251:1284   */\n      tag_215\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":1161:1290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1296:1604   */\n    tag_217:\n        /* \"#utility.yul\":1358:1362   */\n      0x00\n        /* \"#utility.yul\":1448:1466   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1440:1446   */\n      dup3\n        /* \"#utility.yul\":1437:1467   */\n      gt\n        /* \"#utility.yul\":1434:1490   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":1470:1488   */\n      tag_278\n      tag_214\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":1434:1490   */\n    tag_277:\n        /* \"#utility.yul\":1508:1537   */\n      tag_279\n        /* \"#utility.yul\":1530:1536   */\n      dup3\n        /* \"#utility.yul\":1508:1537   */\n      tag_213\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":1500:1537   */\n      swap1\n      pop\n        /* \"#utility.yul\":1592:1596   */\n      0x20\n        /* \"#utility.yul\":1586:1590   */\n      dup2\n        /* \"#utility.yul\":1582:1597   */\n      add\n        /* \"#utility.yul\":1574:1597   */\n      swap1\n      pop\n        /* \"#utility.yul\":1296:1604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1758   */\n    tag_218:\n        /* \"#utility.yul\":1708:1714   */\n      dup3\n        /* \"#utility.yul\":1703:1706   */\n      dup2\n        /* \"#utility.yul\":1698:1701   */\n      dup4\n        /* \"#utility.yul\":1685:1715   */\n      calldatacopy\n        /* \"#utility.yul\":1749:1750   */\n      0x00\n        /* \"#utility.yul\":1740:1746   */\n      dup4\n        /* \"#utility.yul\":1735:1738   */\n      dup4\n        /* \"#utility.yul\":1731:1747   */\n      add\n        /* \"#utility.yul\":1724:1751   */\n      mstore\n        /* \"#utility.yul\":1610:1758   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1764:2189   */\n    tag_219:\n        /* \"#utility.yul\":1842:1847   */\n      0x00\n        /* \"#utility.yul\":1867:1933   */\n      tag_282\n        /* \"#utility.yul\":1883:1932   */\n      tag_283\n        /* \"#utility.yul\":1925:1931   */\n      dup5\n        /* \"#utility.yul\":1883:1932   */\n      tag_217\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":1867:1933   */\n      tag_216\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":1858:1933   */\n      swap1\n      pop\n        /* \"#utility.yul\":1956:1962   */\n      dup3\n        /* \"#utility.yul\":1949:1954   */\n      dup2\n        /* \"#utility.yul\":1942:1963   */\n      mstore\n        /* \"#utility.yul\":1994:1998   */\n      0x20\n        /* \"#utility.yul\":1987:1992   */\n      dup2\n        /* \"#utility.yul\":1983:1999   */\n      add\n        /* \"#utility.yul\":2032:2035   */\n      dup5\n        /* \"#utility.yul\":2023:2029   */\n      dup5\n        /* \"#utility.yul\":2018:2021   */\n      dup5\n        /* \"#utility.yul\":2014:2030   */\n      add\n        /* \"#utility.yul\":2011:2036   */\n      gt\n        /* \"#utility.yul\":2008:2120   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":2039:2118   */\n      tag_285\n      tag_212\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":2008:2120   */\n    tag_284:\n        /* \"#utility.yul\":2129:2183   */\n      tag_286\n        /* \"#utility.yul\":2176:2182   */\n      dup5\n        /* \"#utility.yul\":2171:2174   */\n      dup3\n        /* \"#utility.yul\":2166:2169   */\n      dup6\n        /* \"#utility.yul\":2129:2183   */\n      tag_218\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":1848:2189   */\n      pop\n        /* \"#utility.yul\":1764:2189   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2549   */\n    tag_220:\n        /* \"#utility.yul\":2265:2270   */\n      0x00\n        /* \"#utility.yul\":2314:2317   */\n      dup3\n        /* \"#utility.yul\":2307:2311   */\n      0x1f\n        /* \"#utility.yul\":2299:2305   */\n      dup4\n        /* \"#utility.yul\":2295:2312   */\n      add\n        /* \"#utility.yul\":2291:2318   */\n      slt\n        /* \"#utility.yul\":2281:2403   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":2322:2401   */\n      tag_289\n      tag_211\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":2281:2403   */\n    tag_288:\n        /* \"#utility.yul\":2439:2445   */\n      dup2\n        /* \"#utility.yul\":2426:2446   */\n      calldataload\n        /* \"#utility.yul\":2464:2543   */\n      tag_290\n        /* \"#utility.yul\":2539:2542   */\n      dup5\n        /* \"#utility.yul\":2531:2537   */\n      dup3\n        /* \"#utility.yul\":2524:2528   */\n      0x20\n        /* \"#utility.yul\":2516:2522   */\n      dup7\n        /* \"#utility.yul\":2512:2529   */\n      add\n        /* \"#utility.yul\":2464:2543   */\n      tag_219\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2455:2543   */\n      swap2\n      pop\n        /* \"#utility.yul\":2271:2549   */\n      pop\n        /* \"#utility.yul\":2209:2549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2555:3064   */\n    tag_24:\n        /* \"#utility.yul\":2624:2630   */\n      0x00\n        /* \"#utility.yul\":2673:2675   */\n      0x20\n        /* \"#utility.yul\":2661:2670   */\n      dup3\n        /* \"#utility.yul\":2652:2659   */\n      dup5\n        /* \"#utility.yul\":2648:2671   */\n      sub\n        /* \"#utility.yul\":2644:2676   */\n      slt\n        /* \"#utility.yul\":2641:2760   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":2679:2758   */\n      tag_293\n      tag_209\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":2641:2760   */\n    tag_292:\n        /* \"#utility.yul\":2827:2828   */\n      0x00\n        /* \"#utility.yul\":2816:2825   */\n      dup3\n        /* \"#utility.yul\":2812:2829   */\n      add\n        /* \"#utility.yul\":2799:2830   */\n      calldataload\n        /* \"#utility.yul\":2857:2875   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2849:2855   */\n      dup2\n        /* \"#utility.yul\":2846:2876   */\n      gt\n        /* \"#utility.yul\":2843:2960   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":2879:2958   */\n      tag_295\n      tag_210\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":2843:2960   */\n    tag_294:\n        /* \"#utility.yul\":2984:3047   */\n      tag_296\n        /* \"#utility.yul\":3039:3046   */\n      dup5\n        /* \"#utility.yul\":3030:3036   */\n      dup3\n        /* \"#utility.yul\":3019:3028   */\n      dup6\n        /* \"#utility.yul\":3015:3037   */\n      add\n        /* \"#utility.yul\":2984:3047   */\n      tag_220\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":2974:3047   */\n      swap2\n      pop\n        /* \"#utility.yul\":2770:3057   */\n      pop\n        /* \"#utility.yul\":2555:3064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3070:3169   */\n    tag_221:\n        /* \"#utility.yul\":3122:3128   */\n      0x00\n        /* \"#utility.yul\":3156:3161   */\n      dup2\n        /* \"#utility.yul\":3150:3162   */\n      mload\n        /* \"#utility.yul\":3140:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3070:3169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3175:3344   */\n    tag_222:\n        /* \"#utility.yul\":3259:3270   */\n      0x00\n        /* \"#utility.yul\":3293:3299   */\n      dup3\n        /* \"#utility.yul\":3288:3291   */\n      dup3\n        /* \"#utility.yul\":3281:3300   */\n      mstore\n        /* \"#utility.yul\":3333:3337   */\n      0x20\n        /* \"#utility.yul\":3328:3331   */\n      dup3\n        /* \"#utility.yul\":3324:3338   */\n      add\n        /* \"#utility.yul\":3309:3338   */\n      swap1\n      pop\n        /* \"#utility.yul\":3175:3344   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3350:3489   */\n    tag_223:\n        /* \"#utility.yul\":3439:3445   */\n      dup3\n        /* \"#utility.yul\":3434:3437   */\n      dup2\n        /* \"#utility.yul\":3429:3432   */\n      dup4\n        /* \"#utility.yul\":3423:3446   */\n      mcopy\n        /* \"#utility.yul\":3480:3481   */\n      0x00\n        /* \"#utility.yul\":3471:3477   */\n      dup4\n        /* \"#utility.yul\":3466:3469   */\n      dup4\n        /* \"#utility.yul\":3462:3478   */\n      add\n        /* \"#utility.yul\":3455:3482   */\n      mstore\n        /* \"#utility.yul\":3350:3489   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3495:3872   */\n    tag_224:\n        /* \"#utility.yul\":3583:3586   */\n      0x00\n        /* \"#utility.yul\":3611:3650   */\n      tag_301\n        /* \"#utility.yul\":3644:3649   */\n      dup3\n        /* \"#utility.yul\":3611:3650   */\n      tag_221\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":3666:3737   */\n      tag_302\n        /* \"#utility.yul\":3730:3736   */\n      dup2\n        /* \"#utility.yul\":3725:3728   */\n      dup6\n        /* \"#utility.yul\":3666:3737   */\n      tag_222\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3659:3737   */\n      swap4\n      pop\n        /* \"#utility.yul\":3746:3811   */\n      tag_303\n        /* \"#utility.yul\":3804:3810   */\n      dup2\n        /* \"#utility.yul\":3799:3802   */\n      dup6\n        /* \"#utility.yul\":3792:3796   */\n      0x20\n        /* \"#utility.yul\":3785:3790   */\n      dup7\n        /* \"#utility.yul\":3781:3797   */\n      add\n        /* \"#utility.yul\":3746:3811   */\n      tag_223\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":3836:3865   */\n      tag_304\n        /* \"#utility.yul\":3858:3864   */\n      dup2\n        /* \"#utility.yul\":3836:3865   */\n      tag_213\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3831:3834   */\n      dup5\n        /* \"#utility.yul\":3827:3866   */\n      add\n        /* \"#utility.yul\":3820:3866   */\n      swap2\n      pop\n        /* \"#utility.yul\":3587:3872   */\n      pop\n        /* \"#utility.yul\":3495:3872   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3878:4191   */\n    tag_29:\n        /* \"#utility.yul\":3991:3995   */\n      0x00\n        /* \"#utility.yul\":4029:4031   */\n      0x20\n        /* \"#utility.yul\":4018:4027   */\n      dup3\n        /* \"#utility.yul\":4014:4032   */\n      add\n        /* \"#utility.yul\":4006:4032   */\n      swap1\n      pop\n        /* \"#utility.yul\":4078:4087   */\n      dup2\n        /* \"#utility.yul\":4072:4076   */\n      dup2\n        /* \"#utility.yul\":4068:4088   */\n      sub\n        /* \"#utility.yul\":4064:4065   */\n      0x00\n        /* \"#utility.yul\":4053:4062   */\n      dup4\n        /* \"#utility.yul\":4049:4066   */\n      add\n        /* \"#utility.yul\":4042:4089   */\n      mstore\n        /* \"#utility.yul\":4106:4184   */\n      tag_306\n        /* \"#utility.yul\":4179:4183   */\n      dup2\n        /* \"#utility.yul\":4170:4176   */\n      dup5\n        /* \"#utility.yul\":4106:4184   */\n      tag_224\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4098:4184   */\n      swap1\n      pop\n        /* \"#utility.yul\":3878:4191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4197:4323   */\n    tag_225:\n        /* \"#utility.yul\":4234:4241   */\n      0x00\n        /* \"#utility.yul\":4274:4316   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4267:4272   */\n      dup3\n        /* \"#utility.yul\":4263:4317   */\n      and\n        /* \"#utility.yul\":4252:4317   */\n      swap1\n      pop\n        /* \"#utility.yul\":4197:4323   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4329:4425   */\n    tag_226:\n        /* \"#utility.yul\":4366:4373   */\n      0x00\n        /* \"#utility.yul\":4395:4419   */\n      tag_309\n        /* \"#utility.yul\":4413:4418   */\n      dup3\n        /* \"#utility.yul\":4395:4419   */\n      tag_225\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4384:4419   */\n      swap1\n      pop\n        /* \"#utility.yul\":4329:4425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4431:4553   */\n    tag_227:\n        /* \"#utility.yul\":4504:4528   */\n      tag_311\n        /* \"#utility.yul\":4522:4527   */\n      dup2\n        /* \"#utility.yul\":4504:4528   */\n      tag_226\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":4497:4502   */\n      dup2\n        /* \"#utility.yul\":4494:4529   */\n      eq\n        /* \"#utility.yul\":4484:4547   */\n      tag_312\n      jumpi\n        /* \"#utility.yul\":4543:4544   */\n      0x00\n        /* \"#utility.yul\":4540:4541   */\n      dup1\n        /* \"#utility.yul\":4533:4545   */\n      revert\n        /* \"#utility.yul\":4484:4547   */\n    tag_312:\n        /* \"#utility.yul\":4431:4553   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4559:4698   */\n    tag_228:\n        /* \"#utility.yul\":4605:4610   */\n      0x00\n        /* \"#utility.yul\":4643:4649   */\n      dup2\n        /* \"#utility.yul\":4630:4650   */\n      calldataload\n        /* \"#utility.yul\":4621:4650   */\n      swap1\n      pop\n        /* \"#utility.yul\":4659:4692   */\n      tag_314\n        /* \"#utility.yul\":4686:4691   */\n      dup2\n        /* \"#utility.yul\":4659:4692   */\n      tag_227\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":4559:4698   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4704:4781   */\n    tag_229:\n        /* \"#utility.yul\":4741:4748   */\n      0x00\n        /* \"#utility.yul\":4770:4775   */\n      dup2\n        /* \"#utility.yul\":4759:4775   */\n      swap1\n      pop\n        /* \"#utility.yul\":4704:4781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4787:4909   */\n    tag_230:\n        /* \"#utility.yul\":4860:4884   */\n      tag_317\n        /* \"#utility.yul\":4878:4883   */\n      dup2\n        /* \"#utility.yul\":4860:4884   */\n      tag_229\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":4853:4858   */\n      dup2\n        /* \"#utility.yul\":4850:4885   */\n      eq\n        /* \"#utility.yul\":4840:4903   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":4899:4900   */\n      0x00\n        /* \"#utility.yul\":4896:4897   */\n      dup1\n        /* \"#utility.yul\":4889:4901   */\n      revert\n        /* \"#utility.yul\":4840:4903   */\n    tag_318:\n        /* \"#utility.yul\":4787:4909   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4915:5054   */\n    tag_231:\n        /* \"#utility.yul\":4961:4966   */\n      0x00\n        /* \"#utility.yul\":4999:5005   */\n      dup2\n        /* \"#utility.yul\":4986:5006   */\n      calldataload\n        /* \"#utility.yul\":4977:5006   */\n      swap1\n      pop\n        /* \"#utility.yul\":5015:5048   */\n      tag_320\n        /* \"#utility.yul\":5042:5047   */\n      dup2\n        /* \"#utility.yul\":5015:5048   */\n      tag_230\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":4915:5054   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5060:5534   */\n    tag_32:\n        /* \"#utility.yul\":5128:5134   */\n      0x00\n        /* \"#utility.yul\":5136:5142   */\n      dup1\n        /* \"#utility.yul\":5185:5187   */\n      0x40\n        /* \"#utility.yul\":5173:5182   */\n      dup4\n        /* \"#utility.yul\":5164:5171   */\n      dup6\n        /* \"#utility.yul\":5160:5183   */\n      sub\n        /* \"#utility.yul\":5156:5188   */\n      slt\n        /* \"#utility.yul\":5153:5272   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":5191:5270   */\n      tag_323\n      tag_209\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5153:5272   */\n    tag_322:\n        /* \"#utility.yul\":5311:5312   */\n      0x00\n        /* \"#utility.yul\":5336:5389   */\n      tag_324\n        /* \"#utility.yul\":5381:5388   */\n      dup6\n        /* \"#utility.yul\":5372:5378   */\n      dup3\n        /* \"#utility.yul\":5361:5370   */\n      dup7\n        /* \"#utility.yul\":5357:5379   */\n      add\n        /* \"#utility.yul\":5336:5389   */\n      tag_228\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5326:5389   */\n      swap3\n      pop\n        /* \"#utility.yul\":5282:5399   */\n      pop\n        /* \"#utility.yul\":5438:5440   */\n      0x20\n        /* \"#utility.yul\":5464:5517   */\n      tag_325\n        /* \"#utility.yul\":5509:5516   */\n      dup6\n        /* \"#utility.yul\":5500:5506   */\n      dup3\n        /* \"#utility.yul\":5489:5498   */\n      dup7\n        /* \"#utility.yul\":5485:5507   */\n      add\n        /* \"#utility.yul\":5464:5517   */\n      tag_231\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":5454:5517   */\n      swap2\n      pop\n        /* \"#utility.yul\":5409:5527   */\n      pop\n        /* \"#utility.yul\":5060:5534   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5630   */\n    tag_232:\n        /* \"#utility.yul\":5574:5581   */\n      0x00\n        /* \"#utility.yul\":5617:5622   */\n      dup2\n        /* \"#utility.yul\":5610:5623   */\n      iszero\n        /* \"#utility.yul\":5603:5624   */\n      iszero\n        /* \"#utility.yul\":5592:5624   */\n      swap1\n      pop\n        /* \"#utility.yul\":5540:5630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5636:5745   */\n    tag_233:\n        /* \"#utility.yul\":5717:5738   */\n      tag_328\n        /* \"#utility.yul\":5732:5737   */\n      dup2\n        /* \"#utility.yul\":5717:5738   */\n      tag_232\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":5712:5715   */\n      dup3\n        /* \"#utility.yul\":5705:5739   */\n      mstore\n        /* \"#utility.yul\":5636:5745   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5751:5961   */\n    tag_35:\n        /* \"#utility.yul\":5838:5842   */\n      0x00\n        /* \"#utility.yul\":5876:5878   */\n      0x20\n        /* \"#utility.yul\":5865:5874   */\n      dup3\n        /* \"#utility.yul\":5861:5879   */\n      add\n        /* \"#utility.yul\":5853:5879   */\n      swap1\n      pop\n        /* \"#utility.yul\":5889:5954   */\n      tag_330\n        /* \"#utility.yul\":5951:5952   */\n      0x00\n        /* \"#utility.yul\":5940:5949   */\n      dup4\n        /* \"#utility.yul\":5936:5953   */\n      add\n        /* \"#utility.yul\":5927:5933   */\n      dup5\n        /* \"#utility.yul\":5889:5954   */\n      tag_233\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":5751:5961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5967:6085   */\n    tag_234:\n        /* \"#utility.yul\":6054:6078   */\n      tag_332\n        /* \"#utility.yul\":6072:6077   */\n      dup2\n        /* \"#utility.yul\":6054:6078   */\n      tag_229\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6049:6052   */\n      dup3\n        /* \"#utility.yul\":6042:6079   */\n      mstore\n        /* \"#utility.yul\":5967:6085   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6091:6313   */\n    tag_42:\n        /* \"#utility.yul\":6184:6188   */\n      0x00\n        /* \"#utility.yul\":6222:6224   */\n      0x20\n        /* \"#utility.yul\":6211:6220   */\n      dup3\n        /* \"#utility.yul\":6207:6225   */\n      add\n        /* \"#utility.yul\":6199:6225   */\n      swap1\n      pop\n        /* \"#utility.yul\":6235:6306   */\n      tag_334\n        /* \"#utility.yul\":6303:6304   */\n      0x00\n        /* \"#utility.yul\":6292:6301   */\n      dup4\n        /* \"#utility.yul\":6288:6305   */\n      add\n        /* \"#utility.yul\":6279:6285   */\n      dup5\n        /* \"#utility.yul\":6235:6306   */\n      tag_234\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":6091:6313   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6319:6938   */\n    tag_45:\n        /* \"#utility.yul\":6396:6402   */\n      0x00\n        /* \"#utility.yul\":6404:6410   */\n      dup1\n        /* \"#utility.yul\":6412:6418   */\n      0x00\n        /* \"#utility.yul\":6461:6463   */\n      0x60\n        /* \"#utility.yul\":6449:6458   */\n      dup5\n        /* \"#utility.yul\":6440:6447   */\n      dup7\n        /* \"#utility.yul\":6436:6459   */\n      sub\n        /* \"#utility.yul\":6432:6464   */\n      slt\n        /* \"#utility.yul\":6429:6548   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":6467:6546   */\n      tag_337\n      tag_209\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":6429:6548   */\n    tag_336:\n        /* \"#utility.yul\":6587:6588   */\n      0x00\n        /* \"#utility.yul\":6612:6665   */\n      tag_338\n        /* \"#utility.yul\":6657:6664   */\n      dup7\n        /* \"#utility.yul\":6648:6654   */\n      dup3\n        /* \"#utility.yul\":6637:6646   */\n      dup8\n        /* \"#utility.yul\":6633:6655   */\n      add\n        /* \"#utility.yul\":6612:6665   */\n      tag_228\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":6602:6665   */\n      swap4\n      pop\n        /* \"#utility.yul\":6558:6675   */\n      pop\n        /* \"#utility.yul\":6714:6716   */\n      0x20\n        /* \"#utility.yul\":6740:6793   */\n      tag_339\n        /* \"#utility.yul\":6785:6792   */\n      dup7\n        /* \"#utility.yul\":6776:6782   */\n      dup3\n        /* \"#utility.yul\":6765:6774   */\n      dup8\n        /* \"#utility.yul\":6761:6783   */\n      add\n        /* \"#utility.yul\":6740:6793   */\n      tag_228\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":6730:6793   */\n      swap3\n      pop\n        /* \"#utility.yul\":6685:6803   */\n      pop\n        /* \"#utility.yul\":6842:6844   */\n      0x40\n        /* \"#utility.yul\":6868:6921   */\n      tag_340\n        /* \"#utility.yul\":6913:6920   */\n      dup7\n        /* \"#utility.yul\":6904:6910   */\n      dup3\n        /* \"#utility.yul\":6893:6902   */\n      dup8\n        /* \"#utility.yul\":6889:6911   */\n      add\n        /* \"#utility.yul\":6868:6921   */\n      tag_231\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":6858:6921   */\n      swap2\n      pop\n        /* \"#utility.yul\":6813:6931   */\n      pop\n        /* \"#utility.yul\":6319:6938   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6944:7030   */\n    tag_235:\n        /* \"#utility.yul\":6979:6986   */\n      0x00\n        /* \"#utility.yul\":7019:7023   */\n      0xff\n        /* \"#utility.yul\":7012:7017   */\n      dup3\n        /* \"#utility.yul\":7008:7024   */\n      and\n        /* \"#utility.yul\":6997:7024   */\n      swap1\n      pop\n        /* \"#utility.yul\":6944:7030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7036:7148   */\n    tag_236:\n        /* \"#utility.yul\":7119:7141   */\n      tag_343\n        /* \"#utility.yul\":7135:7140   */\n      dup2\n        /* \"#utility.yul\":7119:7141   */\n      tag_235\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":7114:7117   */\n      dup3\n        /* \"#utility.yul\":7107:7142   */\n      mstore\n        /* \"#utility.yul\":7036:7148   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7154:7368   */\n    tag_51:\n        /* \"#utility.yul\":7243:7247   */\n      0x00\n        /* \"#utility.yul\":7281:7283   */\n      0x20\n        /* \"#utility.yul\":7270:7279   */\n      dup3\n        /* \"#utility.yul\":7266:7284   */\n      add\n        /* \"#utility.yul\":7258:7284   */\n      swap1\n      pop\n        /* \"#utility.yul\":7294:7361   */\n      tag_345\n        /* \"#utility.yul\":7358:7359   */\n      0x00\n        /* \"#utility.yul\":7347:7356   */\n      dup4\n        /* \"#utility.yul\":7343:7360   */\n      add\n        /* \"#utility.yul\":7334:7340   */\n      dup5\n        /* \"#utility.yul\":7294:7361   */\n      tag_236\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":7154:7368   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7374:7703   */\n    tag_57:\n        /* \"#utility.yul\":7433:7439   */\n      0x00\n        /* \"#utility.yul\":7482:7484   */\n      0x20\n        /* \"#utility.yul\":7470:7479   */\n      dup3\n        /* \"#utility.yul\":7461:7468   */\n      dup5\n        /* \"#utility.yul\":7457:7480   */\n      sub\n        /* \"#utility.yul\":7453:7485   */\n      slt\n        /* \"#utility.yul\":7450:7569   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":7488:7567   */\n      tag_348\n      tag_209\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":7450:7569   */\n    tag_347:\n        /* \"#utility.yul\":7608:7609   */\n      0x00\n        /* \"#utility.yul\":7633:7686   */\n      tag_349\n        /* \"#utility.yul\":7678:7685   */\n      dup5\n        /* \"#utility.yul\":7669:7675   */\n      dup3\n        /* \"#utility.yul\":7658:7667   */\n      dup6\n        /* \"#utility.yul\":7654:7676   */\n      add\n        /* \"#utility.yul\":7633:7686   */\n      tag_231\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":7623:7686   */\n      swap2\n      pop\n        /* \"#utility.yul\":7579:7696   */\n      pop\n        /* \"#utility.yul\":7374:7703   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7709:8038   */\n    tag_61:\n        /* \"#utility.yul\":7768:7774   */\n      0x00\n        /* \"#utility.yul\":7817:7819   */\n      0x20\n        /* \"#utility.yul\":7805:7814   */\n      dup3\n        /* \"#utility.yul\":7796:7803   */\n      dup5\n        /* \"#utility.yul\":7792:7815   */\n      sub\n        /* \"#utility.yul\":7788:7820   */\n      slt\n        /* \"#utility.yul\":7785:7904   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":7823:7902   */\n      tag_352\n      tag_209\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":7785:7904   */\n    tag_351:\n        /* \"#utility.yul\":7943:7944   */\n      0x00\n        /* \"#utility.yul\":7968:8021   */\n      tag_353\n        /* \"#utility.yul\":8013:8020   */\n      dup5\n        /* \"#utility.yul\":8004:8010   */\n      dup3\n        /* \"#utility.yul\":7993:8002   */\n      dup6\n        /* \"#utility.yul\":7989:8011   */\n      add\n        /* \"#utility.yul\":7968:8021   */\n      tag_228\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":7958:8021   */\n      swap2\n      pop\n        /* \"#utility.yul\":7914:8031   */\n      pop\n        /* \"#utility.yul\":7709:8038   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8044:8162   */\n    tag_237:\n        /* \"#utility.yul\":8131:8155   */\n      tag_355\n        /* \"#utility.yul\":8149:8154   */\n      dup2\n        /* \"#utility.yul\":8131:8155   */\n      tag_226\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":8126:8129   */\n      dup3\n        /* \"#utility.yul\":8119:8156   */\n      mstore\n        /* \"#utility.yul\":8044:8162   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8168:8390   */\n    tag_69:\n        /* \"#utility.yul\":8261:8265   */\n      0x00\n        /* \"#utility.yul\":8299:8301   */\n      0x20\n        /* \"#utility.yul\":8288:8297   */\n      dup3\n        /* \"#utility.yul\":8284:8302   */\n      add\n        /* \"#utility.yul\":8276:8302   */\n      swap1\n      pop\n        /* \"#utility.yul\":8312:8383   */\n      tag_357\n        /* \"#utility.yul\":8380:8381   */\n      0x00\n        /* \"#utility.yul\":8369:8378   */\n      dup4\n        /* \"#utility.yul\":8365:8382   */\n      add\n        /* \"#utility.yul\":8356:8362   */\n      dup5\n        /* \"#utility.yul\":8312:8383   */\n      tag_237\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":8168:8390   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8396:8870   */\n    tag_79:\n        /* \"#utility.yul\":8464:8470   */\n      0x00\n        /* \"#utility.yul\":8472:8478   */\n      dup1\n        /* \"#utility.yul\":8521:8523   */\n      0x40\n        /* \"#utility.yul\":8509:8518   */\n      dup4\n        /* \"#utility.yul\":8500:8507   */\n      dup6\n        /* \"#utility.yul\":8496:8519   */\n      sub\n        /* \"#utility.yul\":8492:8524   */\n      slt\n        /* \"#utility.yul\":8489:8608   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":8527:8606   */\n      tag_360\n      tag_209\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":8489:8608   */\n    tag_359:\n        /* \"#utility.yul\":8647:8648   */\n      0x00\n        /* \"#utility.yul\":8672:8725   */\n      tag_361\n        /* \"#utility.yul\":8717:8724   */\n      dup6\n        /* \"#utility.yul\":8708:8714   */\n      dup3\n        /* \"#utility.yul\":8697:8706   */\n      dup7\n        /* \"#utility.yul\":8693:8715   */\n      add\n        /* \"#utility.yul\":8672:8725   */\n      tag_228\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":8662:8725   */\n      swap3\n      pop\n        /* \"#utility.yul\":8618:8735   */\n      pop\n        /* \"#utility.yul\":8774:8776   */\n      0x20\n        /* \"#utility.yul\":8800:8853   */\n      tag_362\n        /* \"#utility.yul\":8845:8852   */\n      dup6\n        /* \"#utility.yul\":8836:8842   */\n      dup3\n        /* \"#utility.yul\":8825:8834   */\n      dup7\n        /* \"#utility.yul\":8821:8843   */\n      add\n        /* \"#utility.yul\":8800:8853   */\n      tag_228\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":8790:8853   */\n      swap2\n      pop\n        /* \"#utility.yul\":8745:8863   */\n      pop\n        /* \"#utility.yul\":8396:8870   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8876:9035   */\n    tag_238:\n        /* \"#utility.yul\":9016:9027   */\n      0x456d707479205552490000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9012:9013   */\n      0x00\n        /* \"#utility.yul\":9004:9010   */\n      dup3\n        /* \"#utility.yul\":9000:9014   */\n      add\n        /* \"#utility.yul\":8993:9028   */\n      mstore\n        /* \"#utility.yul\":8876:9035   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9041:9406   */\n    tag_239:\n        /* \"#utility.yul\":9183:9186   */\n      0x00\n        /* \"#utility.yul\":9204:9270   */\n      tag_365\n        /* \"#utility.yul\":9268:9269   */\n      0x09\n        /* \"#utility.yul\":9263:9266   */\n      dup4\n        /* \"#utility.yul\":9204:9270   */\n      tag_222\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":9197:9270   */\n      swap2\n      pop\n        /* \"#utility.yul\":9279:9372   */\n      tag_366\n        /* \"#utility.yul\":9368:9371   */\n      dup3\n        /* \"#utility.yul\":9279:9372   */\n      tag_238\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":9397:9399   */\n      0x20\n        /* \"#utility.yul\":9392:9395   */\n      dup3\n        /* \"#utility.yul\":9388:9400   */\n      add\n        /* \"#utility.yul\":9381:9400   */\n      swap1\n      pop\n        /* \"#utility.yul\":9041:9406   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9412:9831   */\n    tag_91:\n        /* \"#utility.yul\":9578:9582   */\n      0x00\n        /* \"#utility.yul\":9616:9618   */\n      0x20\n        /* \"#utility.yul\":9605:9614   */\n      dup3\n        /* \"#utility.yul\":9601:9619   */\n      add\n        /* \"#utility.yul\":9593:9619   */\n      swap1\n      pop\n        /* \"#utility.yul\":9665:9674   */\n      dup2\n        /* \"#utility.yul\":9659:9663   */\n      dup2\n        /* \"#utility.yul\":9655:9675   */\n      sub\n        /* \"#utility.yul\":9651:9652   */\n      0x00\n        /* \"#utility.yul\":9640:9649   */\n      dup4\n        /* \"#utility.yul\":9636:9653   */\n      add\n        /* \"#utility.yul\":9629:9676   */\n      mstore\n        /* \"#utility.yul\":9693:9824   */\n      tag_368\n        /* \"#utility.yul\":9819:9823   */\n      dup2\n        /* \"#utility.yul\":9693:9824   */\n      tag_239\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":9685:9824   */\n      swap1\n      pop\n        /* \"#utility.yul\":9412:9831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9837:10017   */\n    tag_240:\n        /* \"#utility.yul\":9885:9962   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9882:9883   */\n      0x00\n        /* \"#utility.yul\":9875:9963   */\n      mstore\n        /* \"#utility.yul\":9982:9986   */\n      0x22\n        /* \"#utility.yul\":9979:9980   */\n      0x04\n        /* \"#utility.yul\":9972:9987   */\n      mstore\n        /* \"#utility.yul\":10006:10010   */\n      0x24\n        /* \"#utility.yul\":10003:10004   */\n      0x00\n        /* \"#utility.yul\":9996:10011   */\n      revert\n        /* \"#utility.yul\":10023:10343   */\n    tag_96:\n        /* \"#utility.yul\":10067:10073   */\n      0x00\n        /* \"#utility.yul\":10104:10105   */\n      0x02\n        /* \"#utility.yul\":10098:10102   */\n      dup3\n        /* \"#utility.yul\":10094:10106   */\n      div\n        /* \"#utility.yul\":10084:10106   */\n      swap1\n      pop\n        /* \"#utility.yul\":10151:10152   */\n      0x01\n        /* \"#utility.yul\":10145:10149   */\n      dup3\n        /* \"#utility.yul\":10141:10153   */\n      and\n        /* \"#utility.yul\":10172:10190   */\n      dup1\n        /* \"#utility.yul\":10162:10243   */\n      tag_371\n      jumpi\n        /* \"#utility.yul\":10228:10232   */\n      0x7f\n        /* \"#utility.yul\":10220:10226   */\n      dup3\n        /* \"#utility.yul\":10216:10233   */\n      and\n        /* \"#utility.yul\":10206:10233   */\n      swap2\n      pop\n        /* \"#utility.yul\":10162:10243   */\n    tag_371:\n        /* \"#utility.yul\":10290:10292   */\n      0x20\n        /* \"#utility.yul\":10282:10288   */\n      dup3\n        /* \"#utility.yul\":10279:10293   */\n      lt\n        /* \"#utility.yul\":10259:10277   */\n      dup2\n        /* \"#utility.yul\":10256:10294   */\n      sub\n        /* \"#utility.yul\":10253:10337   */\n      tag_372\n      jumpi\n        /* \"#utility.yul\":10309:10327   */\n      tag_373\n      tag_240\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":10253:10337   */\n    tag_372:\n        /* \"#utility.yul\":10074:10343   */\n      pop\n        /* \"#utility.yul\":10023:10343   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10349:10490   */\n    tag_241:\n        /* \"#utility.yul\":10398:10402   */\n      0x00\n        /* \"#utility.yul\":10421:10424   */\n      dup2\n        /* \"#utility.yul\":10413:10424   */\n      swap1\n      pop\n        /* \"#utility.yul\":10444:10447   */\n      dup2\n        /* \"#utility.yul\":10441:10442   */\n      0x00\n        /* \"#utility.yul\":10434:10448   */\n      mstore\n        /* \"#utility.yul\":10478:10482   */\n      0x20\n        /* \"#utility.yul\":10475:10476   */\n      0x00\n        /* \"#utility.yul\":10465:10483   */\n      keccak256\n        /* \"#utility.yul\":10457:10483   */\n      swap1\n      pop\n        /* \"#utility.yul\":10349:10490   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10496:10589   */\n    tag_242:\n        /* \"#utility.yul\":10533:10539   */\n      0x00\n        /* \"#utility.yul\":10580:10582   */\n      0x20\n        /* \"#utility.yul\":10575:10577   */\n      0x1f\n        /* \"#utility.yul\":10568:10573   */\n      dup4\n        /* \"#utility.yul\":10564:10578   */\n      add\n        /* \"#utility.yul\":10560:10583   */\n      div\n        /* \"#utility.yul\":10550:10583   */\n      swap1\n      pop\n        /* \"#utility.yul\":10496:10589   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10595:10702   */\n    tag_243:\n        /* \"#utility.yul\":10639:10647   */\n      0x00\n        /* \"#utility.yul\":10689:10694   */\n      dup3\n        /* \"#utility.yul\":10683:10687   */\n      dup3\n        /* \"#utility.yul\":10679:10695   */\n      shl\n        /* \"#utility.yul\":10658:10695   */\n      swap1\n      pop\n        /* \"#utility.yul\":10595:10702   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10708:11101   */\n    tag_244:\n        /* \"#utility.yul\":10777:10783   */\n      0x00\n        /* \"#utility.yul\":10827:10828   */\n      0x08\n        /* \"#utility.yul\":10815:10825   */\n      dup4\n        /* \"#utility.yul\":10811:10829   */\n      mul\n        /* \"#utility.yul\":10850:10947   */\n      tag_378\n        /* \"#utility.yul\":10880:10946   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10869:10878   */\n      dup3\n        /* \"#utility.yul\":10850:10947   */\n      tag_243\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":10968:11007   */\n      tag_379\n        /* \"#utility.yul\":10998:11006   */\n      dup7\n        /* \"#utility.yul\":10987:10996   */\n      dup4\n        /* \"#utility.yul\":10968:11007   */\n      tag_243\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":10956:11007   */\n      swap6\n      pop\n        /* \"#utility.yul\":11040:11044   */\n      dup1\n        /* \"#utility.yul\":11036:11045   */\n      not\n        /* \"#utility.yul\":11029:11034   */\n      dup5\n        /* \"#utility.yul\":11025:11046   */\n      and\n        /* \"#utility.yul\":11016:11046   */\n      swap4\n      pop\n        /* \"#utility.yul\":11089:11093   */\n      dup1\n        /* \"#utility.yul\":11079:11087   */\n      dup7\n        /* \"#utility.yul\":11075:11094   */\n      and\n        /* \"#utility.yul\":11068:11073   */\n      dup5\n        /* \"#utility.yul\":11065:11095   */\n      or\n        /* \"#utility.yul\":11055:11095   */\n      swap3\n      pop\n        /* \"#utility.yul\":10784:11101   */\n      pop\n      pop\n        /* \"#utility.yul\":10708:11101   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11107:11167   */\n    tag_245:\n        /* \"#utility.yul\":11135:11138   */\n      0x00\n        /* \"#utility.yul\":11156:11161   */\n      dup2\n        /* \"#utility.yul\":11149:11161   */\n      swap1\n      pop\n        /* \"#utility.yul\":11107:11167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11173:11315   */\n    tag_246:\n        /* \"#utility.yul\":11223:11232   */\n      0x00\n        /* \"#utility.yul\":11256:11309   */\n      tag_382\n        /* \"#utility.yul\":11274:11308   */\n      tag_383\n        /* \"#utility.yul\":11283:11307   */\n      tag_384\n        /* \"#utility.yul\":11301:11306   */\n      dup5\n        /* \"#utility.yul\":11283:11307   */\n      tag_229\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":11274:11308   */\n      tag_245\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":11256:11309   */\n      tag_229\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":11243:11309   */\n      swap1\n      pop\n        /* \"#utility.yul\":11173:11315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11321:11396   */\n    tag_247:\n        /* \"#utility.yul\":11364:11367   */\n      0x00\n        /* \"#utility.yul\":11385:11390   */\n      dup2\n        /* \"#utility.yul\":11378:11390   */\n      swap1\n      pop\n        /* \"#utility.yul\":11321:11396   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11402:11671   */\n    tag_248:\n        /* \"#utility.yul\":11512:11551   */\n      tag_387\n        /* \"#utility.yul\":11543:11550   */\n      dup4\n        /* \"#utility.yul\":11512:11551   */\n      tag_246\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":11573:11664   */\n      tag_388\n        /* \"#utility.yul\":11622:11663   */\n      tag_389\n        /* \"#utility.yul\":11646:11662   */\n      dup3\n        /* \"#utility.yul\":11622:11663   */\n      tag_247\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":11614:11620   */\n      dup5\n        /* \"#utility.yul\":11607:11611   */\n      dup5\n        /* \"#utility.yul\":11601:11612   */\n      sload\n        /* \"#utility.yul\":11573:11664   */\n      tag_244\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":11567:11571   */\n      dup3\n        /* \"#utility.yul\":11560:11665   */\n      sstore\n        /* \"#utility.yul\":11478:11671   */\n      pop\n        /* \"#utility.yul\":11402:11671   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11677:11750   */\n    tag_249:\n        /* \"#utility.yul\":11722:11725   */\n      0x00\n        /* \"#utility.yul\":11677:11750   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":11756:11945   */\n    tag_250:\n        /* \"#utility.yul\":11833:11865   */\n      tag_392\n      tag_249\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":11874:11939   */\n      tag_393\n        /* \"#utility.yul\":11932:11938   */\n      dup2\n        /* \"#utility.yul\":11924:11930   */\n      dup5\n        /* \"#utility.yul\":11918:11922   */\n      dup5\n        /* \"#utility.yul\":11874:11939   */\n      tag_248\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":11809:11945   */\n      pop\n        /* \"#utility.yul\":11756:11945   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11951:12137   */\n    tag_251:\n        /* \"#utility.yul\":12011:12131   */\n    tag_395:\n        /* \"#utility.yul\":12028:12031   */\n      dup2\n        /* \"#utility.yul\":12021:12026   */\n      dup2\n        /* \"#utility.yul\":12018:12032   */\n      lt\n        /* \"#utility.yul\":12011:12131   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":12082:12121   */\n      tag_398\n        /* \"#utility.yul\":12119:12120   */\n      0x00\n        /* \"#utility.yul\":12112:12117   */\n      dup3\n        /* \"#utility.yul\":12082:12121   */\n      tag_250\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":12055:12056   */\n      0x01\n        /* \"#utility.yul\":12048:12053   */\n      dup2\n        /* \"#utility.yul\":12044:12057   */\n      add\n        /* \"#utility.yul\":12035:12057   */\n      swap1\n      pop\n        /* \"#utility.yul\":12011:12131   */\n      jump(tag_395)\n    tag_397:\n        /* \"#utility.yul\":11951:12137   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12143:12686   */\n    tag_252:\n        /* \"#utility.yul\":12244:12246   */\n      0x1f\n        /* \"#utility.yul\":12239:12242   */\n      dup3\n        /* \"#utility.yul\":12236:12247   */\n      gt\n        /* \"#utility.yul\":12233:12679   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":12278:12316   */\n      tag_401\n        /* \"#utility.yul\":12310:12315   */\n      dup2\n        /* \"#utility.yul\":12278:12316   */\n      tag_241\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":12362:12391   */\n      tag_402\n        /* \"#utility.yul\":12380:12390   */\n      dup5\n        /* \"#utility.yul\":12362:12391   */\n      tag_242\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":12352:12360   */\n      dup2\n        /* \"#utility.yul\":12348:12392   */\n      add\n        /* \"#utility.yul\":12545:12547   */\n      0x20\n        /* \"#utility.yul\":12533:12543   */\n      dup6\n        /* \"#utility.yul\":12530:12548   */\n      lt\n        /* \"#utility.yul\":12527:12576   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":12566:12574   */\n      dup2\n        /* \"#utility.yul\":12551:12574   */\n      swap1\n      pop\n        /* \"#utility.yul\":12527:12576   */\n    tag_403:\n        /* \"#utility.yul\":12589:12669   */\n      tag_404\n        /* \"#utility.yul\":12645:12667   */\n      tag_405\n        /* \"#utility.yul\":12663:12666   */\n      dup6\n        /* \"#utility.yul\":12645:12667   */\n      tag_242\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":12635:12643   */\n      dup4\n        /* \"#utility.yul\":12631:12668   */\n      add\n        /* \"#utility.yul\":12618:12629   */\n      dup3\n        /* \"#utility.yul\":12589:12669   */\n      tag_251\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":12248:12679   */\n      pop\n      pop\n        /* \"#utility.yul\":12233:12679   */\n    tag_400:\n        /* \"#utility.yul\":12143:12686   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12692:12809   */\n    tag_253:\n        /* \"#utility.yul\":12746:12754   */\n      0x00\n        /* \"#utility.yul\":12796:12801   */\n      dup3\n        /* \"#utility.yul\":12790:12794   */\n      dup3\n        /* \"#utility.yul\":12786:12802   */\n      shr\n        /* \"#utility.yul\":12765:12802   */\n      swap1\n      pop\n        /* \"#utility.yul\":12692:12809   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12815:12984   */\n    tag_254:\n        /* \"#utility.yul\":12859:12865   */\n      0x00\n        /* \"#utility.yul\":12892:12943   */\n      tag_408\n        /* \"#utility.yul\":12940:12941   */\n      0x00\n        /* \"#utility.yul\":12936:12942   */\n      not\n        /* \"#utility.yul\":12928:12933   */\n      dup5\n        /* \"#utility.yul\":12925:12926   */\n      0x08\n        /* \"#utility.yul\":12921:12934   */\n      mul\n        /* \"#utility.yul\":12892:12943   */\n      tag_253\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":12888:12944   */\n      not\n        /* \"#utility.yul\":12973:12977   */\n      dup1\n        /* \"#utility.yul\":12967:12971   */\n      dup4\n        /* \"#utility.yul\":12963:12978   */\n      and\n        /* \"#utility.yul\":12953:12978   */\n      swap2\n      pop\n        /* \"#utility.yul\":12866:12984   */\n      pop\n        /* \"#utility.yul\":12815:12984   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12989:13284   */\n    tag_255:\n        /* \"#utility.yul\":13065:13069   */\n      0x00\n        /* \"#utility.yul\":13211:13240   */\n      tag_410\n        /* \"#utility.yul\":13236:13239   */\n      dup4\n        /* \"#utility.yul\":13230:13234   */\n      dup4\n        /* \"#utility.yul\":13211:13240   */\n      tag_254\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":13203:13240   */\n      swap2\n      pop\n        /* \"#utility.yul\":13273:13276   */\n      dup3\n        /* \"#utility.yul\":13270:13271   */\n      0x02\n        /* \"#utility.yul\":13266:13277   */\n      mul\n        /* \"#utility.yul\":13260:13264   */\n      dup3\n        /* \"#utility.yul\":13257:13278   */\n      or\n        /* \"#utility.yul\":13249:13278   */\n      swap1\n      pop\n        /* \"#utility.yul\":12989:13284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13289:14684   */\n    tag_93:\n        /* \"#utility.yul\":13406:13443   */\n      tag_412\n        /* \"#utility.yul\":13439:13442   */\n      dup3\n        /* \"#utility.yul\":13406:13443   */\n      tag_221\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":13508:13526   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13500:13506   */\n      dup2\n        /* \"#utility.yul\":13497:13527   */\n      gt\n        /* \"#utility.yul\":13494:13550   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":13530:13548   */\n      tag_414\n      tag_214\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":13494:13550   */\n    tag_413:\n        /* \"#utility.yul\":13574:13612   */\n      tag_415\n        /* \"#utility.yul\":13606:13610   */\n      dup3\n        /* \"#utility.yul\":13600:13611   */\n      sload\n        /* \"#utility.yul\":13574:13612   */\n      tag_96\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":13659:13726   */\n      tag_416\n        /* \"#utility.yul\":13719:13725   */\n      dup3\n        /* \"#utility.yul\":13711:13717   */\n      dup3\n        /* \"#utility.yul\":13705:13709   */\n      dup6\n        /* \"#utility.yul\":13659:13726   */\n      tag_252\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":13753:13754   */\n      0x00\n        /* \"#utility.yul\":13777:13781   */\n      0x20\n        /* \"#utility.yul\":13764:13781   */\n      swap1\n      pop\n        /* \"#utility.yul\":13809:13811   */\n      0x1f\n        /* \"#utility.yul\":13801:13807   */\n      dup4\n        /* \"#utility.yul\":13798:13812   */\n      gt\n        /* \"#utility.yul\":13826:13827   */\n      0x01\n        /* \"#utility.yul\":13821:14439   */\n      dup2\n      eq\n      tag_418\n      jumpi\n        /* \"#utility.yul\":14483:14484   */\n      0x00\n        /* \"#utility.yul\":14500:14506   */\n      dup5\n        /* \"#utility.yul\":14497:14574   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":14549:14558   */\n      dup3\n        /* \"#utility.yul\":14544:14547   */\n      dup8\n        /* \"#utility.yul\":14540:14559   */\n      add\n        /* \"#utility.yul\":14534:14560   */\n      mload\n        /* \"#utility.yul\":14525:14560   */\n      swap1\n      pop\n        /* \"#utility.yul\":14497:14574   */\n    tag_419:\n        /* \"#utility.yul\":14600:14667   */\n      tag_420\n        /* \"#utility.yul\":14660:14666   */\n      dup6\n        /* \"#utility.yul\":14653:14658   */\n      dup3\n        /* \"#utility.yul\":14600:14667   */\n      tag_255\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":14594:14598   */\n      dup7\n        /* \"#utility.yul\":14587:14668   */\n      sstore\n        /* \"#utility.yul\":14456:14678   */\n      pop\n        /* \"#utility.yul\":13791:14678   */\n      jump(tag_417)\n        /* \"#utility.yul\":13821:14439   */\n    tag_418:\n        /* \"#utility.yul\":13873:13877   */\n      0x1f\n        /* \"#utility.yul\":13869:13878   */\n      not\n        /* \"#utility.yul\":13861:13867   */\n      dup5\n        /* \"#utility.yul\":13857:13879   */\n      and\n        /* \"#utility.yul\":13907:13944   */\n      tag_421\n        /* \"#utility.yul\":13939:13943   */\n      dup7\n        /* \"#utility.yul\":13907:13944   */\n      tag_241\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":13966:13967   */\n      0x00\n        /* \"#utility.yul\":13980:14188   */\n    tag_422:\n        /* \"#utility.yul\":13994:14001   */\n      dup3\n        /* \"#utility.yul\":13991:13992   */\n      dup2\n        /* \"#utility.yul\":13988:14002   */\n      lt\n        /* \"#utility.yul\":13980:14188   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":14073:14082   */\n      dup5\n        /* \"#utility.yul\":14068:14071   */\n      dup10\n        /* \"#utility.yul\":14064:14083   */\n      add\n        /* \"#utility.yul\":14058:14084   */\n      mload\n        /* \"#utility.yul\":14050:14056   */\n      dup3\n        /* \"#utility.yul\":14043:14085   */\n      sstore\n        /* \"#utility.yul\":14124:14125   */\n      0x01\n        /* \"#utility.yul\":14116:14122   */\n      dup3\n        /* \"#utility.yul\":14112:14126   */\n      add\n        /* \"#utility.yul\":14102:14126   */\n      swap2\n      pop\n        /* \"#utility.yul\":14171:14173   */\n      0x20\n        /* \"#utility.yul\":14160:14169   */\n      dup6\n        /* \"#utility.yul\":14156:14174   */\n      add\n        /* \"#utility.yul\":14143:14174   */\n      swap5\n      pop\n        /* \"#utility.yul\":14017:14021   */\n      0x20\n        /* \"#utility.yul\":14014:14015   */\n      dup2\n        /* \"#utility.yul\":14010:14022   */\n      add\n        /* \"#utility.yul\":14005:14022   */\n      swap1\n      pop\n        /* \"#utility.yul\":13980:14188   */\n      jump(tag_422)\n    tag_424:\n        /* \"#utility.yul\":14216:14222   */\n      dup7\n        /* \"#utility.yul\":14207:14214   */\n      dup4\n        /* \"#utility.yul\":14204:14223   */\n      lt\n        /* \"#utility.yul\":14201:14380   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":14274:14283   */\n      dup5\n        /* \"#utility.yul\":14269:14272   */\n      dup10\n        /* \"#utility.yul\":14265:14284   */\n      add\n        /* \"#utility.yul\":14259:14285   */\n      mload\n        /* \"#utility.yul\":14317:14365   */\n      tag_426\n        /* \"#utility.yul\":14359:14363   */\n      0x1f\n        /* \"#utility.yul\":14351:14357   */\n      dup10\n        /* \"#utility.yul\":14347:14364   */\n      and\n        /* \"#utility.yul\":14336:14345   */\n      dup3\n        /* \"#utility.yul\":14317:14365   */\n      tag_254\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":14309:14315   */\n      dup4\n        /* \"#utility.yul\":14302:14366   */\n      sstore\n        /* \"#utility.yul\":14224:14380   */\n      pop\n        /* \"#utility.yul\":14201:14380   */\n    tag_425:\n        /* \"#utility.yul\":14426:14427   */\n      0x01\n        /* \"#utility.yul\":14422:14423   */\n      0x02\n        /* \"#utility.yul\":14414:14420   */\n      dup9\n        /* \"#utility.yul\":14410:14424   */\n      mul\n        /* \"#utility.yul\":14406:14428   */\n      add\n        /* \"#utility.yul\":14400:14404   */\n      dup9\n        /* \"#utility.yul\":14393:14429   */\n      sstore\n        /* \"#utility.yul\":13828:14439   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13791:14678   */\n    tag_417:\n      pop\n        /* \"#utility.yul\":13381:14684   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13289:14684   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14690:14852   */\n    tag_256:\n        /* \"#utility.yul\":14830:14844   */\n      0x5a65726f20616464726573730000000000000000000000000000000000000000\n        /* \"#utility.yul\":14826:14827   */\n      0x00\n        /* \"#utility.yul\":14818:14824   */\n      dup3\n        /* \"#utility.yul\":14814:14828   */\n      add\n        /* \"#utility.yul\":14807:14845   */\n      mstore\n        /* \"#utility.yul\":14690:14852   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14858:15224   */\n    tag_257:\n        /* \"#utility.yul\":15000:15003   */\n      0x00\n        /* \"#utility.yul\":15021:15088   */\n      tag_429\n        /* \"#utility.yul\":15085:15087   */\n      0x0c\n        /* \"#utility.yul\":15080:15083   */\n      dup4\n        /* \"#utility.yul\":15021:15088   */\n      tag_222\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":15014:15088   */\n      swap2\n      pop\n        /* \"#utility.yul\":15097:15190   */\n      tag_430\n        /* \"#utility.yul\":15186:15189   */\n      dup3\n        /* \"#utility.yul\":15097:15190   */\n      tag_256\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":15215:15217   */\n      0x20\n        /* \"#utility.yul\":15210:15213   */\n      dup3\n        /* \"#utility.yul\":15206:15218   */\n      add\n        /* \"#utility.yul\":15199:15218   */\n      swap1\n      pop\n        /* \"#utility.yul\":14858:15224   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15230:15649   */\n    tag_124:\n        /* \"#utility.yul\":15396:15400   */\n      0x00\n        /* \"#utility.yul\":15434:15436   */\n      0x20\n        /* \"#utility.yul\":15423:15432   */\n      dup3\n        /* \"#utility.yul\":15419:15437   */\n      add\n        /* \"#utility.yul\":15411:15437   */\n      swap1\n      pop\n        /* \"#utility.yul\":15483:15492   */\n      dup2\n        /* \"#utility.yul\":15477:15481   */\n      dup2\n        /* \"#utility.yul\":15473:15493   */\n      sub\n        /* \"#utility.yul\":15469:15470   */\n      0x00\n        /* \"#utility.yul\":15458:15467   */\n      dup4\n        /* \"#utility.yul\":15454:15471   */\n      add\n        /* \"#utility.yul\":15447:15494   */\n      mstore\n        /* \"#utility.yul\":15511:15642   */\n      tag_432\n        /* \"#utility.yul\":15637:15641   */\n      dup2\n        /* \"#utility.yul\":15511:15642   */\n      tag_257\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":15503:15642   */\n      swap1\n      pop\n        /* \"#utility.yul\":15230:15649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15655:15816   */\n    tag_258:\n        /* \"#utility.yul\":15795:15808   */\n      0x5a65726f20616d6f756e74000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15791:15792   */\n      0x00\n        /* \"#utility.yul\":15783:15789   */\n      dup3\n        /* \"#utility.yul\":15779:15793   */\n      add\n        /* \"#utility.yul\":15772:15809   */\n      mstore\n        /* \"#utility.yul\":15655:15816   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15822:16188   */\n    tag_259:\n        /* \"#utility.yul\":15964:15967   */\n      0x00\n        /* \"#utility.yul\":15985:16052   */\n      tag_435\n        /* \"#utility.yul\":16049:16051   */\n      0x0b\n        /* \"#utility.yul\":16044:16047   */\n      dup4\n        /* \"#utility.yul\":15985:16052   */\n      tag_222\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":15978:16052   */\n      swap2\n      pop\n        /* \"#utility.yul\":16061:16154   */\n      tag_436\n        /* \"#utility.yul\":16150:16153   */\n      dup3\n        /* \"#utility.yul\":16061:16154   */\n      tag_258\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":16179:16181   */\n      0x20\n        /* \"#utility.yul\":16174:16177   */\n      dup3\n        /* \"#utility.yul\":16170:16182   */\n      add\n        /* \"#utility.yul\":16163:16182   */\n      swap1\n      pop\n        /* \"#utility.yul\":15822:16188   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16194:16613   */\n    tag_127:\n        /* \"#utility.yul\":16360:16364   */\n      0x00\n        /* \"#utility.yul\":16398:16400   */\n      0x20\n        /* \"#utility.yul\":16387:16396   */\n      dup3\n        /* \"#utility.yul\":16383:16401   */\n      add\n        /* \"#utility.yul\":16375:16401   */\n      swap1\n      pop\n        /* \"#utility.yul\":16447:16456   */\n      dup2\n        /* \"#utility.yul\":16441:16445   */\n      dup2\n        /* \"#utility.yul\":16437:16457   */\n      sub\n        /* \"#utility.yul\":16433:16434   */\n      0x00\n        /* \"#utility.yul\":16422:16431   */\n      dup4\n        /* \"#utility.yul\":16418:16435   */\n      add\n        /* \"#utility.yul\":16411:16458   */\n      mstore\n        /* \"#utility.yul\":16475:16606   */\n      tag_438\n        /* \"#utility.yul\":16601:16605   */\n      dup2\n        /* \"#utility.yul\":16475:16606   */\n      tag_259\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":16467:16606   */\n      swap1\n      pop\n        /* \"#utility.yul\":16194:16613   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16619:17061   */\n    tag_173:\n        /* \"#utility.yul\":16768:16772   */\n      0x00\n        /* \"#utility.yul\":16806:16808   */\n      0x60\n        /* \"#utility.yul\":16795:16804   */\n      dup3\n        /* \"#utility.yul\":16791:16809   */\n      add\n        /* \"#utility.yul\":16783:16809   */\n      swap1\n      pop\n        /* \"#utility.yul\":16819:16890   */\n      tag_440\n        /* \"#utility.yul\":16887:16888   */\n      0x00\n        /* \"#utility.yul\":16876:16885   */\n      dup4\n        /* \"#utility.yul\":16872:16889   */\n      add\n        /* \"#utility.yul\":16863:16869   */\n      dup7\n        /* \"#utility.yul\":16819:16890   */\n      tag_237\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":16900:16972   */\n      tag_441\n        /* \"#utility.yul\":16968:16970   */\n      0x20\n        /* \"#utility.yul\":16957:16966   */\n      dup4\n        /* \"#utility.yul\":16953:16971   */\n      add\n        /* \"#utility.yul\":16944:16950   */\n      dup6\n        /* \"#utility.yul\":16900:16972   */\n      tag_234\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":16982:17054   */\n      tag_442\n        /* \"#utility.yul\":17050:17052   */\n      0x40\n        /* \"#utility.yul\":17039:17048   */\n      dup4\n        /* \"#utility.yul\":17035:17053   */\n      add\n        /* \"#utility.yul\":17026:17032   */\n      dup5\n        /* \"#utility.yul\":16982:17054   */\n      tag_234\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":16619:17061   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17067:17247   */\n    tag_260:\n        /* \"#utility.yul\":17115:17192   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17112:17113   */\n      0x00\n        /* \"#utility.yul\":17105:17193   */\n      mstore\n        /* \"#utility.yul\":17212:17216   */\n      0x11\n        /* \"#utility.yul\":17209:17210   */\n      0x04\n        /* \"#utility.yul\":17202:17217   */\n      mstore\n        /* \"#utility.yul\":17236:17240   */\n      0x24\n        /* \"#utility.yul\":17233:17234   */\n      0x00\n        /* \"#utility.yul\":17226:17241   */\n      revert\n        /* \"#utility.yul\":17253:17444   */\n    tag_201:\n        /* \"#utility.yul\":17293:17296   */\n      0x00\n        /* \"#utility.yul\":17312:17332   */\n      tag_445\n        /* \"#utility.yul\":17330:17331   */\n      dup3\n        /* \"#utility.yul\":17312:17332   */\n      tag_229\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":17307:17332   */\n      swap2\n      pop\n        /* \"#utility.yul\":17346:17366   */\n      tag_446\n        /* \"#utility.yul\":17364:17365   */\n      dup4\n        /* \"#utility.yul\":17346:17366   */\n      tag_229\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":17341:17366   */\n      swap3\n      pop\n        /* \"#utility.yul\":17389:17390   */\n      dup3\n        /* \"#utility.yul\":17386:17387   */\n      dup3\n        /* \"#utility.yul\":17382:17391   */\n      add\n        /* \"#utility.yul\":17375:17391   */\n      swap1\n      pop\n        /* \"#utility.yul\":17410:17413   */\n      dup1\n        /* \"#utility.yul\":17407:17408   */\n      dup3\n        /* \"#utility.yul\":17404:17414   */\n      gt\n        /* \"#utility.yul\":17401:17437   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":17417:17435   */\n      tag_448\n      tag_260\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":17401:17437   */\n    tag_447:\n        /* \"#utility.yul\":17253:17444   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dc45e9799e0210e85c11ec734e1240075e8e86c10eaacd18850f688779bf7eaf64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1015": {
									"entryPoint": null,
									"id": 1015,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 688,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 485,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 821,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 680,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 1742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3619,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2914,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2996,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2305,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1567,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2857,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3291,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1936,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1399,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1375,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1379,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1371,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1367,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf": {
									"entryPoint": 2753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff": {
									"entryPoint": 3384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2074,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2206,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2243,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16317:7",
										"nodeType": "YulBlock",
										"src": "0:16317:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "423:28:7",
													"nodeType": "YulBlock",
													"src": "423:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:7",
																		"nodeType": "YulLiteral",
																		"src": "443:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:12:7",
																"nodeType": "YulFunctionCall",
																"src": "433:12:7"
															},
															"nativeSrc": "433:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:7"
											},
											{
												"body": {
													"nativeSrc": "546:28:7",
													"nodeType": "YulBlock",
													"src": "546:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:7",
																		"nodeType": "YulLiteral",
																		"src": "563:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:7",
																		"nodeType": "YulLiteral",
																		"src": "566:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:7"
																},
																"nativeSrc": "556:12:7",
																"nodeType": "YulFunctionCall",
																"src": "556:12:7"
															},
															"nativeSrc": "556:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:7"
											},
											{
												"body": {
													"nativeSrc": "628:54:7",
													"nodeType": "YulBlock",
													"src": "628:54:7",
													"statements": [
														{
															"nativeSrc": "638:38:7",
															"nodeType": "YulAssignment",
															"src": "638:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:7",
																				"nodeType": "YulLiteral",
																				"src": "663:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:7"
																		},
																		"nativeSrc": "652:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:7",
																				"nodeType": "YulLiteral",
																				"src": "672:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:7"
																		},
																		"nativeSrc": "668:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:7"
																},
																"nativeSrc": "648:28:7",
																"nodeType": "YulFunctionCall",
																"src": "648:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:7",
														"nodeType": "YulTypedName",
														"src": "611:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:7",
														"nodeType": "YulTypedName",
														"src": "621:6:7",
														"type": ""
													}
												],
												"src": "580:102:7"
											},
											{
												"body": {
													"nativeSrc": "716:152:7",
													"nodeType": "YulBlock",
													"src": "716:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:7",
																		"nodeType": "YulLiteral",
																		"src": "733:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:7",
																		"nodeType": "YulLiteral",
																		"src": "736:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:7"
																},
																"nativeSrc": "726:88:7",
																"nodeType": "YulFunctionCall",
																"src": "726:88:7"
															},
															"nativeSrc": "726:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:7",
																		"nodeType": "YulLiteral",
																		"src": "830:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:7",
																		"nodeType": "YulLiteral",
																		"src": "833:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:7"
																},
																"nativeSrc": "823:15:7",
																"nodeType": "YulFunctionCall",
																"src": "823:15:7"
															},
															"nativeSrc": "823:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:7",
																		"nodeType": "YulLiteral",
																		"src": "854:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:7",
																		"nodeType": "YulLiteral",
																		"src": "857:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:7"
																},
																"nativeSrc": "847:15:7",
																"nodeType": "YulFunctionCall",
																"src": "847:15:7"
															},
															"nativeSrc": "847:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:7"
											},
											{
												"body": {
													"nativeSrc": "917:238:7",
													"nodeType": "YulBlock",
													"src": "917:238:7",
													"statements": [
														{
															"nativeSrc": "927:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:7"
																		},
																		"nativeSrc": "957:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:7"
																},
																"nativeSrc": "945:40:7",
																"nodeType": "YulFunctionCall",
																"src": "945:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:7",
																	"nodeType": "YulTypedName",
																	"src": "931:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:7",
																"nodeType": "YulBlock",
																"src": "1096:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:7"
																			},
																			"nativeSrc": "1098:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:7"
																		},
																		"nativeSrc": "1098:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:7",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:7"
																		},
																		"nativeSrc": "1036:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:7"
																		},
																		"nativeSrc": "1072:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:7"
																},
																"nativeSrc": "1033:62:7",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:7"
															},
															"nativeSrc": "1030:88:7",
															"nodeType": "YulIf",
															"src": "1030:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:7"
																},
																"nativeSrc": "1127:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:7"
															},
															"nativeSrc": "1127:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:7",
														"nodeType": "YulTypedName",
														"src": "903:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:7",
														"nodeType": "YulTypedName",
														"src": "911:4:7",
														"type": ""
													}
												],
												"src": "874:281:7"
											},
											{
												"body": {
													"nativeSrc": "1202:88:7",
													"nodeType": "YulBlock",
													"src": "1202:88:7",
													"statements": [
														{
															"nativeSrc": "1212:30:7",
															"nodeType": "YulAssignment",
															"src": "1212:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:7"
																},
																"nativeSrc": "1222:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:7"
																},
																"nativeSrc": "1251:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:7"
															},
															"nativeSrc": "1251:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:7",
														"nodeType": "YulTypedName",
														"src": "1186:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:7",
														"nodeType": "YulTypedName",
														"src": "1195:6:7",
														"type": ""
													}
												],
												"src": "1161:129:7"
											},
											{
												"body": {
													"nativeSrc": "1363:241:7",
													"nodeType": "YulBlock",
													"src": "1363:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:7",
																"nodeType": "YulBlock",
																"src": "1468:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:7"
																			},
																			"nativeSrc": "1470:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:7"
																		},
																		"nativeSrc": "1470:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:7"
																},
																"nativeSrc": "1437:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:7"
															},
															"nativeSrc": "1434:56:7",
															"nodeType": "YulIf",
															"src": "1434:56:7"
														},
														{
															"nativeSrc": "1500:37:7",
															"nodeType": "YulAssignment",
															"src": "1500:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:7"
																},
																"nativeSrc": "1508:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:7"
																}
															]
														},
														{
															"nativeSrc": "1574:23:7",
															"nodeType": "YulAssignment",
															"src": "1574:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:7"
																},
																"nativeSrc": "1582:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:7",
														"nodeType": "YulTypedName",
														"src": "1347:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:7",
														"nodeType": "YulTypedName",
														"src": "1358:4:7",
														"type": ""
													}
												],
												"src": "1296:308:7"
											},
											{
												"body": {
													"nativeSrc": "1672:77:7",
													"nodeType": "YulBlock",
													"src": "1672:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:7"
																},
																"nativeSrc": "1683:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:7"
															},
															"nativeSrc": "1683:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:7"
																		},
																		"nativeSrc": "1722:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:7"
																},
																"nativeSrc": "1715:27:7",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:7"
															},
															"nativeSrc": "1715:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:7",
														"nodeType": "YulTypedName",
														"src": "1654:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:7",
														"nodeType": "YulTypedName",
														"src": "1659:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:7",
														"nodeType": "YulTypedName",
														"src": "1664:6:7",
														"type": ""
													}
												],
												"src": "1610:139:7"
											},
											{
												"body": {
													"nativeSrc": "1850:339:7",
													"nodeType": "YulBlock",
													"src": "1850:339:7",
													"statements": [
														{
															"nativeSrc": "1860:75:7",
															"nodeType": "YulAssignment",
															"src": "1860:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:7"
																		},
																		"nativeSrc": "1885:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:7"
																},
																"nativeSrc": "1869:66:7",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:7"
																},
																"nativeSrc": "1944:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:7"
															},
															"nativeSrc": "1944:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:7"
														},
														{
															"nativeSrc": "1974:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:7"
																},
																"nativeSrc": "1985:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:7",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:7",
																"nodeType": "YulBlock",
																"src": "2039:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:7"
																			},
																			"nativeSrc": "2041:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:7"
																		},
																		"nativeSrc": "2041:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:7"
																		},
																		"nativeSrc": "2016:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:7"
																},
																"nativeSrc": "2013:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:7"
															},
															"nativeSrc": "2010:112:7",
															"nodeType": "YulIf",
															"src": "2010:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:7"
																},
																"nativeSrc": "2131:52:7",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:7"
															},
															"nativeSrc": "2131:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:7",
														"nodeType": "YulTypedName",
														"src": "1823:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:7",
														"nodeType": "YulTypedName",
														"src": "1828:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:7",
														"nodeType": "YulTypedName",
														"src": "1836:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:7",
														"nodeType": "YulTypedName",
														"src": "1844:5:7",
														"type": ""
													}
												],
												"src": "1755:434:7"
											},
											{
												"body": {
													"nativeSrc": "2282:282:7",
													"nodeType": "YulBlock",
													"src": "2282:282:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:7",
																"nodeType": "YulBlock",
																"src": "2331:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:7"
																			},
																			"nativeSrc": "2333:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:7"
																		},
																		"nativeSrc": "2333:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:7",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:7"
																				},
																				"nativeSrc": "2306:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:7"
																		},
																		"nativeSrc": "2302:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:7"
																},
																"nativeSrc": "2295:35:7",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:7"
															},
															"nativeSrc": "2292:122:7",
															"nodeType": "YulIf",
															"src": "2292:122:7"
														},
														{
															"nativeSrc": "2423:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:7"
																},
																"nativeSrc": "2437:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:7",
															"nodeType": "YulAssignment",
															"src": "2459:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:7"
																		},
																		"nativeSrc": "2527:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:7"
																},
																"nativeSrc": "2468:90:7",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:7",
														"nodeType": "YulTypedName",
														"src": "2260:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:7",
														"nodeType": "YulTypedName",
														"src": "2268:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:7",
														"nodeType": "YulTypedName",
														"src": "2276:5:7",
														"type": ""
													}
												],
												"src": "2209:355:7"
											},
											{
												"body": {
													"nativeSrc": "2615:32:7",
													"nodeType": "YulBlock",
													"src": "2615:32:7",
													"statements": [
														{
															"nativeSrc": "2625:16:7",
															"nodeType": "YulAssignment",
															"src": "2625:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2636:5:7",
																"nodeType": "YulIdentifier",
																"src": "2636:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2570:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:7",
														"nodeType": "YulTypedName",
														"src": "2597:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:7",
														"nodeType": "YulTypedName",
														"src": "2607:7:7",
														"type": ""
													}
												],
												"src": "2570:77:7"
											},
											{
												"body": {
													"nativeSrc": "2696:79:7",
													"nodeType": "YulBlock",
													"src": "2696:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2753:16:7",
																"nodeType": "YulBlock",
																"src": "2753:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2762:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2765:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2755:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:7"
																			},
																			"nativeSrc": "2755:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2755:12:7"
																		},
																		"nativeSrc": "2755:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2719:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2719:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2744:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2726:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2726:17:7"
																				},
																				"nativeSrc": "2726:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2726:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2716:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2716:2:7"
																		},
																		"nativeSrc": "2716:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2716:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2709:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:7"
																},
																"nativeSrc": "2709:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2709:43:7"
															},
															"nativeSrc": "2706:63:7",
															"nodeType": "YulIf",
															"src": "2706:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2653:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2689:5:7",
														"nodeType": "YulTypedName",
														"src": "2689:5:7",
														"type": ""
													}
												],
												"src": "2653:122:7"
											},
											{
												"body": {
													"nativeSrc": "2844:80:7",
													"nodeType": "YulBlock",
													"src": "2844:80:7",
													"statements": [
														{
															"nativeSrc": "2854:22:7",
															"nodeType": "YulAssignment",
															"src": "2854:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2869:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2869:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2863:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2863:5:7"
																},
																"nativeSrc": "2863:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2863:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2854:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2854:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2912:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2912:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2885:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2885:26:7"
																},
																"nativeSrc": "2885:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2885:33:7"
															},
															"nativeSrc": "2885:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2885:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2781:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2822:6:7",
														"nodeType": "YulTypedName",
														"src": "2822:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2830:3:7",
														"nodeType": "YulTypedName",
														"src": "2830:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2838:5:7",
														"nodeType": "YulTypedName",
														"src": "2838:5:7",
														"type": ""
													}
												],
												"src": "2781:143:7"
											},
											{
												"body": {
													"nativeSrc": "3088:1181:7",
													"nodeType": "YulBlock",
													"src": "3088:1181:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3135:83:7",
																"nodeType": "YulBlock",
																"src": "3135:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3137:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3137:77:7"
																			},
																			"nativeSrc": "3137:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3137:79:7"
																		},
																		"nativeSrc": "3137:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3137:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3109:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3109:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3118:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3118:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3105:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3105:3:7"
																		},
																		"nativeSrc": "3105:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3105:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3130:3:7",
																		"nodeType": "YulLiteral",
																		"src": "3130:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3101:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3101:3:7"
																},
																"nativeSrc": "3101:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3101:33:7"
															},
															"nativeSrc": "3098:120:7",
															"nodeType": "YulIf",
															"src": "3098:120:7"
														},
														{
															"nativeSrc": "3228:291:7",
															"nodeType": "YulBlock",
															"src": "3228:291:7",
															"statements": [
																{
																	"nativeSrc": "3243:38:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3243:38:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3267:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3267:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3278:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3278:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3263:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3263:3:7"
																				},
																				"nativeSrc": "3263:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3263:17:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3257:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3257:5:7"
																		},
																		"nativeSrc": "3257:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3257:24:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3247:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3247:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3328:83:7",
																		"nodeType": "YulBlock",
																		"src": "3328:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3330:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "3330:77:7"
																					},
																					"nativeSrc": "3330:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3330:79:7"
																				},
																				"nativeSrc": "3330:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3330:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3300:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3300:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3308:18:7",
																				"nodeType": "YulLiteral",
																				"src": "3308:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3297:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3297:2:7"
																		},
																		"nativeSrc": "3297:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3297:30:7"
																	},
																	"nativeSrc": "3294:117:7",
																	"nodeType": "YulIf",
																	"src": "3294:117:7"
																},
																{
																	"nativeSrc": "3425:84:7",
																	"nodeType": "YulAssignment",
																	"src": "3425:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3481:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3481:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3492:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3492:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3477:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3477:3:7"
																				},
																				"nativeSrc": "3477:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3477:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3501:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3501:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3435:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "3435:41:7"
																		},
																		"nativeSrc": "3435:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3435:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3425:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3425:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3529:292:7",
															"nodeType": "YulBlock",
															"src": "3529:292:7",
															"statements": [
																{
																	"nativeSrc": "3544:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3544:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3568:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3568:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3579:2:7",
																						"nodeType": "YulLiteral",
																						"src": "3579:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3564:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3564:3:7"
																				},
																				"nativeSrc": "3564:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3564:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3558:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3558:5:7"
																		},
																		"nativeSrc": "3558:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3558:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3548:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3548:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3630:83:7",
																		"nodeType": "YulBlock",
																		"src": "3630:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3632:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "3632:77:7"
																					},
																					"nativeSrc": "3632:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3632:79:7"
																				},
																				"nativeSrc": "3632:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3632:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3602:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3602:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3610:18:7",
																				"nodeType": "YulLiteral",
																				"src": "3610:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3599:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3599:2:7"
																		},
																		"nativeSrc": "3599:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3599:30:7"
																	},
																	"nativeSrc": "3596:117:7",
																	"nodeType": "YulIf",
																	"src": "3596:117:7"
																},
																{
																	"nativeSrc": "3727:84:7",
																	"nodeType": "YulAssignment",
																	"src": "3727:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3783:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3783:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3794:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3794:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3779:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3779:3:7"
																				},
																				"nativeSrc": "3779:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3779:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3803:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3803:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3737:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "3737:41:7"
																		},
																		"nativeSrc": "3737:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3737:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3727:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3727:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3831:292:7",
															"nodeType": "YulBlock",
															"src": "3831:292:7",
															"statements": [
																{
																	"nativeSrc": "3846:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3846:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3870:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3870:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3881:2:7",
																						"nodeType": "YulLiteral",
																						"src": "3881:2:7",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3866:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3866:3:7"
																				},
																				"nativeSrc": "3866:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3866:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3860:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3860:5:7"
																		},
																		"nativeSrc": "3860:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3860:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3850:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3850:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3932:83:7",
																		"nodeType": "YulBlock",
																		"src": "3932:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3934:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "3934:77:7"
																					},
																					"nativeSrc": "3934:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3934:79:7"
																				},
																				"nativeSrc": "3934:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3934:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3904:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3904:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3912:18:7",
																				"nodeType": "YulLiteral",
																				"src": "3912:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3901:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3901:2:7"
																		},
																		"nativeSrc": "3901:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3901:30:7"
																	},
																	"nativeSrc": "3898:117:7",
																	"nodeType": "YulIf",
																	"src": "3898:117:7"
																},
																{
																	"nativeSrc": "4029:84:7",
																	"nodeType": "YulAssignment",
																	"src": "4029:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4085:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4085:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4096:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4096:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4081:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4081:3:7"
																				},
																				"nativeSrc": "4081:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4081:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4105:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4105:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4039:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "4039:41:7"
																		},
																		"nativeSrc": "4039:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4039:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4029:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4029:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4133:129:7",
															"nodeType": "YulBlock",
															"src": "4133:129:7",
															"statements": [
																{
																	"nativeSrc": "4148:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4148:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4162:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4162:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4152:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4152:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4178:74:7",
																	"nodeType": "YulAssignment",
																	"src": "4178:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4224:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4224:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4235:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4235:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4220:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4220:3:7"
																				},
																				"nativeSrc": "4220:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4220:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4244:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4244:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4188:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "4188:31:7"
																		},
																		"nativeSrc": "4188:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4188:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4178:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4178:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nativeSrc": "2930:1339:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3034:9:7",
														"nodeType": "YulTypedName",
														"src": "3034:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3045:7:7",
														"nodeType": "YulTypedName",
														"src": "3045:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3057:6:7",
														"nodeType": "YulTypedName",
														"src": "3057:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3065:6:7",
														"nodeType": "YulTypedName",
														"src": "3065:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3073:6:7",
														"nodeType": "YulTypedName",
														"src": "3073:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3081:6:7",
														"nodeType": "YulTypedName",
														"src": "3081:6:7",
														"type": ""
													}
												],
												"src": "2930:1339:7"
											},
											{
												"body": {
													"nativeSrc": "4334:40:7",
													"nodeType": "YulBlock",
													"src": "4334:40:7",
													"statements": [
														{
															"nativeSrc": "4345:22:7",
															"nodeType": "YulAssignment",
															"src": "4345:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4361:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4361:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4355:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4355:5:7"
																},
																"nativeSrc": "4355:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4355:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4345:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4345:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4275:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4317:5:7",
														"nodeType": "YulTypedName",
														"src": "4317:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4327:6:7",
														"nodeType": "YulTypedName",
														"src": "4327:6:7",
														"type": ""
													}
												],
												"src": "4275:99:7"
											},
											{
												"body": {
													"nativeSrc": "4408:152:7",
													"nodeType": "YulBlock",
													"src": "4408:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4425:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4425:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4428:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4418:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:7"
																},
																"nativeSrc": "4418:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4418:88:7"
															},
															"nativeSrc": "4418:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4418:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4522:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4522:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4525:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4525:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4515:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4515:6:7"
																},
																"nativeSrc": "4515:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4515:15:7"
															},
															"nativeSrc": "4515:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4515:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4546:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4546:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4549:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4549:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4539:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4539:6:7"
																},
																"nativeSrc": "4539:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4539:15:7"
															},
															"nativeSrc": "4539:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4539:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4380:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4380:180:7"
											},
											{
												"body": {
													"nativeSrc": "4617:269:7",
													"nodeType": "YulBlock",
													"src": "4617:269:7",
													"statements": [
														{
															"nativeSrc": "4627:22:7",
															"nodeType": "YulAssignment",
															"src": "4627:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4641:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4641:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4647:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4647:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4637:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4637:3:7"
																},
																"nativeSrc": "4637:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4637:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4627:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4627:6:7"
																}
															]
														},
														{
															"nativeSrc": "4658:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4658:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4688:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4688:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4694:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4694:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4684:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4684:3:7"
																},
																"nativeSrc": "4684:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4684:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4662:18:7",
																	"nodeType": "YulTypedName",
																	"src": "4662:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4735:51:7",
																"nodeType": "YulBlock",
																"src": "4735:51:7",
																"statements": [
																	{
																		"nativeSrc": "4749:27:7",
																		"nodeType": "YulAssignment",
																		"src": "4749:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4763:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4763:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4771:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4771:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4759:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4759:3:7"
																			},
																			"nativeSrc": "4759:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4759:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4749:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4749:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4715:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4715:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4708:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4708:6:7"
																},
																"nativeSrc": "4708:26:7",
																"nodeType": "YulFunctionCall",
																"src": "4708:26:7"
															},
															"nativeSrc": "4705:81:7",
															"nodeType": "YulIf",
															"src": "4705:81:7"
														},
														{
															"body": {
																"nativeSrc": "4838:42:7",
																"nodeType": "YulBlock",
																"src": "4838:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4852:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4852:16:7"
																			},
																			"nativeSrc": "4852:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4852:18:7"
																		},
																		"nativeSrc": "4852:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4852:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4802:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4802:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4825:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4825:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4833:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4833:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4822:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4822:2:7"
																		},
																		"nativeSrc": "4822:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4799:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4799:2:7"
																},
																"nativeSrc": "4799:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4799:38:7"
															},
															"nativeSrc": "4796:84:7",
															"nodeType": "YulIf",
															"src": "4796:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4566:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4601:4:7",
														"nodeType": "YulTypedName",
														"src": "4601:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4610:6:7",
														"nodeType": "YulTypedName",
														"src": "4610:6:7",
														"type": ""
													}
												],
												"src": "4566:320:7"
											},
											{
												"body": {
													"nativeSrc": "4946:87:7",
													"nodeType": "YulBlock",
													"src": "4946:87:7",
													"statements": [
														{
															"nativeSrc": "4956:11:7",
															"nodeType": "YulAssignment",
															"src": "4956:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "4964:3:7",
																"nodeType": "YulIdentifier",
																"src": "4964:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4956:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4956:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4984:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4984:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4987:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4987:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4977:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4977:6:7"
																},
																"nativeSrc": "4977:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4977:14:7"
															},
															"nativeSrc": "4977:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "4977:14:7"
														},
														{
															"nativeSrc": "5000:26:7",
															"nodeType": "YulAssignment",
															"src": "5000:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5018:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5018:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5021:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5021:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5008:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5008:9:7"
																},
																"nativeSrc": "5008:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5008:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5000:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5000:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4892:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4933:3:7",
														"nodeType": "YulTypedName",
														"src": "4933:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4941:4:7",
														"nodeType": "YulTypedName",
														"src": "4941:4:7",
														"type": ""
													}
												],
												"src": "4892:141:7"
											},
											{
												"body": {
													"nativeSrc": "5083:49:7",
													"nodeType": "YulBlock",
													"src": "5083:49:7",
													"statements": [
														{
															"nativeSrc": "5093:33:7",
															"nodeType": "YulAssignment",
															"src": "5093:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5111:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5111:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5118:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5118:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5107:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5107:3:7"
																		},
																		"nativeSrc": "5107:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5107:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5123:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5123:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5103:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5103:3:7"
																},
																"nativeSrc": "5103:23:7",
																"nodeType": "YulFunctionCall",
																"src": "5103:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5093:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5093:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5039:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5066:5:7",
														"nodeType": "YulTypedName",
														"src": "5066:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5076:6:7",
														"nodeType": "YulTypedName",
														"src": "5076:6:7",
														"type": ""
													}
												],
												"src": "5039:93:7"
											},
											{
												"body": {
													"nativeSrc": "5191:54:7",
													"nodeType": "YulBlock",
													"src": "5191:54:7",
													"statements": [
														{
															"nativeSrc": "5201:37:7",
															"nodeType": "YulAssignment",
															"src": "5201:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5226:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5226:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5232:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5232:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5222:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5222:3:7"
																},
																"nativeSrc": "5222:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5222:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5201:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5201:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5138:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5166:4:7",
														"nodeType": "YulTypedName",
														"src": "5166:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5172:5:7",
														"nodeType": "YulTypedName",
														"src": "5172:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5182:8:7",
														"nodeType": "YulTypedName",
														"src": "5182:8:7",
														"type": ""
													}
												],
												"src": "5138:107:7"
											},
											{
												"body": {
													"nativeSrc": "5327:317:7",
													"nodeType": "YulBlock",
													"src": "5327:317:7",
													"statements": [
														{
															"nativeSrc": "5337:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5337:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5358:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "5358:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5370:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5370:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5354:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5354:3:7"
																},
																"nativeSrc": "5354:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5354:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5341:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5341:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5381:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5381:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5412:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5412:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5423:66:7",
																		"nodeType": "YulLiteral",
																		"src": "5423:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5393:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5393:18:7"
																},
																"nativeSrc": "5393:97:7",
																"nodeType": "YulFunctionCall",
																"src": "5393:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5385:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5385:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5499:51:7",
															"nodeType": "YulAssignment",
															"src": "5499:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5530:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5530:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5541:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5541:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5511:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5511:18:7"
																},
																"nativeSrc": "5511:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5511:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5499:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5499:8:7"
																}
															]
														},
														{
															"nativeSrc": "5559:30:7",
															"nodeType": "YulAssignment",
															"src": "5559:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5572:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5572:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5583:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5583:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5579:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5579:3:7"
																		},
																		"nativeSrc": "5579:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5579:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5568:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5568:3:7"
																},
																"nativeSrc": "5568:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5568:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5559:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5559:5:7"
																}
															]
														},
														{
															"nativeSrc": "5598:40:7",
															"nodeType": "YulAssignment",
															"src": "5598:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5611:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5611:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5622:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "5622:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5632:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5632:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5618:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5618:3:7"
																		},
																		"nativeSrc": "5618:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5618:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5608:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5608:2:7"
																},
																"nativeSrc": "5608:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5608:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5598:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5251:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5288:5:7",
														"nodeType": "YulTypedName",
														"src": "5288:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5295:10:7",
														"nodeType": "YulTypedName",
														"src": "5295:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5307:8:7",
														"nodeType": "YulTypedName",
														"src": "5307:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5320:6:7",
														"nodeType": "YulTypedName",
														"src": "5320:6:7",
														"type": ""
													}
												],
												"src": "5251:393:7"
											},
											{
												"body": {
													"nativeSrc": "5682:28:7",
													"nodeType": "YulBlock",
													"src": "5682:28:7",
													"statements": [
														{
															"nativeSrc": "5692:12:7",
															"nodeType": "YulAssignment",
															"src": "5692:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "5699:5:7",
																"nodeType": "YulIdentifier",
																"src": "5699:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5692:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5692:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5650:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5668:5:7",
														"nodeType": "YulTypedName",
														"src": "5668:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5678:3:7",
														"nodeType": "YulTypedName",
														"src": "5678:3:7",
														"type": ""
													}
												],
												"src": "5650:60:7"
											},
											{
												"body": {
													"nativeSrc": "5776:82:7",
													"nodeType": "YulBlock",
													"src": "5776:82:7",
													"statements": [
														{
															"nativeSrc": "5786:66:7",
															"nodeType": "YulAssignment",
															"src": "5786:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5844:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5844:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5826:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "5826:17:7"
																				},
																				"nativeSrc": "5826:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5826:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5817:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "5817:8:7"
																		},
																		"nativeSrc": "5817:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5817:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5799:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5799:17:7"
																},
																"nativeSrc": "5799:53:7",
																"nodeType": "YulFunctionCall",
																"src": "5799:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5786:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5786:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5716:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5756:5:7",
														"nodeType": "YulTypedName",
														"src": "5756:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5766:9:7",
														"nodeType": "YulTypedName",
														"src": "5766:9:7",
														"type": ""
													}
												],
												"src": "5716:142:7"
											},
											{
												"body": {
													"nativeSrc": "5911:28:7",
													"nodeType": "YulBlock",
													"src": "5911:28:7",
													"statements": [
														{
															"nativeSrc": "5921:12:7",
															"nodeType": "YulAssignment",
															"src": "5921:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "5928:5:7",
																"nodeType": "YulIdentifier",
																"src": "5928:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5921:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5921:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5864:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5897:5:7",
														"nodeType": "YulTypedName",
														"src": "5897:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5907:3:7",
														"nodeType": "YulTypedName",
														"src": "5907:3:7",
														"type": ""
													}
												],
												"src": "5864:75:7"
											},
											{
												"body": {
													"nativeSrc": "6021:193:7",
													"nodeType": "YulBlock",
													"src": "6021:193:7",
													"statements": [
														{
															"nativeSrc": "6031:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6031:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6086:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "6086:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6055:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6055:30:7"
																},
																"nativeSrc": "6055:39:7",
																"nodeType": "YulFunctionCall",
																"src": "6055:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6035:16:7",
																	"nodeType": "YulTypedName",
																	"src": "6035:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6110:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6110:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6150:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "6150:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6144:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6144:5:7"
																				},
																				"nativeSrc": "6144:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6144:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6157:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6157:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6189:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "6189:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6165:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "6165:23:7"
																				},
																				"nativeSrc": "6165:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6165:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6116:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "6116:27:7"
																		},
																		"nativeSrc": "6116:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6116:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6103:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6103:6:7"
																},
																"nativeSrc": "6103:105:7",
																"nodeType": "YulFunctionCall",
																"src": "6103:105:7"
															},
															"nativeSrc": "6103:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "6103:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5945:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5998:4:7",
														"nodeType": "YulTypedName",
														"src": "5998:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6004:6:7",
														"nodeType": "YulTypedName",
														"src": "6004:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6012:7:7",
														"nodeType": "YulTypedName",
														"src": "6012:7:7",
														"type": ""
													}
												],
												"src": "5945:269:7"
											},
											{
												"body": {
													"nativeSrc": "6269:24:7",
													"nodeType": "YulBlock",
													"src": "6269:24:7",
													"statements": [
														{
															"nativeSrc": "6279:8:7",
															"nodeType": "YulAssignment",
															"src": "6279:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "6286:1:7",
																"nodeType": "YulLiteral",
																"src": "6286:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6279:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6279:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6220:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6265:3:7",
														"nodeType": "YulTypedName",
														"src": "6265:3:7",
														"type": ""
													}
												],
												"src": "6220:73:7"
											},
											{
												"body": {
													"nativeSrc": "6352:136:7",
													"nodeType": "YulBlock",
													"src": "6352:136:7",
													"statements": [
														{
															"nativeSrc": "6362:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6362:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6376:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6376:30:7"
																},
																"nativeSrc": "6376:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6376:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6366:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6366:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6461:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6461:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6467:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6467:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6475:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6475:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6417:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6417:43:7"
																},
																"nativeSrc": "6417:65:7",
																"nodeType": "YulFunctionCall",
																"src": "6417:65:7"
															},
															"nativeSrc": "6417:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "6417:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6299:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6338:4:7",
														"nodeType": "YulTypedName",
														"src": "6338:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6344:6:7",
														"nodeType": "YulTypedName",
														"src": "6344:6:7",
														"type": ""
													}
												],
												"src": "6299:189:7"
											},
											{
												"body": {
													"nativeSrc": "6544:136:7",
													"nodeType": "YulBlock",
													"src": "6544:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6611:63:7",
																"nodeType": "YulBlock",
																"src": "6611:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6655:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6655:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6662:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6662:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6625:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "6625:29:7"
																			},
																			"nativeSrc": "6625:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6625:39:7"
																		},
																		"nativeSrc": "6625:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6625:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6564:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6564:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6571:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6571:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6561:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6561:2:7"
																},
																"nativeSrc": "6561:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6561:14:7"
															},
															"nativeSrc": "6554:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6576:26:7",
																"nodeType": "YulBlock",
																"src": "6576:26:7",
																"statements": [
																	{
																		"nativeSrc": "6578:22:7",
																		"nodeType": "YulAssignment",
																		"src": "6578:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6591:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6591:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6598:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6598:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6587:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6587:3:7"
																			},
																			"nativeSrc": "6587:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6587:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6578:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6578:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6558:2:7",
																"nodeType": "YulBlock",
																"src": "6558:2:7",
																"statements": []
															},
															"src": "6554:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6494:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6532:5:7",
														"nodeType": "YulTypedName",
														"src": "6532:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6539:3:7",
														"nodeType": "YulTypedName",
														"src": "6539:3:7",
														"type": ""
													}
												],
												"src": "6494:186:7"
											},
											{
												"body": {
													"nativeSrc": "6765:464:7",
													"nodeType": "YulBlock",
													"src": "6765:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6791:431:7",
																"nodeType": "YulBlock",
																"src": "6791:431:7",
																"statements": [
																	{
																		"nativeSrc": "6805:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6805:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6853:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6853:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6821:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "6821:31:7"
																			},
																			"nativeSrc": "6821:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6821:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6809:8:7",
																				"nodeType": "YulTypedName",
																				"src": "6809:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6872:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6872:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6895:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "6895:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6923:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "6923:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6905:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "6905:17:7"
																					},
																					"nativeSrc": "6905:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6905:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6891:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6891:3:7"
																			},
																			"nativeSrc": "6891:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6891:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6876:11:7",
																				"nodeType": "YulTypedName",
																				"src": "6876:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7092:27:7",
																			"nodeType": "YulBlock",
																			"src": "7092:27:7",
																			"statements": [
																				{
																					"nativeSrc": "7094:23:7",
																					"nodeType": "YulAssignment",
																					"src": "7094:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7109:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "7109:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7094:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "7094:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7076:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "7076:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7088:2:7",
																					"nodeType": "YulLiteral",
																					"src": "7088:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7073:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7073:2:7"
																			},
																			"nativeSrc": "7073:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7073:18:7"
																		},
																		"nativeSrc": "7070:49:7",
																		"nodeType": "YulIf",
																		"src": "7070:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7161:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "7161:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7178:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "7178:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7206:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "7206:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7188:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "7188:17:7"
																							},
																							"nativeSrc": "7188:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "7188:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7174:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7174:3:7"
																					},
																					"nativeSrc": "7174:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7174:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7132:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "7132:28:7"
																			},
																			"nativeSrc": "7132:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7132:80:7"
																		},
																		"nativeSrc": "7132:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7132:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6782:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6782:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6787:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6787:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6779:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6779:2:7"
																},
																"nativeSrc": "6779:11:7",
																"nodeType": "YulFunctionCall",
																"src": "6779:11:7"
															},
															"nativeSrc": "6776:446:7",
															"nodeType": "YulIf",
															"src": "6776:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6686:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6741:5:7",
														"nodeType": "YulTypedName",
														"src": "6741:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6748:3:7",
														"nodeType": "YulTypedName",
														"src": "6748:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6753:10:7",
														"nodeType": "YulTypedName",
														"src": "6753:10:7",
														"type": ""
													}
												],
												"src": "6686:543:7"
											},
											{
												"body": {
													"nativeSrc": "7298:54:7",
													"nodeType": "YulBlock",
													"src": "7298:54:7",
													"statements": [
														{
															"nativeSrc": "7308:37:7",
															"nodeType": "YulAssignment",
															"src": "7308:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7333:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7333:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7339:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7339:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7329:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7329:3:7"
																},
																"nativeSrc": "7329:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7329:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7308:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7308:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7235:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7273:4:7",
														"nodeType": "YulTypedName",
														"src": "7273:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7279:5:7",
														"nodeType": "YulTypedName",
														"src": "7279:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7289:8:7",
														"nodeType": "YulTypedName",
														"src": "7289:8:7",
														"type": ""
													}
												],
												"src": "7235:117:7"
											},
											{
												"body": {
													"nativeSrc": "7409:118:7",
													"nodeType": "YulBlock",
													"src": "7409:118:7",
													"statements": [
														{
															"nativeSrc": "7419:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7419:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7468:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7468:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7471:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7471:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7464:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7464:3:7"
																				},
																				"nativeSrc": "7464:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7464:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7483:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7483:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7479:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7479:3:7"
																				},
																				"nativeSrc": "7479:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7479:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7435:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "7435:28:7"
																		},
																		"nativeSrc": "7435:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7435:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7431:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7431:3:7"
																},
																"nativeSrc": "7431:56:7",
																"nodeType": "YulFunctionCall",
																"src": "7431:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7423:4:7",
																	"nodeType": "YulTypedName",
																	"src": "7423:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7496:25:7",
															"nodeType": "YulAssignment",
															"src": "7496:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7510:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7510:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7516:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7516:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7506:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7506:3:7"
																},
																"nativeSrc": "7506:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7506:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7496:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7496:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7358:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7386:4:7",
														"nodeType": "YulTypedName",
														"src": "7386:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7392:5:7",
														"nodeType": "YulTypedName",
														"src": "7392:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7402:6:7",
														"nodeType": "YulTypedName",
														"src": "7402:6:7",
														"type": ""
													}
												],
												"src": "7358:169:7"
											},
											{
												"body": {
													"nativeSrc": "7613:214:7",
													"nodeType": "YulBlock",
													"src": "7613:214:7",
													"statements": [
														{
															"nativeSrc": "7746:37:7",
															"nodeType": "YulAssignment",
															"src": "7746:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7773:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7773:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7779:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7779:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7754:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "7754:18:7"
																},
																"nativeSrc": "7754:29:7",
																"nodeType": "YulFunctionCall",
																"src": "7754:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7746:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7746:4:7"
																}
															]
														},
														{
															"nativeSrc": "7792:29:7",
															"nodeType": "YulAssignment",
															"src": "7792:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7803:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7803:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7813:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7813:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7816:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7816:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7809:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7809:3:7"
																		},
																		"nativeSrc": "7809:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7809:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7800:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7800:2:7"
																},
																"nativeSrc": "7800:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7800:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7792:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7792:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7532:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7594:4:7",
														"nodeType": "YulTypedName",
														"src": "7594:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7600:3:7",
														"nodeType": "YulTypedName",
														"src": "7600:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7608:4:7",
														"nodeType": "YulTypedName",
														"src": "7608:4:7",
														"type": ""
													}
												],
												"src": "7532:295:7"
											},
											{
												"body": {
													"nativeSrc": "7924:1303:7",
													"nodeType": "YulBlock",
													"src": "7924:1303:7",
													"statements": [
														{
															"nativeSrc": "7935:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7935:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7982:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7982:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7949:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "7949:32:7"
																},
																"nativeSrc": "7949:37:7",
																"nodeType": "YulFunctionCall",
																"src": "7949:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7939:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7939:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8071:22:7",
																"nodeType": "YulBlock",
																"src": "8071:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8073:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8073:16:7"
																			},
																			"nativeSrc": "8073:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8073:18:7"
																		},
																		"nativeSrc": "8073:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8073:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8043:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8043:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8051:18:7",
																		"nodeType": "YulLiteral",
																		"src": "8051:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8040:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8040:2:7"
																},
																"nativeSrc": "8040:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8040:30:7"
															},
															"nativeSrc": "8037:56:7",
															"nodeType": "YulIf",
															"src": "8037:56:7"
														},
														{
															"nativeSrc": "8103:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8103:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8149:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8149:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8143:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8143:5:7"
																		},
																		"nativeSrc": "8143:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8143:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8117:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "8117:25:7"
																},
																"nativeSrc": "8117:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8117:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8107:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8107:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8248:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8248:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8254:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8254:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8262:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8262:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8202:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "8202:45:7"
																},
																"nativeSrc": "8202:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8202:67:7"
															},
															"nativeSrc": "8202:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "8202:67:7"
														},
														{
															"nativeSrc": "8279:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8279:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8296:1:7",
																"nodeType": "YulLiteral",
																"src": "8296:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8283:9:7",
																	"nodeType": "YulTypedName",
																	"src": "8283:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8307:17:7",
															"nodeType": "YulAssignment",
															"src": "8307:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8320:4:7",
																"nodeType": "YulLiteral",
																"src": "8320:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8307:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "8307:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8371:611:7",
																		"nodeType": "YulBlock",
																		"src": "8371:611:7",
																		"statements": [
																			{
																				"nativeSrc": "8385:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8385:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8404:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8404:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8416:4:7",
																									"nodeType": "YulLiteral",
																									"src": "8416:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8412:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8412:3:7"
																							},
																							"nativeSrc": "8412:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8412:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8400:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8400:3:7"
																					},
																					"nativeSrc": "8400:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8400:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8389:7:7",
																						"nodeType": "YulTypedName",
																						"src": "8389:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8436:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8436:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8482:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8482:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8450:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "8450:31:7"
																					},
																					"nativeSrc": "8450:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8450:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8440:6:7",
																						"nodeType": "YulTypedName",
																						"src": "8440:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8500:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8500:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8509:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8509:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8504:1:7",
																						"nodeType": "YulTypedName",
																						"src": "8504:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8568:163:7",
																					"nodeType": "YulBlock",
																					"src": "8568:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8593:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8593:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8611:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "8611:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8616:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "8616:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8607:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8607:3:7"
																												},
																												"nativeSrc": "8607:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8607:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8601:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "8601:5:7"
																										},
																										"nativeSrc": "8601:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8601:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8586:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8586:6:7"
																								},
																								"nativeSrc": "8586:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8586:42:7"
																							},
																							"nativeSrc": "8586:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8586:42:7"
																						},
																						{
																							"nativeSrc": "8645:24:7",
																							"nodeType": "YulAssignment",
																							"src": "8645:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8659:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8659:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8667:1:7",
																										"nodeType": "YulLiteral",
																										"src": "8667:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8655:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8655:3:7"
																								},
																								"nativeSrc": "8655:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8655:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8645:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8645:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8686:31:7",
																							"nodeType": "YulAssignment",
																							"src": "8686:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8703:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "8703:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8714:2:7",
																										"nodeType": "YulLiteral",
																										"src": "8714:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8699:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8699:3:7"
																								},
																								"nativeSrc": "8699:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8699:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8686:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "8686:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8534:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "8534:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8537:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8537:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8531:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8531:2:7"
																					},
																					"nativeSrc": "8531:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8531:14:7"
																				},
																				"nativeSrc": "8523:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8546:21:7",
																					"nodeType": "YulBlock",
																					"src": "8546:21:7",
																					"statements": [
																						{
																							"nativeSrc": "8548:17:7",
																							"nodeType": "YulAssignment",
																							"src": "8548:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8557:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "8557:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8560:4:7",
																										"nodeType": "YulLiteral",
																										"src": "8560:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8553:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8553:3:7"
																								},
																								"nativeSrc": "8553:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8553:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8548:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "8548:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8527:3:7",
																					"nodeType": "YulBlock",
																					"src": "8527:3:7",
																					"statements": []
																				},
																				"src": "8523:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "8767:156:7",
																					"nodeType": "YulBlock",
																					"src": "8767:156:7",
																					"statements": [
																						{
																							"nativeSrc": "8785:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8785:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8812:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "8812:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8817:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8817:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8808:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "8808:3:7"
																										},
																										"nativeSrc": "8808:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8808:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8802:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8802:5:7"
																								},
																								"nativeSrc": "8802:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8802:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8789:9:7",
																									"nodeType": "YulTypedName",
																									"src": "8789:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8852:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8852:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8879:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8879:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8894:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "8894:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8902:4:7",
																														"nodeType": "YulLiteral",
																														"src": "8902:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8890:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8890:3:7"
																												},
																												"nativeSrc": "8890:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8890:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8860:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "8860:18:7"
																										},
																										"nativeSrc": "8860:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8860:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8845:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8845:6:7"
																								},
																								"nativeSrc": "8845:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8845:64:7"
																							},
																							"nativeSrc": "8845:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8845:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8750:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8750:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8759:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8759:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8747:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8747:2:7"
																					},
																					"nativeSrc": "8747:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8747:19:7"
																				},
																				"nativeSrc": "8744:179:7",
																				"nodeType": "YulIf",
																				"src": "8744:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8943:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8943:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8957:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "8957:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8965:1:7",
																											"nodeType": "YulLiteral",
																											"src": "8965:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8953:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "8953:3:7"
																									},
																									"nativeSrc": "8953:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "8953:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8969:1:7",
																									"nodeType": "YulLiteral",
																									"src": "8969:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8949:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8949:3:7"
																							},
																							"nativeSrc": "8949:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8949:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8936:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8936:6:7"
																					},
																					"nativeSrc": "8936:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8936:36:7"
																				},
																				"nativeSrc": "8936:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "8936:36:7"
																			}
																		]
																	},
																	"nativeSrc": "8364:618:7",
																	"nodeType": "YulCase",
																	"src": "8364:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8369:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8369:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8999:222:7",
																		"nodeType": "YulBlock",
																		"src": "8999:222:7",
																		"statements": [
																			{
																				"nativeSrc": "9013:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9013:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9026:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9026:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9017:5:7",
																						"nodeType": "YulTypedName",
																						"src": "9017:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9050:67:7",
																					"nodeType": "YulBlock",
																					"src": "9050:67:7",
																					"statements": [
																						{
																							"nativeSrc": "9068:35:7",
																							"nodeType": "YulAssignment",
																							"src": "9068:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9087:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "9087:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9092:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9092:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9083:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "9083:3:7"
																										},
																										"nativeSrc": "9083:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9083:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9077:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9077:5:7"
																								},
																								"nativeSrc": "9077:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9077:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9068:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9068:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9043:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9043:6:7"
																				},
																				"nativeSrc": "9040:77:7",
																				"nodeType": "YulIf",
																				"src": "9040:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9137:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9137:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9196:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9196:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9203:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9203:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9143:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "9143:52:7"
																							},
																							"nativeSrc": "9143:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9143:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9130:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9130:6:7"
																					},
																					"nativeSrc": "9130:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9130:81:7"
																				},
																				"nativeSrc": "9130:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9130:81:7"
																			}
																		]
																	},
																	"nativeSrc": "8991:230:7",
																	"nodeType": "YulCase",
																	"src": "8991:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8344:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8344:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8352:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8352:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8341:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8341:2:7"
																},
																"nativeSrc": "8341:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8341:14:7"
															},
															"nativeSrc": "8334:887:7",
															"nodeType": "YulSwitch",
															"src": "8334:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7832:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7913:4:7",
														"nodeType": "YulTypedName",
														"src": "7913:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7919:3:7",
														"nodeType": "YulTypedName",
														"src": "7919:3:7",
														"type": ""
													}
												],
												"src": "7832:1395:7"
											},
											{
												"body": {
													"nativeSrc": "9278:81:7",
													"nodeType": "YulBlock",
													"src": "9278:81:7",
													"statements": [
														{
															"nativeSrc": "9288:65:7",
															"nodeType": "YulAssignment",
															"src": "9288:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9303:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9303:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9310:42:7",
																		"nodeType": "YulLiteral",
																		"src": "9310:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9299:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9299:3:7"
																},
																"nativeSrc": "9299:54:7",
																"nodeType": "YulFunctionCall",
																"src": "9299:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9288:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9288:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "9233:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9260:5:7",
														"nodeType": "YulTypedName",
														"src": "9260:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9270:7:7",
														"nodeType": "YulTypedName",
														"src": "9270:7:7",
														"type": ""
													}
												],
												"src": "9233:126:7"
											},
											{
												"body": {
													"nativeSrc": "9410:51:7",
													"nodeType": "YulBlock",
													"src": "9410:51:7",
													"statements": [
														{
															"nativeSrc": "9420:35:7",
															"nodeType": "YulAssignment",
															"src": "9420:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9449:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9449:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9431:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9431:17:7"
																},
																"nativeSrc": "9431:24:7",
																"nodeType": "YulFunctionCall",
																"src": "9431:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9420:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9420:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "9365:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9392:5:7",
														"nodeType": "YulTypedName",
														"src": "9392:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9402:7:7",
														"nodeType": "YulTypedName",
														"src": "9402:7:7",
														"type": ""
													}
												],
												"src": "9365:96:7"
											},
											{
												"body": {
													"nativeSrc": "9532:53:7",
													"nodeType": "YulBlock",
													"src": "9532:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9549:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9549:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9572:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9572:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9554:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "9554:17:7"
																		},
																		"nativeSrc": "9554:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9554:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9542:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9542:6:7"
																},
																"nativeSrc": "9542:37:7",
																"nodeType": "YulFunctionCall",
																"src": "9542:37:7"
															},
															"nativeSrc": "9542:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "9542:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9467:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9520:5:7",
														"nodeType": "YulTypedName",
														"src": "9520:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9527:3:7",
														"nodeType": "YulTypedName",
														"src": "9527:3:7",
														"type": ""
													}
												],
												"src": "9467:118:7"
											},
											{
												"body": {
													"nativeSrc": "9689:124:7",
													"nodeType": "YulBlock",
													"src": "9689:124:7",
													"statements": [
														{
															"nativeSrc": "9699:26:7",
															"nodeType": "YulAssignment",
															"src": "9699:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9711:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9711:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9722:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9722:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9707:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9707:3:7"
																},
																"nativeSrc": "9707:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9707:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9699:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9699:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9779:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9779:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9792:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9792:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9803:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9803:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9788:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9788:3:7"
																		},
																		"nativeSrc": "9788:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9788:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9735:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9735:43:7"
																},
																"nativeSrc": "9735:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9735:71:7"
															},
															"nativeSrc": "9735:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9735:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9591:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9661:9:7",
														"nodeType": "YulTypedName",
														"src": "9661:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9673:6:7",
														"nodeType": "YulTypedName",
														"src": "9673:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9684:4:7",
														"nodeType": "YulTypedName",
														"src": "9684:4:7",
														"type": ""
													}
												],
												"src": "9591:222:7"
											},
											{
												"body": {
													"nativeSrc": "9915:73:7",
													"nodeType": "YulBlock",
													"src": "9915:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9932:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9932:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9937:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9937:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9925:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9925:6:7"
																},
																"nativeSrc": "9925:19:7",
																"nodeType": "YulFunctionCall",
																"src": "9925:19:7"
															},
															"nativeSrc": "9925:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "9925:19:7"
														},
														{
															"nativeSrc": "9953:29:7",
															"nodeType": "YulAssignment",
															"src": "9953:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9972:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9972:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9977:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9977:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9968:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9968:3:7"
																},
																"nativeSrc": "9968:14:7",
																"nodeType": "YulFunctionCall",
																"src": "9968:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9953:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9953:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9819:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9887:3:7",
														"nodeType": "YulTypedName",
														"src": "9887:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9892:6:7",
														"nodeType": "YulTypedName",
														"src": "9892:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9903:11:7",
														"nodeType": "YulTypedName",
														"src": "9903:11:7",
														"type": ""
													}
												],
												"src": "9819:169:7"
											},
											{
												"body": {
													"nativeSrc": "10100:53:7",
													"nodeType": "YulBlock",
													"src": "10100:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10122:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10122:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10130:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10130:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10118:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10118:3:7"
																		},
																		"nativeSrc": "10118:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10118:14:7"
																	},
																	{
																		"hexValue": "456d70747920555249",
																		"kind": "string",
																		"nativeSrc": "10134:11:7",
																		"nodeType": "YulLiteral",
																		"src": "10134:11:7",
																		"type": "",
																		"value": "Empty URI"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10111:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10111:6:7"
																},
																"nativeSrc": "10111:35:7",
																"nodeType": "YulFunctionCall",
																"src": "10111:35:7"
															},
															"nativeSrc": "10111:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "10111:35:7"
														}
													]
												},
												"name": "store_literal_in_memory_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf",
												"nativeSrc": "9994:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10092:6:7",
														"nodeType": "YulTypedName",
														"src": "10092:6:7",
														"type": ""
													}
												],
												"src": "9994:159:7"
											},
											{
												"body": {
													"nativeSrc": "10305:219:7",
													"nodeType": "YulBlock",
													"src": "10305:219:7",
													"statements": [
														{
															"nativeSrc": "10315:73:7",
															"nodeType": "YulAssignment",
															"src": "10315:73:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10381:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10381:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10386:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10386:1:7",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10322:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10322:58:7"
																},
																"nativeSrc": "10322:66:7",
																"nodeType": "YulFunctionCall",
																"src": "10322:66:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10315:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10315:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10486:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10486:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf",
																	"nativeSrc": "10397:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10397:88:7"
																},
																"nativeSrc": "10397:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10397:93:7"
															},
															"nativeSrc": "10397:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10397:93:7"
														},
														{
															"nativeSrc": "10499:19:7",
															"nodeType": "YulAssignment",
															"src": "10499:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10510:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10510:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10515:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10515:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10506:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10506:3:7"
																},
																"nativeSrc": "10506:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10506:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10499:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10499:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10159:365:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10293:3:7",
														"nodeType": "YulTypedName",
														"src": "10293:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10301:3:7",
														"nodeType": "YulTypedName",
														"src": "10301:3:7",
														"type": ""
													}
												],
												"src": "10159:365:7"
											},
											{
												"body": {
													"nativeSrc": "10701:248:7",
													"nodeType": "YulBlock",
													"src": "10701:248:7",
													"statements": [
														{
															"nativeSrc": "10711:26:7",
															"nodeType": "YulAssignment",
															"src": "10711:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10723:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10723:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10734:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10734:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10719:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10719:3:7"
																},
																"nativeSrc": "10719:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10719:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10711:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10711:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10758:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10758:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10769:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10769:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10754:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10754:3:7"
																		},
																		"nativeSrc": "10754:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10754:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10777:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10777:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10783:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10783:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10773:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10773:3:7"
																		},
																		"nativeSrc": "10773:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10773:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10747:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10747:6:7"
																},
																"nativeSrc": "10747:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10747:47:7"
															},
															"nativeSrc": "10747:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10747:47:7"
														},
														{
															"nativeSrc": "10803:139:7",
															"nodeType": "YulAssignment",
															"src": "10803:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10937:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10937:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10811:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10811:124:7"
																},
																"nativeSrc": "10811:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10811:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10803:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10803:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10530:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10681:9:7",
														"nodeType": "YulTypedName",
														"src": "10681:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10696:4:7",
														"nodeType": "YulTypedName",
														"src": "10696:4:7",
														"type": ""
													}
												],
												"src": "10530:419:7"
											},
											{
												"body": {
													"nativeSrc": "10983:152:7",
													"nodeType": "YulBlock",
													"src": "10983:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11000:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11000:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11003:77:7",
																		"nodeType": "YulLiteral",
																		"src": "11003:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10993:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10993:6:7"
																},
																"nativeSrc": "10993:88:7",
																"nodeType": "YulFunctionCall",
																"src": "10993:88:7"
															},
															"nativeSrc": "10993:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "10993:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11097:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11097:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11100:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11100:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11090:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11090:6:7"
																},
																"nativeSrc": "11090:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11090:15:7"
															},
															"nativeSrc": "11090:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11090:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11121:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11121:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11124:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11124:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11114:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11114:6:7"
																},
																"nativeSrc": "11114:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11114:15:7"
															},
															"nativeSrc": "11114:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11114:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10955:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "10955:180:7"
											},
											{
												"body": {
													"nativeSrc": "11192:51:7",
													"nodeType": "YulBlock",
													"src": "11192:51:7",
													"statements": [
														{
															"nativeSrc": "11202:34:7",
															"nodeType": "YulAssignment",
															"src": "11202:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11227:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11227:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "11230:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11230:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "11223:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11223:3:7"
																},
																"nativeSrc": "11223:13:7",
																"nodeType": "YulFunctionCall",
																"src": "11223:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "11202:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "11202:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "11141:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11173:5:7",
														"nodeType": "YulTypedName",
														"src": "11173:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "11183:8:7",
														"nodeType": "YulTypedName",
														"src": "11183:8:7",
														"type": ""
													}
												],
												"src": "11141:102:7"
											},
											{
												"body": {
													"nativeSrc": "11322:775:7",
													"nodeType": "YulBlock",
													"src": "11322:775:7",
													"statements": [
														{
															"nativeSrc": "11332:15:7",
															"nodeType": "YulAssignment",
															"src": "11332:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "11341:6:7",
																"nodeType": "YulIdentifier",
																"src": "11341:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11332:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11332:5:7"
																}
															]
														},
														{
															"nativeSrc": "11356:14:7",
															"nodeType": "YulAssignment",
															"src": "11356:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "11365:5:7",
																"nodeType": "YulIdentifier",
																"src": "11365:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "11356:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11356:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11414:677:7",
																"nodeType": "YulBlock",
																"src": "11414:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "11502:22:7",
																			"nodeType": "YulBlock",
																			"src": "11502:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "11504:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "11504:16:7"
																						},
																						"nativeSrc": "11504:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "11504:18:7"
																					},
																					"nativeSrc": "11504:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "11504:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "11480:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "11480:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "11490:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "11490:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "11495:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "11495:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "11486:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11486:3:7"
																					},
																					"nativeSrc": "11486:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "11486:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "11477:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "11477:2:7"
																			},
																			"nativeSrc": "11477:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11477:24:7"
																		},
																		"nativeSrc": "11474:50:7",
																		"nodeType": "YulIf",
																		"src": "11474:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "11569:419:7",
																			"nodeType": "YulBlock",
																			"src": "11569:419:7",
																			"statements": [
																				{
																					"nativeSrc": "11949:25:7",
																					"nodeType": "YulAssignment",
																					"src": "11949:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "11962:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "11962:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "11969:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "11969:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "11958:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "11958:3:7"
																						},
																						"nativeSrc": "11958:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "11958:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "11949:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "11949:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "11544:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "11544:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11554:1:7",
																					"nodeType": "YulLiteral",
																					"src": "11554:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11540:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "11540:3:7"
																			},
																			"nativeSrc": "11540:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11540:16:7"
																		},
																		"nativeSrc": "11537:451:7",
																		"nodeType": "YulIf",
																		"src": "11537:451:7"
																	},
																	{
																		"nativeSrc": "12001:23:7",
																		"nodeType": "YulAssignment",
																		"src": "12001:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "12013:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "12013:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "12019:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "12019:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "12009:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "12009:3:7"
																			},
																			"nativeSrc": "12009:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12009:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "12001:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12001:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12037:44:7",
																		"nodeType": "YulAssignment",
																		"src": "12037:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "12072:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "12072:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "12049:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "12049:22:7"
																			},
																			"nativeSrc": "12049:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12049:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "12037:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "12037:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "11390:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "11390:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11400:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11400:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11387:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11387:2:7"
																},
																"nativeSrc": "11387:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11387:15:7"
															},
															"nativeSrc": "11379:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "11403:2:7",
																"nodeType": "YulBlock",
																"src": "11403:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "11383:3:7",
																"nodeType": "YulBlock",
																"src": "11383:3:7",
																"statements": []
															},
															"src": "11379:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "11249:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "11277:6:7",
														"nodeType": "YulTypedName",
														"src": "11277:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "11285:5:7",
														"nodeType": "YulTypedName",
														"src": "11285:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "11292:8:7",
														"nodeType": "YulTypedName",
														"src": "11292:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "11302:3:7",
														"nodeType": "YulTypedName",
														"src": "11302:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "11310:5:7",
														"nodeType": "YulTypedName",
														"src": "11310:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "11317:4:7",
														"nodeType": "YulTypedName",
														"src": "11317:4:7",
														"type": ""
													}
												],
												"src": "11249:848:7"
											},
											{
												"body": {
													"nativeSrc": "12163:1013:7",
													"nodeType": "YulBlock",
													"src": "12163:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "12358:20:7",
																"nodeType": "YulBlock",
																"src": "12358:20:7",
																"statements": [
																	{
																		"nativeSrc": "12360:10:7",
																		"nodeType": "YulAssignment",
																		"src": "12360:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "12369:1:7",
																			"nodeType": "YulLiteral",
																			"src": "12369:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "12360:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "12360:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12371:5:7",
																		"nodeType": "YulLeave",
																		"src": "12371:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "12348:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "12348:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12341:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12341:6:7"
																},
																"nativeSrc": "12341:16:7",
																"nodeType": "YulFunctionCall",
																"src": "12341:16:7"
															},
															"nativeSrc": "12338:40:7",
															"nodeType": "YulIf",
															"src": "12338:40:7"
														},
														{
															"body": {
																"nativeSrc": "12403:20:7",
																"nodeType": "YulBlock",
																"src": "12403:20:7",
																"statements": [
																	{
																		"nativeSrc": "12405:10:7",
																		"nodeType": "YulAssignment",
																		"src": "12405:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "12414:1:7",
																			"nodeType": "YulLiteral",
																			"src": "12414:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "12405:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "12405:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12416:5:7",
																		"nodeType": "YulLeave",
																		"src": "12416:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "12397:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12397:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12390:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12390:6:7"
																},
																"nativeSrc": "12390:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12390:12:7"
															},
															"nativeSrc": "12387:36:7",
															"nodeType": "YulIf",
															"src": "12387:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "12533:20:7",
																		"nodeType": "YulBlock",
																		"src": "12533:20:7",
																		"statements": [
																			{
																				"nativeSrc": "12535:10:7",
																				"nodeType": "YulAssignment",
																				"src": "12535:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "12544:1:7",
																					"nodeType": "YulLiteral",
																					"src": "12544:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "12535:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "12535:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "12546:5:7",
																				"nodeType": "YulLeave",
																				"src": "12546:5:7"
																			}
																		]
																	},
																	"nativeSrc": "12526:27:7",
																	"nodeType": "YulCase",
																	"src": "12526:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12531:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12531:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "12577:176:7",
																		"nodeType": "YulBlock",
																		"src": "12577:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "12612:22:7",
																					"nodeType": "YulBlock",
																					"src": "12612:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "12614:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "12614:16:7"
																								},
																								"nativeSrc": "12614:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "12614:18:7"
																							},
																							"nativeSrc": "12614:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "12614:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "12597:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "12597:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "12607:3:7",
																							"nodeType": "YulLiteral",
																							"src": "12607:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "12594:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "12594:2:7"
																					},
																					"nativeSrc": "12594:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "12594:17:7"
																				},
																				"nativeSrc": "12591:43:7",
																				"nodeType": "YulIf",
																				"src": "12591:43:7"
																			},
																			{
																				"nativeSrc": "12647:25:7",
																				"nodeType": "YulAssignment",
																				"src": "12647:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "12660:1:7",
																							"nodeType": "YulLiteral",
																							"src": "12660:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "12663:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "12663:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "12656:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "12656:3:7"
																					},
																					"nativeSrc": "12656:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "12656:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "12647:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "12647:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "12703:22:7",
																					"nodeType": "YulBlock",
																					"src": "12703:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "12705:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "12705:16:7"
																								},
																								"nativeSrc": "12705:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "12705:18:7"
																							},
																							"nativeSrc": "12705:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "12705:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "12691:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "12691:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "12698:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "12698:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "12688:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "12688:2:7"
																					},
																					"nativeSrc": "12688:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "12688:14:7"
																				},
																				"nativeSrc": "12685:40:7",
																				"nodeType": "YulIf",
																				"src": "12685:40:7"
																			},
																			{
																				"nativeSrc": "12738:5:7",
																				"nodeType": "YulLeave",
																				"src": "12738:5:7"
																			}
																		]
																	},
																	"nativeSrc": "12562:191:7",
																	"nodeType": "YulCase",
																	"src": "12562:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12567:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12567:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "12483:4:7",
																"nodeType": "YulIdentifier",
																"src": "12483:4:7"
															},
															"nativeSrc": "12476:277:7",
															"nodeType": "YulSwitch",
															"src": "12476:277:7"
														},
														{
															"body": {
																"nativeSrc": "12885:123:7",
																"nodeType": "YulBlock",
																"src": "12885:123:7",
																"statements": [
																	{
																		"nativeSrc": "12899:28:7",
																		"nodeType": "YulAssignment",
																		"src": "12899:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "12912:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "12912:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "12918:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "12918:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "12908:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "12908:3:7"
																			},
																			"nativeSrc": "12908:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12908:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "12899:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "12899:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "12958:22:7",
																			"nodeType": "YulBlock",
																			"src": "12958:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "12960:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "12960:16:7"
																						},
																						"nativeSrc": "12960:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "12960:18:7"
																					},
																					"nativeSrc": "12960:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "12960:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "12946:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "12946:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "12953:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12953:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "12943:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "12943:2:7"
																			},
																			"nativeSrc": "12943:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12943:14:7"
																		},
																		"nativeSrc": "12940:40:7",
																		"nodeType": "YulIf",
																		"src": "12940:40:7"
																	},
																	{
																		"nativeSrc": "12993:5:7",
																		"nodeType": "YulLeave",
																		"src": "12993:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "12788:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "12788:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12794:2:7",
																						"nodeType": "YulLiteral",
																						"src": "12794:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "12785:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "12785:2:7"
																				},
																				"nativeSrc": "12785:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12785:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "12802:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "12802:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12812:2:7",
																						"nodeType": "YulLiteral",
																						"src": "12812:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "12799:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "12799:2:7"
																				},
																				"nativeSrc": "12799:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12799:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12781:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12781:3:7"
																		},
																		"nativeSrc": "12781:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12781:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "12837:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "12837:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12843:3:7",
																						"nodeType": "YulLiteral",
																						"src": "12843:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "12834:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "12834:2:7"
																				},
																				"nativeSrc": "12834:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12834:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "12852:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "12852:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12862:2:7",
																						"nodeType": "YulLiteral",
																						"src": "12862:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "12849:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "12849:2:7"
																				},
																				"nativeSrc": "12849:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12849:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12830:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12830:3:7"
																		},
																		"nativeSrc": "12830:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12830:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "12765:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "12765:2:7"
																},
																"nativeSrc": "12765:111:7",
																"nodeType": "YulFunctionCall",
																"src": "12765:111:7"
															},
															"nativeSrc": "12762:246:7",
															"nodeType": "YulIf",
															"src": "12762:246:7"
														},
														{
															"nativeSrc": "13018:57:7",
															"nodeType": "YulAssignment",
															"src": "13018:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13052:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13052:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "13055:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13055:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "13061:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "13061:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "13071:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13071:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "13033:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "13033:18:7"
																},
																"nativeSrc": "13033:42:7",
																"nodeType": "YulFunctionCall",
																"src": "13033:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "13018:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "13018:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "13025:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13025:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13114:22:7",
																"nodeType": "YulBlock",
																"src": "13114:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13116:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13116:16:7"
																			},
																			"nativeSrc": "13116:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13116:18:7"
																		},
																		"nativeSrc": "13116:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13116:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "13091:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "13091:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "13102:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "13102:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "13107:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13107:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "13098:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13098:3:7"
																		},
																		"nativeSrc": "13098:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13098:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13088:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "13088:2:7"
																},
																"nativeSrc": "13088:25:7",
																"nodeType": "YulFunctionCall",
																"src": "13088:25:7"
															},
															"nativeSrc": "13085:51:7",
															"nodeType": "YulIf",
															"src": "13085:51:7"
														},
														{
															"nativeSrc": "13145:25:7",
															"nodeType": "YulAssignment",
															"src": "13145:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "13158:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "13158:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "13165:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13165:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13154:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13154:3:7"
																},
																"nativeSrc": "13154:16:7",
																"nodeType": "YulFunctionCall",
																"src": "13154:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "13145:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "13145:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "12103:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "12133:4:7",
														"nodeType": "YulTypedName",
														"src": "12133:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "12139:8:7",
														"nodeType": "YulTypedName",
														"src": "12139:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "12149:3:7",
														"nodeType": "YulTypedName",
														"src": "12149:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "12157:5:7",
														"nodeType": "YulTypedName",
														"src": "12157:5:7",
														"type": ""
													}
												],
												"src": "12103:1073:7"
											},
											{
												"body": {
													"nativeSrc": "13225:43:7",
													"nodeType": "YulBlock",
													"src": "13225:43:7",
													"statements": [
														{
															"nativeSrc": "13235:27:7",
															"nodeType": "YulAssignment",
															"src": "13235:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13250:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "13250:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13257:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13257:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13246:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13246:3:7"
																},
																"nativeSrc": "13246:16:7",
																"nodeType": "YulFunctionCall",
																"src": "13246:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13235:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "13235:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "13182:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13207:5:7",
														"nodeType": "YulTypedName",
														"src": "13207:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13217:7:7",
														"nodeType": "YulTypedName",
														"src": "13217:7:7",
														"type": ""
													}
												],
												"src": "13182:86:7"
											},
											{
												"body": {
													"nativeSrc": "13338:217:7",
													"nodeType": "YulBlock",
													"src": "13338:217:7",
													"statements": [
														{
															"nativeSrc": "13348:31:7",
															"nodeType": "YulAssignment",
															"src": "13348:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "13374:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13374:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13356:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13356:17:7"
																},
																"nativeSrc": "13356:23:7",
																"nodeType": "YulFunctionCall",
																"src": "13356:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "13348:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13348:4:7"
																}
															]
														},
														{
															"nativeSrc": "13388:37:7",
															"nodeType": "YulAssignment",
															"src": "13388:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "13416:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "13416:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "13400:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "13400:15:7"
																},
																"nativeSrc": "13400:25:7",
																"nodeType": "YulFunctionCall",
																"src": "13400:25:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "13388:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "13388:8:7"
																}
															]
														},
														{
															"nativeSrc": "13435:113:7",
															"nodeType": "YulAssignment",
															"src": "13435:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "13465:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13465:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "13471:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "13471:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13481:66:7",
																		"nodeType": "YulLiteral",
																		"src": "13481:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "13444:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "13444:20:7"
																},
																"nativeSrc": "13444:104:7",
																"nodeType": "YulFunctionCall",
																"src": "13444:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "13435:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "13435:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "13274:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "13313:4:7",
														"nodeType": "YulTypedName",
														"src": "13313:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "13319:8:7",
														"nodeType": "YulTypedName",
														"src": "13319:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "13332:5:7",
														"nodeType": "YulTypedName",
														"src": "13332:5:7",
														"type": ""
													}
												],
												"src": "13274:281:7"
											},
											{
												"body": {
													"nativeSrc": "13589:152:7",
													"nodeType": "YulBlock",
													"src": "13589:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13606:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13606:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13609:77:7",
																		"nodeType": "YulLiteral",
																		"src": "13609:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13599:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13599:6:7"
																},
																"nativeSrc": "13599:88:7",
																"nodeType": "YulFunctionCall",
																"src": "13599:88:7"
															},
															"nativeSrc": "13599:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "13599:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13703:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13703:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13706:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13706:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13696:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13696:6:7"
																},
																"nativeSrc": "13696:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13696:15:7"
															},
															"nativeSrc": "13696:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13696:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13727:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13727:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13730:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13730:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13720:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13720:6:7"
																},
																"nativeSrc": "13720:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13720:15:7"
															},
															"nativeSrc": "13720:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13720:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "13561:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "13561:180:7"
											},
											{
												"body": {
													"nativeSrc": "13789:143:7",
													"nodeType": "YulBlock",
													"src": "13789:143:7",
													"statements": [
														{
															"nativeSrc": "13799:25:7",
															"nodeType": "YulAssignment",
															"src": "13799:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13822:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13822:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13804:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13804:17:7"
																},
																"nativeSrc": "13804:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13804:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13799:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13799:1:7"
																}
															]
														},
														{
															"nativeSrc": "13833:25:7",
															"nodeType": "YulAssignment",
															"src": "13833:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13856:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13856:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13838:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13838:17:7"
																},
																"nativeSrc": "13838:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13838:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13833:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13833:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13880:22:7",
																"nodeType": "YulBlock",
																"src": "13880:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "13882:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13882:16:7"
																			},
																			"nativeSrc": "13882:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13882:18:7"
																		},
																		"nativeSrc": "13882:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13882:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13877:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13877:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13870:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13870:6:7"
																},
																"nativeSrc": "13870:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13870:9:7"
															},
															"nativeSrc": "13867:35:7",
															"nodeType": "YulIf",
															"src": "13867:35:7"
														},
														{
															"nativeSrc": "13912:14:7",
															"nodeType": "YulAssignment",
															"src": "13912:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13921:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13921:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13924:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13924:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13917:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13917:3:7"
																},
																"nativeSrc": "13917:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13917:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "13912:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13912:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "13747:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13778:1:7",
														"nodeType": "YulTypedName",
														"src": "13778:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13781:1:7",
														"nodeType": "YulTypedName",
														"src": "13781:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "13787:1:7",
														"nodeType": "YulTypedName",
														"src": "13787:1:7",
														"type": ""
													}
												],
												"src": "13747:185:7"
											},
											{
												"body": {
													"nativeSrc": "14044:60:7",
													"nodeType": "YulBlock",
													"src": "14044:60:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14066:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14066:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14074:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14074:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14062:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14062:3:7"
																		},
																		"nativeSrc": "14062:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14062:14:7"
																	},
																	{
																		"hexValue": "416d6f756e7420746f6f206c61726765",
																		"kind": "string",
																		"nativeSrc": "14078:18:7",
																		"nodeType": "YulLiteral",
																		"src": "14078:18:7",
																		"type": "",
																		"value": "Amount too large"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14055:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14055:6:7"
																},
																"nativeSrc": "14055:42:7",
																"nodeType": "YulFunctionCall",
																"src": "14055:42:7"
															},
															"nativeSrc": "14055:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "14055:42:7"
														}
													]
												},
												"name": "store_literal_in_memory_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff",
												"nativeSrc": "13938:166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14036:6:7",
														"nodeType": "YulTypedName",
														"src": "14036:6:7",
														"type": ""
													}
												],
												"src": "13938:166:7"
											},
											{
												"body": {
													"nativeSrc": "14256:220:7",
													"nodeType": "YulBlock",
													"src": "14256:220:7",
													"statements": [
														{
															"nativeSrc": "14266:74:7",
															"nodeType": "YulAssignment",
															"src": "14266:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14332:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14332:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14337:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14337:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14273:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "14273:58:7"
																},
																"nativeSrc": "14273:67:7",
																"nodeType": "YulFunctionCall",
																"src": "14273:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14266:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14266:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14438:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14438:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff",
																	"nativeSrc": "14349:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "14349:88:7"
																},
																"nativeSrc": "14349:93:7",
																"nodeType": "YulFunctionCall",
																"src": "14349:93:7"
															},
															"nativeSrc": "14349:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "14349:93:7"
														},
														{
															"nativeSrc": "14451:19:7",
															"nodeType": "YulAssignment",
															"src": "14451:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14462:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14462:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14467:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14467:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14458:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14458:3:7"
																},
																"nativeSrc": "14458:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14458:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14451:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14451:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14110:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14244:3:7",
														"nodeType": "YulTypedName",
														"src": "14244:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14252:3:7",
														"nodeType": "YulTypedName",
														"src": "14252:3:7",
														"type": ""
													}
												],
												"src": "14110:366:7"
											},
											{
												"body": {
													"nativeSrc": "14653:248:7",
													"nodeType": "YulBlock",
													"src": "14653:248:7",
													"statements": [
														{
															"nativeSrc": "14663:26:7",
															"nodeType": "YulAssignment",
															"src": "14663:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14675:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14675:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14686:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14686:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14671:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14671:3:7"
																},
																"nativeSrc": "14671:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14671:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14663:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14663:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14710:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14710:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14721:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14721:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14706:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14706:3:7"
																		},
																		"nativeSrc": "14706:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14706:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14729:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14729:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14735:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14735:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14725:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14725:3:7"
																		},
																		"nativeSrc": "14725:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14725:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14699:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14699:6:7"
																},
																"nativeSrc": "14699:47:7",
																"nodeType": "YulFunctionCall",
																"src": "14699:47:7"
															},
															"nativeSrc": "14699:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "14699:47:7"
														},
														{
															"nativeSrc": "14755:139:7",
															"nodeType": "YulAssignment",
															"src": "14755:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14889:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14889:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14763:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "14763:124:7"
																},
																"nativeSrc": "14763:131:7",
																"nodeType": "YulFunctionCall",
																"src": "14763:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14755:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14755:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14482:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14633:9:7",
														"nodeType": "YulTypedName",
														"src": "14633:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14648:4:7",
														"nodeType": "YulTypedName",
														"src": "14648:4:7",
														"type": ""
													}
												],
												"src": "14482:419:7"
											},
											{
												"body": {
													"nativeSrc": "14955:362:7",
													"nodeType": "YulBlock",
													"src": "14955:362:7",
													"statements": [
														{
															"nativeSrc": "14965:25:7",
															"nodeType": "YulAssignment",
															"src": "14965:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14988:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14988:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14970:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14970:17:7"
																},
																"nativeSrc": "14970:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14970:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14965:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14965:1:7"
																}
															]
														},
														{
															"nativeSrc": "14999:25:7",
															"nodeType": "YulAssignment",
															"src": "14999:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15022:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15022:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15004:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15004:17:7"
																},
																"nativeSrc": "15004:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15004:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14999:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14999:1:7"
																}
															]
														},
														{
															"nativeSrc": "15033:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "15033:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15056:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15056:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15059:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15059:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15052:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15052:3:7"
																},
																"nativeSrc": "15052:9:7",
																"nodeType": "YulFunctionCall",
																"src": "15052:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "15037:11:7",
																	"nodeType": "YulTypedName",
																	"src": "15037:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15070:41:7",
															"nodeType": "YulAssignment",
															"src": "15070:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "15099:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "15099:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15081:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15081:17:7"
																},
																"nativeSrc": "15081:30:7",
																"nodeType": "YulFunctionCall",
																"src": "15081:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "15070:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "15070:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15288:22:7",
																"nodeType": "YulBlock",
																"src": "15288:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15290:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "15290:16:7"
																			},
																			"nativeSrc": "15290:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15290:18:7"
																		},
																		"nativeSrc": "15290:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15290:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "15221:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "15221:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "15214:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "15214:6:7"
																				},
																				"nativeSrc": "15214:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15214:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "15244:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "15244:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "15251:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "15251:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "15260:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "15260:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "15247:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "15247:3:7"
																						},
																						"nativeSrc": "15247:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "15247:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "15241:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "15241:2:7"
																				},
																				"nativeSrc": "15241:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15241:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "15194:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "15194:2:7"
																		},
																		"nativeSrc": "15194:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15194:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15174:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15174:6:7"
																},
																"nativeSrc": "15174:113:7",
																"nodeType": "YulFunctionCall",
																"src": "15174:113:7"
															},
															"nativeSrc": "15171:139:7",
															"nodeType": "YulIf",
															"src": "15171:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "14907:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14938:1:7",
														"nodeType": "YulTypedName",
														"src": "14938:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14941:1:7",
														"nodeType": "YulTypedName",
														"src": "14941:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14947:7:7",
														"nodeType": "YulTypedName",
														"src": "14947:7:7",
														"type": ""
													}
												],
												"src": "14907:410:7"
											},
											{
												"body": {
													"nativeSrc": "15367:147:7",
													"nodeType": "YulBlock",
													"src": "15367:147:7",
													"statements": [
														{
															"nativeSrc": "15377:25:7",
															"nodeType": "YulAssignment",
															"src": "15377:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15400:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15400:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15382:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15382:17:7"
																},
																"nativeSrc": "15382:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15382:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15377:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15377:1:7"
																}
															]
														},
														{
															"nativeSrc": "15411:25:7",
															"nodeType": "YulAssignment",
															"src": "15411:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15434:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15434:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15416:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15416:17:7"
																},
																"nativeSrc": "15416:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15416:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15411:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15411:1:7"
																}
															]
														},
														{
															"nativeSrc": "15445:16:7",
															"nodeType": "YulAssignment",
															"src": "15445:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15456:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15456:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15459:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15459:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15452:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15452:3:7"
																},
																"nativeSrc": "15452:9:7",
																"nodeType": "YulFunctionCall",
																"src": "15452:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15445:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15445:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15485:22:7",
																"nodeType": "YulBlock",
																"src": "15485:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15487:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "15487:16:7"
																			},
																			"nativeSrc": "15487:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15487:18:7"
																		},
																		"nativeSrc": "15487:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15487:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15477:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15477:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15480:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15480:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15474:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "15474:2:7"
																},
																"nativeSrc": "15474:10:7",
																"nodeType": "YulFunctionCall",
																"src": "15474:10:7"
															},
															"nativeSrc": "15471:36:7",
															"nodeType": "YulIf",
															"src": "15471:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "15323:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15354:1:7",
														"nodeType": "YulTypedName",
														"src": "15354:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15357:1:7",
														"nodeType": "YulTypedName",
														"src": "15357:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15363:3:7",
														"nodeType": "YulTypedName",
														"src": "15363:3:7",
														"type": ""
													}
												],
												"src": "15323:191:7"
											},
											{
												"body": {
													"nativeSrc": "15585:53:7",
													"nodeType": "YulBlock",
													"src": "15585:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15602:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15602:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15625:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "15625:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "15607:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "15607:17:7"
																		},
																		"nativeSrc": "15607:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15607:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15595:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15595:6:7"
																},
																"nativeSrc": "15595:37:7",
																"nodeType": "YulFunctionCall",
																"src": "15595:37:7"
															},
															"nativeSrc": "15595:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "15595:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "15520:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15573:5:7",
														"nodeType": "YulTypedName",
														"src": "15573:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15580:3:7",
														"nodeType": "YulTypedName",
														"src": "15580:3:7",
														"type": ""
													}
												],
												"src": "15520:118:7"
											},
											{
												"body": {
													"nativeSrc": "15798:288:7",
													"nodeType": "YulBlock",
													"src": "15798:288:7",
													"statements": [
														{
															"nativeSrc": "15808:26:7",
															"nodeType": "YulAssignment",
															"src": "15808:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15820:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15820:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15831:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15831:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15816:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15816:3:7"
																},
																"nativeSrc": "15816:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15816:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15808:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15808:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15888:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15888:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15901:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15901:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15912:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15912:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15897:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15897:3:7"
																		},
																		"nativeSrc": "15897:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15897:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15844:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15844:43:7"
																},
																"nativeSrc": "15844:71:7",
																"nodeType": "YulFunctionCall",
																"src": "15844:71:7"
															},
															"nativeSrc": "15844:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "15844:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15969:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15969:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15982:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15982:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15993:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15993:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15978:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15978:3:7"
																		},
																		"nativeSrc": "15978:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15978:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15925:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15925:43:7"
																},
																"nativeSrc": "15925:72:7",
																"nodeType": "YulFunctionCall",
																"src": "15925:72:7"
															},
															"nativeSrc": "15925:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "15925:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16051:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16051:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16064:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16064:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16075:2:7",
																				"nodeType": "YulLiteral",
																				"src": "16075:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16060:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16060:3:7"
																		},
																		"nativeSrc": "16060:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16060:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16007:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "16007:43:7"
																},
																"nativeSrc": "16007:72:7",
																"nodeType": "YulFunctionCall",
																"src": "16007:72:7"
															},
															"nativeSrc": "16007:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "16007:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15644:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15754:9:7",
														"nodeType": "YulTypedName",
														"src": "15754:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15766:6:7",
														"nodeType": "YulTypedName",
														"src": "15766:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15774:6:7",
														"nodeType": "YulTypedName",
														"src": "15774:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15782:6:7",
														"nodeType": "YulTypedName",
														"src": "15782:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15793:4:7",
														"nodeType": "YulTypedName",
														"src": "15793:4:7",
														"type": ""
													}
												],
												"src": "15644:442:7"
											},
											{
												"body": {
													"nativeSrc": "16190:124:7",
													"nodeType": "YulBlock",
													"src": "16190:124:7",
													"statements": [
														{
															"nativeSrc": "16200:26:7",
															"nodeType": "YulAssignment",
															"src": "16200:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16212:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16212:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16223:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16223:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16208:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16208:3:7"
																},
																"nativeSrc": "16208:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16208:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16200:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16200:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16280:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16280:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16293:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16293:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16304:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16304:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16289:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16289:3:7"
																		},
																		"nativeSrc": "16289:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16289:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16236:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "16236:43:7"
																},
																"nativeSrc": "16236:71:7",
																"nodeType": "YulFunctionCall",
																"src": "16236:71:7"
															},
															"nativeSrc": "16236:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "16236:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "16092:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16162:9:7",
														"nodeType": "YulTypedName",
														"src": "16162:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16174:6:7",
														"nodeType": "YulTypedName",
														"src": "16174:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16185:4:7",
														"nodeType": "YulTypedName",
														"src": "16185:4:7",
														"type": ""
													}
												],
												"src": "16092:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Empty URI\")\n\n    }\n\n    function abi_encode_t_stringliteral_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount too large\")\n\n    }\n\n    function abi_encode_t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516127d73803806127d7833981810160405281019061003191906106ce565b3384848160039081610043919061098a565b508060049081610053919061098a565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c6575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100bd9190610a98565b60405180910390fd5b6100d5816101e560201b60201c565b505f825103610119576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011090610b0b565b60405180910390fd5b8160069081610128919061098a565b505f6101386102a860201b60201c565b905080600a6101479190610c91565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101729190610d08565b8211156101b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ab90610d82565b60405180910390fd5b6101db3382600a6101c59190610c91565b846101d09190610da0565b6102b060201b60201c565b5050505050610e71565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610320575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103179190610a98565b60405180910390fd5b6103315f838361033560201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610385578060025f8282546103799190610de1565b92505081905550610453565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561040e578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161040593929190610e23565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361049a578060025f82825403925050819055506104e4565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105419190610e58565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6105ad82610567565b810181811067ffffffffffffffff821117156105cc576105cb610577565b5b80604052505050565b5f6105de61054e565b90506105ea82826105a4565b919050565b5f67ffffffffffffffff82111561060957610608610577565b5b61061282610567565b9050602081019050919050565b8281835e5f83830152505050565b5f61063f61063a846105ef565b6105d5565b90508281526020810184848401111561065b5761065a610563565b5b61066684828561061f565b509392505050565b5f82601f8301126106825761068161055f565b5b815161069284826020860161062d565b91505092915050565b5f819050919050565b6106ad8161069b565b81146106b7575f80fd5b50565b5f815190506106c8816106a4565b92915050565b5f805f80608085870312156106e6576106e5610557565b5b5f85015167ffffffffffffffff8111156107035761070261055b565b5b61070f8782880161066e565b945050602085015167ffffffffffffffff8111156107305761072f61055b565b5b61073c8782880161066e565b935050604085015167ffffffffffffffff81111561075d5761075c61055b565b5b6107698782880161066e565b925050606061077a878288016106ba565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806107d457607f821691505b6020821081036107e7576107e6610790565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026108497fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261080e565b610853868361080e565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61088e6108896108848461069b565b61086b565b61069b565b9050919050565b5f819050919050565b6108a783610874565b6108bb6108b382610895565b84845461081a565b825550505050565b5f90565b6108cf6108c3565b6108da81848461089e565b505050565b5b818110156108fd576108f25f826108c7565b6001810190506108e0565b5050565b601f82111561094257610913816107ed565b61091c846107ff565b8101602085101561092b578190505b61093f610937856107ff565b8301826108df565b50505b505050565b5f82821c905092915050565b5f6109625f1984600802610947565b1980831691505092915050565b5f61097a8383610953565b9150826002028217905092915050565b61099382610786565b67ffffffffffffffff8111156109ac576109ab610577565b5b6109b682546107bd565b6109c1828285610901565b5f60209050601f8311600181146109f2575f84156109e0578287015190505b6109ea858261096f565b865550610a51565b601f198416610a00866107ed565b5f5b82811015610a2757848901518255600182019150602085019450602081019050610a02565b86831015610a445784890151610a40601f891682610953565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a8282610a59565b9050919050565b610a9281610a78565b82525050565b5f602082019050610aab5f830184610a89565b92915050565b5f82825260208201905092915050565b7f456d7074792055524900000000000000000000000000000000000000000000005f82015250565b5f610af5600983610ab1565b9150610b0082610ac1565b602082019050919050565b5f6020820190508181035f830152610b2281610ae9565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115610bab57808604811115610b8757610b86610b29565b5b6001851615610b965780820291505b8081029050610ba485610b56565b9450610b6b565b94509492505050565b5f82610bc35760019050610c7e565b81610bd0575f9050610c7e565b8160018114610be65760028114610bf057610c1f565b6001915050610c7e565b60ff841115610c0257610c01610b29565b5b8360020a915084821115610c1957610c18610b29565b5b50610c7e565b5060208310610133831016604e8410600b8410161715610c545782820a905083811115610c4f57610c4e610b29565b5b610c7e565b610c618484846001610b62565b92509050818404811115610c7857610c77610b29565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610c9b8261069b565b9150610ca683610c85565b9250610cd37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610bb4565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610d128261069b565b9150610d1d8361069b565b925082610d2d57610d2c610cdb565b5b828204905092915050565b7f416d6f756e7420746f6f206c61726765000000000000000000000000000000005f82015250565b5f610d6c601083610ab1565b9150610d7782610d38565b602082019050919050565b5f6020820190508181035f830152610d9981610d60565b9050919050565b5f610daa8261069b565b9150610db58361069b565b9250828202610dc38161069b565b91508282048414831517610dda57610dd9610b29565b5b5092915050565b5f610deb8261069b565b9150610df68361069b565b9250828201905080821115610e0e57610e0d610b29565b5b92915050565b610e1d8161069b565b82525050565b5f606082019050610e365f830186610a89565b610e436020830185610e14565b610e506040830184610e14565b949350505050565b5f602082019050610e6b5f830184610e14565b92915050565b61195980610e7e5f395ff3fe608060405234801561000f575f80fd5b50600436106100fe575f3560e01c806342966c681161009557806395d89b411161006457806395d89b4114610286578063a9059cbb146102a4578063dd62ed3e146102d4578063f2fde38b14610304576100fe565b806342966c681461021257806370a082311461022e578063715018a61461025e5780638da5cb5b14610268576100fe565b806318160ddd116100d157806318160ddd1461018a57806323b872dd146101a8578063313ce567146101d857806340c10f19146101f6576100fe565b806304787ca21461010257806306fdde031461011e578063095ea7b31461013c578063135d088d1461016c575b5f80fd5b61011c60048036038101906101179190611160565b610320565b005b61012661037e565b6040516101339190611207565b60405180910390f35b610156600480360381019061015191906112b4565b61040e565b604051610163919061130c565b60405180910390f35b610174610430565b6040516101819190611207565b60405180910390f35b6101926104bc565b60405161019f9190611334565b60405180910390f35b6101c260048036038101906101bd919061134d565b6104c5565b6040516101cf919061130c565b60405180910390f35b6101e06104f3565b6040516101ed91906113b8565b60405180910390f35b610210600480360381019061020b91906112b4565b6104fb565b005b61022c600480360381019061022791906113d1565b6105c1565b005b610248600480360381019061024391906113fc565b610610565b6040516102559190611334565b60405180910390f35b610266610655565b005b610270610668565b60405161027d9190611436565b60405180910390f35b61028e610690565b60405161029b9190611207565b60405180910390f35b6102be60048036038101906102b991906112b4565b610720565b6040516102cb919061130c565b60405180910390f35b6102ee60048036038101906102e9919061144f565b610742565b6040516102fb9190611334565b60405180910390f35b61031e600480360381019061031991906113fc565b6107c4565b005b610328610848565b5f81510361036b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610362906114d7565b60405180910390fd5b806006908161037a91906116ef565b5050565b60606003805461038d90611522565b80601f01602080910402602001604051908101604052809291908181526020018280546103b990611522565b80156104045780601f106103db57610100808354040283529160200191610404565b820191905f5260205f20905b8154815290600101906020018083116103e757829003601f168201915b5050505050905090565b5f806104186108cf565b90506104258185856108d6565b600191505092915050565b6006805461043d90611522565b80601f016020809104026020016040519081016040528092919081815260200182805461046990611522565b80156104b45780601f1061048b576101008083540402835291602001916104b4565b820191905f5260205f20905b81548152906001019060200180831161049757829003601f168201915b505050505081565b5f600254905090565b5f806104cf6108cf565b90506104dc8582856108e8565b6104e785858561097a565b60019150509392505050565b5f6012905090565b610503610848565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610571576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056890611808565b60405180910390fd5b5f81036105b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105aa90611870565b60405180910390fd5b6105bd8282610a6a565b5050565b5f8103610603576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fa90611870565b60405180910390fd5b61060d3382610ae9565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61065d610848565b6106665f610b68565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461069f90611522565b80601f01602080910402602001604051908101604052809291908181526020018280546106cb90611522565b80156107165780601f106106ed57610100808354040283529160200191610716565b820191905f5260205f20905b8154815290600101906020018083116106f957829003601f168201915b5050505050905090565b5f8061072a6108cf565b905061073781858561097a565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6107cc610848565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361083c575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108339190611436565b60405180910390fd5b61084581610b68565b50565b6108506108cf565b73ffffffffffffffffffffffffffffffffffffffff1661086e610668565b73ffffffffffffffffffffffffffffffffffffffff16146108cd576108916108cf565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108c49190611436565b60405180910390fd5b565b5f33905090565b6108e38383836001610c2b565b505050565b5f6108f38484610742565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109745781811015610965578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161095c9392919061188e565b60405180910390fd5b61097384848484035f610c2b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109ea575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109e19190611436565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a5a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a519190611436565b60405180910390fd5b610a65838383610dfa565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ada575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ad19190611436565b60405180910390fd5b610ae55f8383610dfa565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b59575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b509190611436565b60405180910390fd5b610b64825f83610dfa565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c9b575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c929190611436565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d0b575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d029190611436565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610df4578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610deb9190611334565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e4a578060025f828254610e3e91906118f0565b92505081905550610f18565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610ed3578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610eca9392919061188e565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f5f578060025f8282540392505081905550610fa9565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110069190611334565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6110728261102c565b810181811067ffffffffffffffff821117156110915761109061103c565b5b80604052505050565b5f6110a3611013565b90506110af8282611069565b919050565b5f67ffffffffffffffff8211156110ce576110cd61103c565b5b6110d78261102c565b9050602081019050919050565b828183375f83830152505050565b5f6111046110ff846110b4565b61109a565b9050828152602081018484840111156111205761111f611028565b5b61112b8482856110e4565b509392505050565b5f82601f83011261114757611146611024565b5b81356111578482602086016110f2565b91505092915050565b5f602082840312156111755761117461101c565b5b5f82013567ffffffffffffffff81111561119257611191611020565b5b61119e84828501611133565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f6111d9826111a7565b6111e381856111b1565b93506111f38185602086016111c1565b6111fc8161102c565b840191505092915050565b5f6020820190508181035f83015261121f81846111cf565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61125082611227565b9050919050565b61126081611246565b811461126a575f80fd5b50565b5f8135905061127b81611257565b92915050565b5f819050919050565b61129381611281565b811461129d575f80fd5b50565b5f813590506112ae8161128a565b92915050565b5f80604083850312156112ca576112c961101c565b5b5f6112d78582860161126d565b92505060206112e8858286016112a0565b9150509250929050565b5f8115159050919050565b611306816112f2565b82525050565b5f60208201905061131f5f8301846112fd565b92915050565b61132e81611281565b82525050565b5f6020820190506113475f830184611325565b92915050565b5f805f606084860312156113645761136361101c565b5b5f6113718682870161126d565b93505060206113828682870161126d565b9250506040611393868287016112a0565b9150509250925092565b5f60ff82169050919050565b6113b28161139d565b82525050565b5f6020820190506113cb5f8301846113a9565b92915050565b5f602082840312156113e6576113e561101c565b5b5f6113f3848285016112a0565b91505092915050565b5f602082840312156114115761141061101c565b5b5f61141e8482850161126d565b91505092915050565b61143081611246565b82525050565b5f6020820190506114495f830184611427565b92915050565b5f80604083850312156114655761146461101c565b5b5f6114728582860161126d565b92505060206114838582860161126d565b9150509250929050565b7f456d7074792055524900000000000000000000000000000000000000000000005f82015250565b5f6114c16009836111b1565b91506114cc8261148d565b602082019050919050565b5f6020820190508181035f8301526114ee816114b5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061153957607f821691505b60208210810361154c5761154b6114f5565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026115ae7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611573565b6115b88683611573565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6115f36115ee6115e984611281565b6115d0565b611281565b9050919050565b5f819050919050565b61160c836115d9565b611620611618826115fa565b84845461157f565b825550505050565b5f90565b611634611628565b61163f818484611603565b505050565b5b81811015611662576116575f8261162c565b600181019050611645565b5050565b601f8211156116a75761167881611552565b61168184611564565b81016020851015611690578190505b6116a461169c85611564565b830182611644565b50505b505050565b5f82821c905092915050565b5f6116c75f19846008026116ac565b1980831691505092915050565b5f6116df83836116b8565b9150826002028217905092915050565b6116f8826111a7565b67ffffffffffffffff8111156117115761171061103c565b5b61171b8254611522565b611726828285611666565b5f60209050601f831160018114611757575f8415611745578287015190505b61174f85826116d4565b8655506117b6565b601f19841661176586611552565b5f5b8281101561178c57848901518255600182019150602085019450602081019050611767565b868310156117a957848901516117a5601f8916826116b8565b8355505b6001600288020188555050505b505050505050565b7f5a65726f206164647265737300000000000000000000000000000000000000005f82015250565b5f6117f2600c836111b1565b91506117fd826117be565b602082019050919050565b5f6020820190508181035f83015261181f816117e6565b9050919050565b7f5a65726f20616d6f756e740000000000000000000000000000000000000000005f82015250565b5f61185a600b836111b1565b915061186582611826565b602082019050919050565b5f6020820190508181035f8301526118878161184e565b9050919050565b5f6060820190506118a15f830186611427565b6118ae6020830185611325565b6118bb6040830184611325565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118fa82611281565b915061190583611281565b925082820190508082111561191d5761191c6118c3565b5b9291505056fea2646970667358221220dc45e9799e0210e85c11ec734e1240075e8e86c10eaacd18850f688779bf7eaf64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x27D7 CODESIZE SUB DUP1 PUSH2 0x27D7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x6CE JUMP JUMPDEST CALLER DUP5 DUP5 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x98A JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x53 SWAP2 SWAP1 PUSH2 0x98A JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xA98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5 DUP2 PUSH2 0x1E5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 DUP3 MLOAD SUB PUSH2 0x119 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110 SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 SWAP1 DUP2 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x98A JUMP JUMPDEST POP PUSH0 PUSH2 0x138 PUSH2 0x2A8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH2 0x147 SWAP2 SWAP1 PUSH2 0xC91 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB SWAP1 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DB CALLER DUP3 PUSH1 0xA PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0xC91 JUMP JUMPDEST DUP5 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0x2B0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP PUSH2 0xE71 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x320 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0xA98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x331 PUSH0 DUP4 DUP4 PUSH2 0x335 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x385 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0xDE1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x453 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x40E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x405 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x49A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4E4 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x541 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x5AD DUP3 PUSH2 0x567 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x5CC JUMPI PUSH2 0x5CB PUSH2 0x577 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5DE PUSH2 0x54E JUMP JUMPDEST SWAP1 POP PUSH2 0x5EA DUP3 DUP3 PUSH2 0x5A4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x609 JUMPI PUSH2 0x608 PUSH2 0x577 JUMP JUMPDEST JUMPDEST PUSH2 0x612 DUP3 PUSH2 0x567 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x63F PUSH2 0x63A DUP5 PUSH2 0x5EF JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x65B JUMPI PUSH2 0x65A PUSH2 0x563 JUMP JUMPDEST JUMPDEST PUSH2 0x666 DUP5 DUP3 DUP6 PUSH2 0x61F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x682 JUMPI PUSH2 0x681 PUSH2 0x55F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x692 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x62D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AD DUP2 PUSH2 0x69B JUMP JUMPDEST DUP2 EQ PUSH2 0x6B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6C8 DUP2 PUSH2 0x6A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6E6 JUMPI PUSH2 0x6E5 PUSH2 0x557 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH2 0x702 PUSH2 0x55B JUMP JUMPDEST JUMPDEST PUSH2 0x70F DUP8 DUP3 DUP9 ADD PUSH2 0x66E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x730 JUMPI PUSH2 0x72F PUSH2 0x55B JUMP JUMPDEST JUMPDEST PUSH2 0x73C DUP8 DUP3 DUP9 ADD PUSH2 0x66E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x75D JUMPI PUSH2 0x75C PUSH2 0x55B JUMP JUMPDEST JUMPDEST PUSH2 0x769 DUP8 DUP3 DUP9 ADD PUSH2 0x66E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x77A DUP8 DUP3 DUP9 ADD PUSH2 0x6BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x7D4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7E7 JUMPI PUSH2 0x7E6 PUSH2 0x790 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x849 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x853 DUP7 DUP4 PUSH2 0x80E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x88E PUSH2 0x889 PUSH2 0x884 DUP5 PUSH2 0x69B JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8A7 DUP4 PUSH2 0x874 JUMP JUMPDEST PUSH2 0x8BB PUSH2 0x8B3 DUP3 PUSH2 0x895 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x81A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x8CF PUSH2 0x8C3 JUMP JUMPDEST PUSH2 0x8DA DUP2 DUP5 DUP5 PUSH2 0x89E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8FD JUMPI PUSH2 0x8F2 PUSH0 DUP3 PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x942 JUMPI PUSH2 0x913 DUP2 PUSH2 0x7ED JUMP JUMPDEST PUSH2 0x91C DUP5 PUSH2 0x7FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x92B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x93F PUSH2 0x937 DUP6 PUSH2 0x7FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x8DF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x962 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x947 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x97A DUP4 DUP4 PUSH2 0x953 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x993 DUP3 PUSH2 0x786 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9AC JUMPI PUSH2 0x9AB PUSH2 0x577 JUMP JUMPDEST JUMPDEST PUSH2 0x9B6 DUP3 SLOAD PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x9C1 DUP3 DUP3 DUP6 PUSH2 0x901 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x9F2 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x9E0 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x9EA DUP6 DUP3 PUSH2 0x96F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA00 DUP7 PUSH2 0x7ED JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA27 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA02 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA44 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA40 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x953 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA82 DUP3 PUSH2 0xA59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA92 DUP2 PUSH2 0xA78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAAB PUSH0 DUP4 ADD DUP5 PUSH2 0xA89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x456D707479205552490000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAF5 PUSH1 0x9 DUP4 PUSH2 0xAB1 JUMP JUMPDEST SWAP2 POP PUSH2 0xB00 DUP3 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB22 DUP2 PUSH2 0xAE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xBAB JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xB87 JUMPI PUSH2 0xB86 PUSH2 0xB29 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xB96 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xBA4 DUP6 PUSH2 0xB56 JUMP JUMPDEST SWAP5 POP PUSH2 0xB6B JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xBC3 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xC7E JUMP JUMPDEST DUP2 PUSH2 0xBD0 JUMPI PUSH0 SWAP1 POP PUSH2 0xC7E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xBE6 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xBF0 JUMPI PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xC7E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xC02 JUMPI PUSH2 0xC01 PUSH2 0xB29 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xC19 JUMPI PUSH2 0xC18 PUSH2 0xB29 JUMP JUMPDEST JUMPDEST POP PUSH2 0xC7E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xC54 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xC4F JUMPI PUSH2 0xC4E PUSH2 0xB29 JUMP JUMPDEST JUMPDEST PUSH2 0xC7E JUMP JUMPDEST PUSH2 0xC61 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xB62 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xC78 JUMPI PUSH2 0xC77 PUSH2 0xB29 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC9B DUP3 PUSH2 0x69B JUMP JUMPDEST SWAP2 POP PUSH2 0xCA6 DUP4 PUSH2 0xC85 JUMP JUMPDEST SWAP3 POP PUSH2 0xCD3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xBB4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD12 DUP3 PUSH2 0x69B JUMP JUMPDEST SWAP2 POP PUSH2 0xD1D DUP4 PUSH2 0x69B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xD2D JUMPI PUSH2 0xD2C PUSH2 0xCDB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E7420746F6F206C6172676500000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD6C PUSH1 0x10 DUP4 PUSH2 0xAB1 JUMP JUMPDEST SWAP2 POP PUSH2 0xD77 DUP3 PUSH2 0xD38 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD99 DUP2 PUSH2 0xD60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDAA DUP3 PUSH2 0x69B JUMP JUMPDEST SWAP2 POP PUSH2 0xDB5 DUP4 PUSH2 0x69B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xDC3 DUP2 PUSH2 0x69B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xDDA JUMPI PUSH2 0xDD9 PUSH2 0xB29 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDEB DUP3 PUSH2 0x69B JUMP JUMPDEST SWAP2 POP PUSH2 0xDF6 DUP4 PUSH2 0x69B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE0E JUMPI PUSH2 0xE0D PUSH2 0xB29 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE1D DUP2 PUSH2 0x69B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE36 PUSH0 DUP4 ADD DUP7 PUSH2 0xA89 JUMP JUMPDEST PUSH2 0xE43 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE14 JUMP JUMPDEST PUSH2 0xE50 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE14 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6B PUSH0 DUP4 ADD DUP5 PUSH2 0xE14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1959 DUP1 PUSH2 0xE7E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x304 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x268 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1F6 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x4787CA2 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x135D088D EQ PUSH2 0x16C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST PUSH2 0x320 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x126 PUSH2 0x37E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x130C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x134D JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x130C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH2 0x4FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH2 0x655 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x270 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0x690 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x130C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x742 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x1334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x7C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x328 PUSH2 0x848 JUMP JUMPDEST PUSH0 DUP2 MLOAD SUB PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x362 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 SWAP1 DUP2 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x16EF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x38D SWAP1 PUSH2 0x1522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B9 SWAP1 PUSH2 0x1522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x404 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x404 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x418 PUSH2 0x8CF JUMP JUMPDEST SWAP1 POP PUSH2 0x425 DUP2 DUP6 DUP6 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x43D SWAP1 PUSH2 0x1522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x1522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x497 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4CF PUSH2 0x8CF JUMP JUMPDEST SWAP1 POP PUSH2 0x4DC DUP6 DUP3 DUP6 PUSH2 0x8E8 JUMP JUMPDEST PUSH2 0x4E7 DUP6 DUP6 DUP6 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x503 PUSH2 0x848 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x568 SWAP1 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AA SWAP1 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BD DUP3 DUP3 PUSH2 0xA6A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FA SWAP1 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60D CALLER DUP3 PUSH2 0xAE9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65D PUSH2 0x848 JUMP JUMPDEST PUSH2 0x666 PUSH0 PUSH2 0xB68 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x69F SWAP1 PUSH2 0x1522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6CB SWAP1 PUSH2 0x1522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x716 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x716 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x72A PUSH2 0x8CF JUMP JUMPDEST SWAP1 POP PUSH2 0x737 DUP2 DUP6 DUP6 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7CC PUSH2 0x848 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x83C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x833 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x845 DUP2 PUSH2 0xB68 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x850 PUSH2 0x8CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x86E PUSH2 0x668 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8CD JUMPI PUSH2 0x891 PUSH2 0x8CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8E3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC2B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8F3 DUP5 DUP5 PUSH2 0x742 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x974 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x965 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x188E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x973 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xC2B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E1 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA5A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA51 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA65 DUP4 DUP4 DUP4 PUSH2 0xDFA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xADA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD1 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE5 PUSH0 DUP4 DUP4 PUSH2 0xDFA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB59 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB64 DUP3 PUSH0 DUP4 PUSH2 0xDFA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC92 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD0B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD02 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDF4 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDEB SWAP2 SWAP1 PUSH2 0x1334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE4A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE3E SWAP2 SWAP1 PUSH2 0x18F0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF18 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xED3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x188E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF5F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xFA9 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1006 SWAP2 SWAP1 PUSH2 0x1334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1072 DUP3 PUSH2 0x102C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1091 JUMPI PUSH2 0x1090 PUSH2 0x103C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10A3 PUSH2 0x1013 JUMP JUMPDEST SWAP1 POP PUSH2 0x10AF DUP3 DUP3 PUSH2 0x1069 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x10CE JUMPI PUSH2 0x10CD PUSH2 0x103C JUMP JUMPDEST JUMPDEST PUSH2 0x10D7 DUP3 PUSH2 0x102C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1104 PUSH2 0x10FF DUP5 PUSH2 0x10B4 JUMP JUMPDEST PUSH2 0x109A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1120 JUMPI PUSH2 0x111F PUSH2 0x1028 JUMP JUMPDEST JUMPDEST PUSH2 0x112B DUP5 DUP3 DUP6 PUSH2 0x10E4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1147 JUMPI PUSH2 0x1146 PUSH2 0x1024 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1157 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x10F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1175 JUMPI PUSH2 0x1174 PUSH2 0x101C JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1192 JUMPI PUSH2 0x1191 PUSH2 0x1020 JUMP JUMPDEST JUMPDEST PUSH2 0x119E DUP5 DUP3 DUP6 ADD PUSH2 0x1133 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11D9 DUP3 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0x11E3 DUP2 DUP6 PUSH2 0x11B1 JUMP JUMPDEST SWAP4 POP PUSH2 0x11F3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11C1 JUMP JUMPDEST PUSH2 0x11FC DUP2 PUSH2 0x102C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x121F DUP2 DUP5 PUSH2 0x11CF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1250 DUP3 PUSH2 0x1227 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1260 DUP2 PUSH2 0x1246 JUMP JUMPDEST DUP2 EQ PUSH2 0x126A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x127B DUP2 PUSH2 0x1257 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1293 DUP2 PUSH2 0x1281 JUMP JUMPDEST DUP2 EQ PUSH2 0x129D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12AE DUP2 PUSH2 0x128A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12CA JUMPI PUSH2 0x12C9 PUSH2 0x101C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12D7 DUP6 DUP3 DUP7 ADD PUSH2 0x126D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12E8 DUP6 DUP3 DUP7 ADD PUSH2 0x12A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1306 DUP2 PUSH2 0x12F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x131F PUSH0 DUP4 ADD DUP5 PUSH2 0x12FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x132E DUP2 PUSH2 0x1281 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1347 PUSH0 DUP4 ADD DUP5 PUSH2 0x1325 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1364 JUMPI PUSH2 0x1363 PUSH2 0x101C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1371 DUP7 DUP3 DUP8 ADD PUSH2 0x126D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1382 DUP7 DUP3 DUP8 ADD PUSH2 0x126D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1393 DUP7 DUP3 DUP8 ADD PUSH2 0x12A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B2 DUP2 PUSH2 0x139D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13CB PUSH0 DUP4 ADD DUP5 PUSH2 0x13A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E6 JUMPI PUSH2 0x13E5 PUSH2 0x101C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13F3 DUP5 DUP3 DUP6 ADD PUSH2 0x12A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1411 JUMPI PUSH2 0x1410 PUSH2 0x101C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x141E DUP5 DUP3 DUP6 ADD PUSH2 0x126D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1430 DUP2 PUSH2 0x1246 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1449 PUSH0 DUP4 ADD DUP5 PUSH2 0x1427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1465 JUMPI PUSH2 0x1464 PUSH2 0x101C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1472 DUP6 DUP3 DUP7 ADD PUSH2 0x126D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1483 DUP6 DUP3 DUP7 ADD PUSH2 0x126D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x456D707479205552490000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14C1 PUSH1 0x9 DUP4 PUSH2 0x11B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x14CC DUP3 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14EE DUP2 PUSH2 0x14B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1539 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x154C JUMPI PUSH2 0x154B PUSH2 0x14F5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x15AE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x15B8 DUP7 DUP4 PUSH2 0x1573 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15F3 PUSH2 0x15EE PUSH2 0x15E9 DUP5 PUSH2 0x1281 JUMP JUMPDEST PUSH2 0x15D0 JUMP JUMPDEST PUSH2 0x1281 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x160C DUP4 PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0x1620 PUSH2 0x1618 DUP3 PUSH2 0x15FA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x157F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1634 PUSH2 0x1628 JUMP JUMPDEST PUSH2 0x163F DUP2 DUP5 DUP5 PUSH2 0x1603 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1662 JUMPI PUSH2 0x1657 PUSH0 DUP3 PUSH2 0x162C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1645 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x16A7 JUMPI PUSH2 0x1678 DUP2 PUSH2 0x1552 JUMP JUMPDEST PUSH2 0x1681 DUP5 PUSH2 0x1564 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1690 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x16A4 PUSH2 0x169C DUP6 PUSH2 0x1564 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1644 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16C7 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x16AC JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16DF DUP4 DUP4 PUSH2 0x16B8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16F8 DUP3 PUSH2 0x11A7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1711 JUMPI PUSH2 0x1710 PUSH2 0x103C JUMP JUMPDEST JUMPDEST PUSH2 0x171B DUP3 SLOAD PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x1726 DUP3 DUP3 DUP6 PUSH2 0x1666 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1757 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1745 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x174F DUP6 DUP3 PUSH2 0x16D4 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x17B6 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1765 DUP7 PUSH2 0x1552 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x178C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1767 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x17A9 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x17A5 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x16B8 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5A65726F20616464726573730000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17F2 PUSH1 0xC DUP4 PUSH2 0x11B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x17FD DUP3 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x181F DUP2 PUSH2 0x17E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5A65726F20616D6F756E74000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x185A PUSH1 0xB DUP4 PUSH2 0x11B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1865 DUP3 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1887 DUP2 PUSH2 0x184E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18A1 PUSH0 DUP4 ADD DUP7 PUSH2 0x1427 JUMP JUMPDEST PUSH2 0x18AE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1325 JUMP JUMPDEST PUSH2 0x18BB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1325 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18FA DUP3 PUSH2 0x1281 JUMP JUMPDEST SWAP2 POP PUSH2 0x1905 DUP4 PUSH2 0x1281 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x191D JUMPI PUSH2 0x191C PUSH2 0x18C3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC GASLIMIT 0xE9 PUSH26 0x9E0210E85C11EC734E1240075E8E86C10EAACD18850F688779BF PUSH31 0xAF64736F6C634300081A003300000000000000000000000000000000000000 ",
							"sourceMap": "329:2050:6:-:0;;;786:524;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;953:10;931:4;937:6;1675:5:2;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1007:1:6::2;986:9;980:23;:28:::0;976:53:::2;;1010:19;;;;;;;;;;:::i;:::-;;;;;;;;976:53;1051:9;1040:8;:20;;;;;;:::i;:::-;;1081:19;1103:10;:8;;;:10;;:::i;:::-;1081:32;;1165:13;1159:2;:19;;;;:::i;:::-;1138:17;:41;;;;:::i;:::-;1128:7;:51;1124:110;;;1196:26;;;;;;;;;;:::i;:::-;;;;;;;;1124:110;1254:48;1260:10;1288:13;1282:2;:19;;;;:::i;:::-;1272:7;:29;;;;:::i;:::-;1254:5;;;:48;;:::i;:::-;965:345;786:524:::0;;;;329:2050;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2707:82:2:-;2756:5;2780:2;2773:9;;2707:82;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:77::-;2607:7;2636:5;2625:16;;2570:77;;;:::o;2653:122::-;2726:24;2744:5;2726:24;:::i;:::-;2719:5;2716:35;2706:63;;2765:1;2762;2755:12;2706:63;2653:122;:::o;2781:143::-;2838:5;2869:6;2863:13;2854:22;;2885:33;2912:5;2885:33;:::i;:::-;2781:143;;;;:::o;2930:1339::-;3057:6;3065;3073;3081;3130:3;3118:9;3109:7;3105:23;3101:33;3098:120;;;3137:79;;:::i;:::-;3098:120;3278:1;3267:9;3263:17;3257:24;3308:18;3300:6;3297:30;3294:117;;;3330:79;;:::i;:::-;3294:117;3435:74;3501:7;3492:6;3481:9;3477:22;3435:74;:::i;:::-;3425:84;;3228:291;3579:2;3568:9;3564:18;3558:25;3610:18;3602:6;3599:30;3596:117;;;3632:79;;:::i;:::-;3596:117;3737:74;3803:7;3794:6;3783:9;3779:22;3737:74;:::i;:::-;3727:84;;3529:292;3881:2;3870:9;3866:18;3860:25;3912:18;3904:6;3901:30;3898:117;;;3934:79;;:::i;:::-;3898:117;4039:74;4105:7;4096:6;4085:9;4081:22;4039:74;:::i;:::-;4029:84;;3831:292;4162:2;4188:64;4244:7;4235:6;4224:9;4220:22;4188:64;:::i;:::-;4178:74;;4133:129;2930:1339;;;;;;;:::o;4275:99::-;4327:6;4361:5;4355:12;4345:22;;4275:99;;;:::o;4380:180::-;4428:77;4425:1;4418:88;4525:4;4522:1;4515:15;4549:4;4546:1;4539:15;4566:320;4610:6;4647:1;4641:4;4637:12;4627:22;;4694:1;4688:4;4684:12;4715:18;4705:81;;4771:4;4763:6;4759:17;4749:27;;4705:81;4833:2;4825:6;4822:14;4802:18;4799:38;4796:84;;4852:18;;:::i;:::-;4796:84;4617:269;4566:320;;;:::o;4892:141::-;4941:4;4964:3;4956:11;;4987:3;4984:1;4977:14;5021:4;5018:1;5008:18;5000:26;;4892:141;;;:::o;5039:93::-;5076:6;5123:2;5118;5111:5;5107:14;5103:23;5093:33;;5039:93;;;:::o;5138:107::-;5182:8;5232:5;5226:4;5222:16;5201:37;;5138:107;;;;:::o;5251:393::-;5320:6;5370:1;5358:10;5354:18;5393:97;5423:66;5412:9;5393:97;:::i;:::-;5511:39;5541:8;5530:9;5511:39;:::i;:::-;5499:51;;5583:4;5579:9;5572:5;5568:21;5559:30;;5632:4;5622:8;5618:19;5611:5;5608:30;5598:40;;5327:317;;5251:393;;;;;:::o;5650:60::-;5678:3;5699:5;5692:12;;5650:60;;;:::o;5716:142::-;5766:9;5799:53;5817:34;5826:24;5844:5;5826:24;:::i;:::-;5817:34;:::i;:::-;5799:53;:::i;:::-;5786:66;;5716:142;;;:::o;5864:75::-;5907:3;5928:5;5921:12;;5864:75;;;:::o;5945:269::-;6055:39;6086:7;6055:39;:::i;:::-;6116:91;6165:41;6189:16;6165:41;:::i;:::-;6157:6;6150:4;6144:11;6116:91;:::i;:::-;6110:4;6103:105;6021:193;5945:269;;;:::o;6220:73::-;6265:3;6220:73;:::o;6299:189::-;6376:32;;:::i;:::-;6417:65;6475:6;6467;6461:4;6417:65;:::i;:::-;6352:136;6299:189;;:::o;6494:186::-;6554:120;6571:3;6564:5;6561:14;6554:120;;;6625:39;6662:1;6655:5;6625:39;:::i;:::-;6598:1;6591:5;6587:13;6578:22;;6554:120;;;6494:186;;:::o;6686:543::-;6787:2;6782:3;6779:11;6776:446;;;6821:38;6853:5;6821:38;:::i;:::-;6905:29;6923:10;6905:29;:::i;:::-;6895:8;6891:44;7088:2;7076:10;7073:18;7070:49;;;7109:8;7094:23;;7070:49;7132:80;7188:22;7206:3;7188:22;:::i;:::-;7178:8;7174:37;7161:11;7132:80;:::i;:::-;6791:431;;6776:446;6686:543;;;:::o;7235:117::-;7289:8;7339:5;7333:4;7329:16;7308:37;;7235:117;;;;:::o;7358:169::-;7402:6;7435:51;7483:1;7479:6;7471:5;7468:1;7464:13;7435:51;:::i;:::-;7431:56;7516:4;7510;7506:15;7496:25;;7409:118;7358:169;;;;:::o;7532:295::-;7608:4;7754:29;7779:3;7773:4;7754:29;:::i;:::-;7746:37;;7816:3;7813:1;7809:11;7803:4;7800:21;7792:29;;7532:295;;;;:::o;7832:1395::-;7949:37;7982:3;7949:37;:::i;:::-;8051:18;8043:6;8040:30;8037:56;;;8073:18;;:::i;:::-;8037:56;8117:38;8149:4;8143:11;8117:38;:::i;:::-;8202:67;8262:6;8254;8248:4;8202:67;:::i;:::-;8296:1;8320:4;8307:17;;8352:2;8344:6;8341:14;8369:1;8364:618;;;;9026:1;9043:6;9040:77;;;9092:9;9087:3;9083:19;9077:26;9068:35;;9040:77;9143:67;9203:6;9196:5;9143:67;:::i;:::-;9137:4;9130:81;8999:222;8334:887;;8364:618;8416:4;8412:9;8404:6;8400:22;8450:37;8482:4;8450:37;:::i;:::-;8509:1;8523:208;8537:7;8534:1;8531:14;8523:208;;;8616:9;8611:3;8607:19;8601:26;8593:6;8586:42;8667:1;8659:6;8655:14;8645:24;;8714:2;8703:9;8699:18;8686:31;;8560:4;8557:1;8553:12;8548:17;;8523:208;;;8759:6;8750:7;8747:19;8744:179;;;8817:9;8812:3;8808:19;8802:26;8860:48;8902:4;8894:6;8890:17;8879:9;8860:48;:::i;:::-;8852:6;8845:64;8767:156;8744:179;8969:1;8965;8957:6;8953:14;8949:22;8943:4;8936:36;8371:611;;;8334:887;;7924:1303;;;7832:1395;;:::o;9233:126::-;9270:7;9310:42;9303:5;9299:54;9288:65;;9233:126;;;:::o;9365:96::-;9402:7;9431:24;9449:5;9431:24;:::i;:::-;9420:35;;9365:96;;;:::o;9467:118::-;9554:24;9572:5;9554:24;:::i;:::-;9549:3;9542:37;9467:118;;:::o;9591:222::-;9684:4;9722:2;9711:9;9707:18;9699:26;;9735:71;9803:1;9792:9;9788:17;9779:6;9735:71;:::i;:::-;9591:222;;;;:::o;9819:169::-;9903:11;9937:6;9932:3;9925:19;9977:4;9972:3;9968:14;9953:29;;9819:169;;;;:::o;9994:159::-;10134:11;10130:1;10122:6;10118:14;10111:35;9994:159;:::o;10159:365::-;10301:3;10322:66;10386:1;10381:3;10322:66;:::i;:::-;10315:73;;10397:93;10486:3;10397:93;:::i;:::-;10515:2;10510:3;10506:12;10499:19;;10159:365;;;:::o;10530:419::-;10696:4;10734:2;10723:9;10719:18;10711:26;;10783:9;10777:4;10773:20;10769:1;10758:9;10754:17;10747:47;10811:131;10937:4;10811:131;:::i;:::-;10803:139;;10530:419;;;:::o;10955:180::-;11003:77;11000:1;10993:88;11100:4;11097:1;11090:15;11124:4;11121:1;11114:15;11141:102;11183:8;11230:5;11227:1;11223:13;11202:34;;11141:102;;;:::o;11249:848::-;11310:5;11317:4;11341:6;11332:15;;11365:5;11356:14;;11379:712;11400:1;11390:8;11387:15;11379:712;;;11495:4;11490:3;11486:14;11480:4;11477:24;11474:50;;;11504:18;;:::i;:::-;11474:50;11554:1;11544:8;11540:16;11537:451;;;11969:4;11962:5;11958:16;11949:25;;11537:451;12019:4;12013;12009:15;12001:23;;12049:32;12072:8;12049:32;:::i;:::-;12037:44;;11379:712;;;11249:848;;;;;;;:::o;12103:1073::-;12157:5;12348:8;12338:40;;12369:1;12360:10;;12371:5;;12338:40;12397:4;12387:36;;12414:1;12405:10;;12416:5;;12387:36;12483:4;12531:1;12526:27;;;;12567:1;12562:191;;;;12476:277;;12526:27;12544:1;12535:10;;12546:5;;;12562:191;12607:3;12597:8;12594:17;12591:43;;;12614:18;;:::i;:::-;12591:43;12663:8;12660:1;12656:16;12647:25;;12698:3;12691:5;12688:14;12685:40;;;12705:18;;:::i;:::-;12685:40;12738:5;;;12476:277;;12862:2;12852:8;12849:16;12843:3;12837:4;12834:13;12830:36;12812:2;12802:8;12799:16;12794:2;12788:4;12785:12;12781:35;12765:111;12762:246;;;12918:8;12912:4;12908:19;12899:28;;12953:3;12946:5;12943:14;12940:40;;;12960:18;;:::i;:::-;12940:40;12993:5;;12762:246;13033:42;13071:3;13061:8;13055:4;13052:1;13033:42;:::i;:::-;13018:57;;;;13107:4;13102:3;13098:14;13091:5;13088:25;13085:51;;;13116:18;;:::i;:::-;13085:51;13165:4;13158:5;13154:16;13145:25;;12103:1073;;;;;;:::o;13182:86::-;13217:7;13257:4;13250:5;13246:16;13235:27;;13182:86;;;:::o;13274:281::-;13332:5;13356:23;13374:4;13356:23;:::i;:::-;13348:31;;13400:25;13416:8;13400:25;:::i;:::-;13388:37;;13444:104;13481:66;13471:8;13465:4;13444:104;:::i;:::-;13435:113;;13274:281;;;;:::o;13561:180::-;13609:77;13606:1;13599:88;13706:4;13703:1;13696:15;13730:4;13727:1;13720:15;13747:185;13787:1;13804:20;13822:1;13804:20;:::i;:::-;13799:25;;13838:20;13856:1;13838:20;:::i;:::-;13833:25;;13877:1;13867:35;;13882:18;;:::i;:::-;13867:35;13924:1;13921;13917:9;13912:14;;13747:185;;;;:::o;13938:166::-;14078:18;14074:1;14066:6;14062:14;14055:42;13938:166;:::o;14110:366::-;14252:3;14273:67;14337:2;14332:3;14273:67;:::i;:::-;14266:74;;14349:93;14438:3;14349:93;:::i;:::-;14467:2;14462:3;14458:12;14451:19;;14110:366;;;:::o;14482:419::-;14648:4;14686:2;14675:9;14671:18;14663:26;;14735:9;14729:4;14725:20;14721:1;14710:9;14706:17;14699:47;14763:131;14889:4;14763:131;:::i;:::-;14755:139;;14482:419;;;:::o;14907:410::-;14947:7;14970:20;14988:1;14970:20;:::i;:::-;14965:25;;15004:20;15022:1;15004:20;:::i;:::-;14999:25;;15059:1;15056;15052:9;15081:30;15099:11;15081:30;:::i;:::-;15070:41;;15260:1;15251:7;15247:15;15244:1;15241:22;15221:1;15214:9;15194:83;15171:139;;15290:18;;:::i;:::-;15171:139;14955:362;14907:410;;;;:::o;15323:191::-;15363:3;15382:20;15400:1;15382:20;:::i;:::-;15377:25;;15416:20;15434:1;15416:20;:::i;:::-;15411:25;;15459:1;15456;15452:9;15445:16;;15480:3;15477:1;15474:10;15471:36;;;15487:18;;:::i;:::-;15471:36;15323:191;;;;:::o;15520:118::-;15607:24;15625:5;15607:24;:::i;:::-;15602:3;15595:37;15520:118;;:::o;15644:442::-;15793:4;15831:2;15820:9;15816:18;15808:26;;15844:71;15912:1;15901:9;15897:17;15888:6;15844:71;:::i;:::-;15925:72;15993:2;15982:9;15978:18;15969:6;15925:72;:::i;:::-;16007;16075:2;16064:9;16060:18;16051:6;16007:72;:::i;:::-;15644:442;;;;;;:::o;16092:222::-;16185:4;16223:2;16212:9;16208:18;16200:26;;16236:71;16304:1;16293:9;16289:17;16280:6;16236:71;:::i;:::-;16092:222;;;;:::o;329:2050:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2262,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 3115,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 2793,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2120,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 2666,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 2255,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 2280,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2920,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2426,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3578,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1858,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1038,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1552,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1071": {
									"entryPoint": 1473,
									"id": 1071,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1267,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@imageURI_945": {
									"entryPoint": 1072,
									"id": 945,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1050": {
									"entryPoint": 1275,
									"id": 1050,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 894,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1640,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1621,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setImageURI_1096": {
									"entryPoint": 800,
									"id": 1096,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1680,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1212,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1221,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1988,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1824,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 4338,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 4403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 4448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6286,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4115,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 4276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 5458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 5734,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 4678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 5700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 5593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 5871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 4324,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4545,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 5476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 5844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 5584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 5816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6339,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5365,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4156,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 5626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4132,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 4136,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4128,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 5491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 5804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 5676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf": {
									"entryPoint": 5261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4": {
									"entryPoint": 6182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833": {
									"entryPoint": 6078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 5503,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 5635,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 5672,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17447:7",
										"nodeType": "YulBlock",
										"src": "0:17447:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "423:28:7",
													"nodeType": "YulBlock",
													"src": "423:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:7",
																		"nodeType": "YulLiteral",
																		"src": "443:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:12:7",
																"nodeType": "YulFunctionCall",
																"src": "433:12:7"
															},
															"nativeSrc": "433:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:7"
											},
											{
												"body": {
													"nativeSrc": "546:28:7",
													"nodeType": "YulBlock",
													"src": "546:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:7",
																		"nodeType": "YulLiteral",
																		"src": "563:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:7",
																		"nodeType": "YulLiteral",
																		"src": "566:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:7"
																},
																"nativeSrc": "556:12:7",
																"nodeType": "YulFunctionCall",
																"src": "556:12:7"
															},
															"nativeSrc": "556:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:7"
											},
											{
												"body": {
													"nativeSrc": "628:54:7",
													"nodeType": "YulBlock",
													"src": "628:54:7",
													"statements": [
														{
															"nativeSrc": "638:38:7",
															"nodeType": "YulAssignment",
															"src": "638:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:7",
																				"nodeType": "YulLiteral",
																				"src": "663:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:7"
																		},
																		"nativeSrc": "652:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:7",
																				"nodeType": "YulLiteral",
																				"src": "672:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:7"
																		},
																		"nativeSrc": "668:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:7"
																},
																"nativeSrc": "648:28:7",
																"nodeType": "YulFunctionCall",
																"src": "648:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:7",
														"nodeType": "YulTypedName",
														"src": "611:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:7",
														"nodeType": "YulTypedName",
														"src": "621:6:7",
														"type": ""
													}
												],
												"src": "580:102:7"
											},
											{
												"body": {
													"nativeSrc": "716:152:7",
													"nodeType": "YulBlock",
													"src": "716:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:7",
																		"nodeType": "YulLiteral",
																		"src": "733:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:7",
																		"nodeType": "YulLiteral",
																		"src": "736:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:7"
																},
																"nativeSrc": "726:88:7",
																"nodeType": "YulFunctionCall",
																"src": "726:88:7"
															},
															"nativeSrc": "726:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:7",
																		"nodeType": "YulLiteral",
																		"src": "830:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:7",
																		"nodeType": "YulLiteral",
																		"src": "833:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:7"
																},
																"nativeSrc": "823:15:7",
																"nodeType": "YulFunctionCall",
																"src": "823:15:7"
															},
															"nativeSrc": "823:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:7",
																		"nodeType": "YulLiteral",
																		"src": "854:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:7",
																		"nodeType": "YulLiteral",
																		"src": "857:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:7"
																},
																"nativeSrc": "847:15:7",
																"nodeType": "YulFunctionCall",
																"src": "847:15:7"
															},
															"nativeSrc": "847:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:7"
											},
											{
												"body": {
													"nativeSrc": "917:238:7",
													"nodeType": "YulBlock",
													"src": "917:238:7",
													"statements": [
														{
															"nativeSrc": "927:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:7"
																		},
																		"nativeSrc": "957:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:7"
																},
																"nativeSrc": "945:40:7",
																"nodeType": "YulFunctionCall",
																"src": "945:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:7",
																	"nodeType": "YulTypedName",
																	"src": "931:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:7",
																"nodeType": "YulBlock",
																"src": "1096:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:7"
																			},
																			"nativeSrc": "1098:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:7"
																		},
																		"nativeSrc": "1098:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:7",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:7"
																		},
																		"nativeSrc": "1036:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:7"
																		},
																		"nativeSrc": "1072:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:7"
																},
																"nativeSrc": "1033:62:7",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:7"
															},
															"nativeSrc": "1030:88:7",
															"nodeType": "YulIf",
															"src": "1030:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:7"
																},
																"nativeSrc": "1127:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:7"
															},
															"nativeSrc": "1127:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:7",
														"nodeType": "YulTypedName",
														"src": "903:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:7",
														"nodeType": "YulTypedName",
														"src": "911:4:7",
														"type": ""
													}
												],
												"src": "874:281:7"
											},
											{
												"body": {
													"nativeSrc": "1202:88:7",
													"nodeType": "YulBlock",
													"src": "1202:88:7",
													"statements": [
														{
															"nativeSrc": "1212:30:7",
															"nodeType": "YulAssignment",
															"src": "1212:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:7"
																},
																"nativeSrc": "1222:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:7"
																},
																"nativeSrc": "1251:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:7"
															},
															"nativeSrc": "1251:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:7",
														"nodeType": "YulTypedName",
														"src": "1186:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:7",
														"nodeType": "YulTypedName",
														"src": "1195:6:7",
														"type": ""
													}
												],
												"src": "1161:129:7"
											},
											{
												"body": {
													"nativeSrc": "1363:241:7",
													"nodeType": "YulBlock",
													"src": "1363:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:7",
																"nodeType": "YulBlock",
																"src": "1468:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:7"
																			},
																			"nativeSrc": "1470:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:7"
																		},
																		"nativeSrc": "1470:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:7"
																},
																"nativeSrc": "1437:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:7"
															},
															"nativeSrc": "1434:56:7",
															"nodeType": "YulIf",
															"src": "1434:56:7"
														},
														{
															"nativeSrc": "1500:37:7",
															"nodeType": "YulAssignment",
															"src": "1500:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:7"
																},
																"nativeSrc": "1508:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:7"
																}
															]
														},
														{
															"nativeSrc": "1574:23:7",
															"nodeType": "YulAssignment",
															"src": "1574:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:7"
																},
																"nativeSrc": "1582:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:7",
														"nodeType": "YulTypedName",
														"src": "1347:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:7",
														"nodeType": "YulTypedName",
														"src": "1358:4:7",
														"type": ""
													}
												],
												"src": "1296:308:7"
											},
											{
												"body": {
													"nativeSrc": "1674:84:7",
													"nodeType": "YulBlock",
													"src": "1674:84:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1698:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1698:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1703:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1703:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1708:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1708:6:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1685:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1685:12:7"
																},
																"nativeSrc": "1685:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1685:30:7"
															},
															"nativeSrc": "1685:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "1685:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1735:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1735:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1740:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1740:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1731:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1731:3:7"
																		},
																		"nativeSrc": "1731:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1731:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1749:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1724:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1724:6:7"
																},
																"nativeSrc": "1724:27:7",
																"nodeType": "YulFunctionCall",
																"src": "1724:27:7"
															},
															"nativeSrc": "1724:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "1724:27:7"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "1610:148:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1656:3:7",
														"nodeType": "YulTypedName",
														"src": "1656:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1661:3:7",
														"nodeType": "YulTypedName",
														"src": "1661:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1666:6:7",
														"nodeType": "YulTypedName",
														"src": "1666:6:7",
														"type": ""
													}
												],
												"src": "1610:148:7"
											},
											{
												"body": {
													"nativeSrc": "1848:341:7",
													"nodeType": "YulBlock",
													"src": "1848:341:7",
													"statements": [
														{
															"nativeSrc": "1858:75:7",
															"nodeType": "YulAssignment",
															"src": "1858:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1925:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1925:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1883:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "1883:41:7"
																		},
																		"nativeSrc": "1883:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1883:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1867:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "1867:15:7"
																},
																"nativeSrc": "1867:66:7",
																"nodeType": "YulFunctionCall",
																"src": "1867:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1858:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1858:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1949:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1949:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1956:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1956:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1942:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1942:6:7"
																},
																"nativeSrc": "1942:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1942:21:7"
															},
															"nativeSrc": "1942:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "1942:21:7"
														},
														{
															"nativeSrc": "1972:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1972:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1987:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1987:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1994:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1994:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1983:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:7"
																},
																"nativeSrc": "1983:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1983:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1976:3:7",
																	"nodeType": "YulTypedName",
																	"src": "1976:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2037:83:7",
																"nodeType": "YulBlock",
																"src": "2037:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2039:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2039:77:7"
																			},
																			"nativeSrc": "2039:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2039:79:7"
																		},
																		"nativeSrc": "2039:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2039:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2018:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2018:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2023:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2023:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2014:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2014:3:7"
																		},
																		"nativeSrc": "2014:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2014:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2032:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2032:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2011:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2011:2:7"
																},
																"nativeSrc": "2011:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2011:25:7"
															},
															"nativeSrc": "2008:112:7",
															"nodeType": "YulIf",
															"src": "2008:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "2129:36:7",
																	"nodeType": "YulIdentifier",
																	"src": "2129:36:7"
																},
																"nativeSrc": "2129:54:7",
																"nodeType": "YulFunctionCall",
																"src": "2129:54:7"
															},
															"nativeSrc": "2129:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "2129:54:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "1764:425:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1821:3:7",
														"nodeType": "YulTypedName",
														"src": "1821:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1826:6:7",
														"nodeType": "YulTypedName",
														"src": "1826:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1834:3:7",
														"nodeType": "YulTypedName",
														"src": "1834:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1842:5:7",
														"nodeType": "YulTypedName",
														"src": "1842:5:7",
														"type": ""
													}
												],
												"src": "1764:425:7"
											},
											{
												"body": {
													"nativeSrc": "2271:278:7",
													"nodeType": "YulBlock",
													"src": "2271:278:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2320:83:7",
																"nodeType": "YulBlock",
																"src": "2320:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2322:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2322:77:7"
																			},
																			"nativeSrc": "2322:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2322:79:7"
																		},
																		"nativeSrc": "2322:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2322:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2299:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2299:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2307:4:7",
																						"nodeType": "YulLiteral",
																						"src": "2307:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2295:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2295:3:7"
																				},
																				"nativeSrc": "2295:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2295:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2314:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2291:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2291:3:7"
																		},
																		"nativeSrc": "2291:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2291:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2284:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:7"
																},
																"nativeSrc": "2284:35:7",
																"nodeType": "YulFunctionCall",
																"src": "2284:35:7"
															},
															"nativeSrc": "2281:122:7",
															"nodeType": "YulIf",
															"src": "2281:122:7"
														},
														{
															"nativeSrc": "2412:34:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2412:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2439:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2439:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2426:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2426:12:7"
																},
																"nativeSrc": "2426:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2426:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2416:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2416:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2455:88:7",
															"nodeType": "YulAssignment",
															"src": "2455:88:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2516:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2516:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2524:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2524:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2512:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2512:3:7"
																		},
																		"nativeSrc": "2512:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2512:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2531:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2531:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2539:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2539:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "2464:47:7",
																	"nodeType": "YulIdentifier",
																	"src": "2464:47:7"
																},
																"nativeSrc": "2464:79:7",
																"nodeType": "YulFunctionCall",
																"src": "2464:79:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2455:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2455:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "2209:340:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2249:6:7",
														"nodeType": "YulTypedName",
														"src": "2249:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2257:3:7",
														"nodeType": "YulTypedName",
														"src": "2257:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2265:5:7",
														"nodeType": "YulTypedName",
														"src": "2265:5:7",
														"type": ""
													}
												],
												"src": "2209:340:7"
											},
											{
												"body": {
													"nativeSrc": "2631:433:7",
													"nodeType": "YulBlock",
													"src": "2631:433:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2677:83:7",
																"nodeType": "YulBlock",
																"src": "2677:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2679:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2679:77:7"
																			},
																			"nativeSrc": "2679:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2679:79:7"
																		},
																		"nativeSrc": "2679:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2679:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2652:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2652:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2661:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2661:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2648:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2648:3:7"
																		},
																		"nativeSrc": "2648:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2648:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2673:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2673:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2644:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:7"
																},
																"nativeSrc": "2644:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2644:32:7"
															},
															"nativeSrc": "2641:119:7",
															"nodeType": "YulIf",
															"src": "2641:119:7"
														},
														{
															"nativeSrc": "2770:287:7",
															"nodeType": "YulBlock",
															"src": "2770:287:7",
															"statements": [
																{
																	"nativeSrc": "2785:45:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2785:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2816:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2816:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2827:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2827:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2812:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2812:3:7"
																				},
																				"nativeSrc": "2812:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2812:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2799:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "2799:12:7"
																		},
																		"nativeSrc": "2799:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2799:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2789:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2789:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2877:83:7",
																		"nodeType": "YulBlock",
																		"src": "2877:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2879:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "2879:77:7"
																					},
																					"nativeSrc": "2879:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2879:79:7"
																				},
																				"nativeSrc": "2879:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "2879:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2849:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2849:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2857:18:7",
																				"nodeType": "YulLiteral",
																				"src": "2857:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2846:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2846:2:7"
																		},
																		"nativeSrc": "2846:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2846:30:7"
																	},
																	"nativeSrc": "2843:117:7",
																	"nodeType": "YulIf",
																	"src": "2843:117:7"
																},
																{
																	"nativeSrc": "2974:73:7",
																	"nodeType": "YulAssignment",
																	"src": "2974:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3019:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3019:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3030:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3030:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3015:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3015:3:7"
																				},
																				"nativeSrc": "3015:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3015:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3039:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3039:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "2984:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "2984:30:7"
																		},
																		"nativeSrc": "2984:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2984:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2974:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2974:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "2555:509:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2601:9:7",
														"nodeType": "YulTypedName",
														"src": "2601:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2612:7:7",
														"nodeType": "YulTypedName",
														"src": "2612:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2624:6:7",
														"nodeType": "YulTypedName",
														"src": "2624:6:7",
														"type": ""
													}
												],
												"src": "2555:509:7"
											},
											{
												"body": {
													"nativeSrc": "3129:40:7",
													"nodeType": "YulBlock",
													"src": "3129:40:7",
													"statements": [
														{
															"nativeSrc": "3140:22:7",
															"nodeType": "YulAssignment",
															"src": "3140:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3156:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3156:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3150:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3150:5:7"
																},
																"nativeSrc": "3150:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3150:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3140:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3070:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3112:5:7",
														"nodeType": "YulTypedName",
														"src": "3112:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3122:6:7",
														"nodeType": "YulTypedName",
														"src": "3122:6:7",
														"type": ""
													}
												],
												"src": "3070:99:7"
											},
											{
												"body": {
													"nativeSrc": "3271:73:7",
													"nodeType": "YulBlock",
													"src": "3271:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3288:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3288:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3293:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3293:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3281:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3281:6:7"
																},
																"nativeSrc": "3281:19:7",
																"nodeType": "YulFunctionCall",
																"src": "3281:19:7"
															},
															"nativeSrc": "3281:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "3281:19:7"
														},
														{
															"nativeSrc": "3309:29:7",
															"nodeType": "YulAssignment",
															"src": "3309:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3328:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3328:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3333:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3333:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3324:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3324:3:7"
																},
																"nativeSrc": "3324:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3324:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3309:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "3309:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3175:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3243:3:7",
														"nodeType": "YulTypedName",
														"src": "3243:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3248:6:7",
														"nodeType": "YulTypedName",
														"src": "3248:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3259:11:7",
														"nodeType": "YulTypedName",
														"src": "3259:11:7",
														"type": ""
													}
												],
												"src": "3175:169:7"
											},
											{
												"body": {
													"nativeSrc": "3412:77:7",
													"nodeType": "YulBlock",
													"src": "3412:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3429:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3429:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3434:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3434:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3439:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3439:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "3423:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3423:5:7"
																},
																"nativeSrc": "3423:23:7",
																"nodeType": "YulFunctionCall",
																"src": "3423:23:7"
															},
															"nativeSrc": "3423:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "3423:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3466:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3466:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3471:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3471:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3462:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3462:3:7"
																		},
																		"nativeSrc": "3462:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3462:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3480:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3480:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3455:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:7"
																},
																"nativeSrc": "3455:27:7",
																"nodeType": "YulFunctionCall",
																"src": "3455:27:7"
															},
															"nativeSrc": "3455:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "3455:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3350:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3394:3:7",
														"nodeType": "YulTypedName",
														"src": "3394:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3399:3:7",
														"nodeType": "YulTypedName",
														"src": "3399:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3404:6:7",
														"nodeType": "YulTypedName",
														"src": "3404:6:7",
														"type": ""
													}
												],
												"src": "3350:139:7"
											},
											{
												"body": {
													"nativeSrc": "3587:285:7",
													"nodeType": "YulBlock",
													"src": "3587:285:7",
													"statements": [
														{
															"nativeSrc": "3597:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3597:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3644:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3644:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3611:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "3611:32:7"
																},
																"nativeSrc": "3611:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3611:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3601:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3601:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3659:78:7",
															"nodeType": "YulAssignment",
															"src": "3659:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3725:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3725:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3730:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3730:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3666:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "3666:58:7"
																},
																"nativeSrc": "3666:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3666:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3659:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3659:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3785:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3785:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3792:4:7",
																				"nodeType": "YulLiteral",
																				"src": "3792:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3781:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3781:3:7"
																		},
																		"nativeSrc": "3781:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3781:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3799:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3799:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3804:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3804:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3746:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "3746:34:7"
																},
																"nativeSrc": "3746:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3746:65:7"
															},
															"nativeSrc": "3746:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3746:65:7"
														},
														{
															"nativeSrc": "3820:46:7",
															"nodeType": "YulAssignment",
															"src": "3820:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3831:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3831:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3858:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3858:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3836:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "3836:21:7"
																		},
																		"nativeSrc": "3836:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3836:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3827:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3827:3:7"
																},
																"nativeSrc": "3827:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3827:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3820:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3820:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3495:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3568:5:7",
														"nodeType": "YulTypedName",
														"src": "3568:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3575:3:7",
														"nodeType": "YulTypedName",
														"src": "3575:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3583:3:7",
														"nodeType": "YulTypedName",
														"src": "3583:3:7",
														"type": ""
													}
												],
												"src": "3495:377:7"
											},
											{
												"body": {
													"nativeSrc": "3996:195:7",
													"nodeType": "YulBlock",
													"src": "3996:195:7",
													"statements": [
														{
															"nativeSrc": "4006:26:7",
															"nodeType": "YulAssignment",
															"src": "4006:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4018:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4018:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4029:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4029:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4014:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4014:3:7"
																},
																"nativeSrc": "4014:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4014:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4006:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4006:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4053:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4053:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4064:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4064:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4049:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:7"
																		},
																		"nativeSrc": "4049:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4049:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4072:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4072:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4078:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4078:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4068:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4068:3:7"
																		},
																		"nativeSrc": "4068:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4068:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4042:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4042:6:7"
																},
																"nativeSrc": "4042:47:7",
																"nodeType": "YulFunctionCall",
																"src": "4042:47:7"
															},
															"nativeSrc": "4042:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "4042:47:7"
														},
														{
															"nativeSrc": "4098:86:7",
															"nodeType": "YulAssignment",
															"src": "4098:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4170:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4170:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4179:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4179:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4106:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "4106:63:7"
																},
																"nativeSrc": "4106:78:7",
																"nodeType": "YulFunctionCall",
																"src": "4106:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4098:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4098:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3878:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3968:9:7",
														"nodeType": "YulTypedName",
														"src": "3968:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3980:6:7",
														"nodeType": "YulTypedName",
														"src": "3980:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3991:4:7",
														"nodeType": "YulTypedName",
														"src": "3991:4:7",
														"type": ""
													}
												],
												"src": "3878:313:7"
											},
											{
												"body": {
													"nativeSrc": "4242:81:7",
													"nodeType": "YulBlock",
													"src": "4242:81:7",
													"statements": [
														{
															"nativeSrc": "4252:65:7",
															"nodeType": "YulAssignment",
															"src": "4252:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4267:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4267:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4274:42:7",
																		"nodeType": "YulLiteral",
																		"src": "4274:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4263:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4263:3:7"
																},
																"nativeSrc": "4263:54:7",
																"nodeType": "YulFunctionCall",
																"src": "4263:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4252:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4252:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "4197:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4224:5:7",
														"nodeType": "YulTypedName",
														"src": "4224:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4234:7:7",
														"nodeType": "YulTypedName",
														"src": "4234:7:7",
														"type": ""
													}
												],
												"src": "4197:126:7"
											},
											{
												"body": {
													"nativeSrc": "4374:51:7",
													"nodeType": "YulBlock",
													"src": "4374:51:7",
													"statements": [
														{
															"nativeSrc": "4384:35:7",
															"nodeType": "YulAssignment",
															"src": "4384:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4413:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4413:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4395:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "4395:17:7"
																},
																"nativeSrc": "4395:24:7",
																"nodeType": "YulFunctionCall",
																"src": "4395:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4384:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4384:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "4329:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4356:5:7",
														"nodeType": "YulTypedName",
														"src": "4356:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4366:7:7",
														"nodeType": "YulTypedName",
														"src": "4366:7:7",
														"type": ""
													}
												],
												"src": "4329:96:7"
											},
											{
												"body": {
													"nativeSrc": "4474:79:7",
													"nodeType": "YulBlock",
													"src": "4474:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4531:16:7",
																"nodeType": "YulBlock",
																"src": "4531:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4540:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4540:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4543:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4543:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4533:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4533:6:7"
																			},
																			"nativeSrc": "4533:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4533:12:7"
																		},
																		"nativeSrc": "4533:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4533:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4497:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4497:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4522:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4522:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4504:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "4504:17:7"
																				},
																				"nativeSrc": "4504:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4504:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4494:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4494:2:7"
																		},
																		"nativeSrc": "4494:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4494:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4487:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:7"
																},
																"nativeSrc": "4487:43:7",
																"nodeType": "YulFunctionCall",
																"src": "4487:43:7"
															},
															"nativeSrc": "4484:63:7",
															"nodeType": "YulIf",
															"src": "4484:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4431:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4467:5:7",
														"nodeType": "YulTypedName",
														"src": "4467:5:7",
														"type": ""
													}
												],
												"src": "4431:122:7"
											},
											{
												"body": {
													"nativeSrc": "4611:87:7",
													"nodeType": "YulBlock",
													"src": "4611:87:7",
													"statements": [
														{
															"nativeSrc": "4621:29:7",
															"nodeType": "YulAssignment",
															"src": "4621:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4643:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4643:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4630:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4630:12:7"
																},
																"nativeSrc": "4630:20:7",
																"nodeType": "YulFunctionCall",
																"src": "4630:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4621:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4621:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4686:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4686:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4659:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "4659:26:7"
																},
																"nativeSrc": "4659:33:7",
																"nodeType": "YulFunctionCall",
																"src": "4659:33:7"
															},
															"nativeSrc": "4659:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "4659:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4559:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4589:6:7",
														"nodeType": "YulTypedName",
														"src": "4589:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4597:3:7",
														"nodeType": "YulTypedName",
														"src": "4597:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4605:5:7",
														"nodeType": "YulTypedName",
														"src": "4605:5:7",
														"type": ""
													}
												],
												"src": "4559:139:7"
											},
											{
												"body": {
													"nativeSrc": "4749:32:7",
													"nodeType": "YulBlock",
													"src": "4749:32:7",
													"statements": [
														{
															"nativeSrc": "4759:16:7",
															"nodeType": "YulAssignment",
															"src": "4759:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "4770:5:7",
																"nodeType": "YulIdentifier",
																"src": "4770:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4759:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4759:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4704:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4731:5:7",
														"nodeType": "YulTypedName",
														"src": "4731:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4741:7:7",
														"nodeType": "YulTypedName",
														"src": "4741:7:7",
														"type": ""
													}
												],
												"src": "4704:77:7"
											},
											{
												"body": {
													"nativeSrc": "4830:79:7",
													"nodeType": "YulBlock",
													"src": "4830:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4887:16:7",
																"nodeType": "YulBlock",
																"src": "4887:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4896:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4896:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4899:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4899:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4889:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4889:6:7"
																			},
																			"nativeSrc": "4889:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4889:12:7"
																		},
																		"nativeSrc": "4889:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4889:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4853:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4853:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4878:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4878:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4860:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "4860:17:7"
																				},
																				"nativeSrc": "4860:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4860:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4850:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4850:2:7"
																		},
																		"nativeSrc": "4850:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4850:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4843:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4843:6:7"
																},
																"nativeSrc": "4843:43:7",
																"nodeType": "YulFunctionCall",
																"src": "4843:43:7"
															},
															"nativeSrc": "4840:63:7",
															"nodeType": "YulIf",
															"src": "4840:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4787:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4823:5:7",
														"nodeType": "YulTypedName",
														"src": "4823:5:7",
														"type": ""
													}
												],
												"src": "4787:122:7"
											},
											{
												"body": {
													"nativeSrc": "4967:87:7",
													"nodeType": "YulBlock",
													"src": "4967:87:7",
													"statements": [
														{
															"nativeSrc": "4977:29:7",
															"nodeType": "YulAssignment",
															"src": "4977:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4999:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4999:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4986:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4986:12:7"
																},
																"nativeSrc": "4986:20:7",
																"nodeType": "YulFunctionCall",
																"src": "4986:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4977:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4977:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5042:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5042:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5015:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "5015:26:7"
																},
																"nativeSrc": "5015:33:7",
																"nodeType": "YulFunctionCall",
																"src": "5015:33:7"
															},
															"nativeSrc": "5015:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "5015:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4915:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4945:6:7",
														"nodeType": "YulTypedName",
														"src": "4945:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4953:3:7",
														"nodeType": "YulTypedName",
														"src": "4953:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4961:5:7",
														"nodeType": "YulTypedName",
														"src": "4961:5:7",
														"type": ""
													}
												],
												"src": "4915:139:7"
											},
											{
												"body": {
													"nativeSrc": "5143:391:7",
													"nodeType": "YulBlock",
													"src": "5143:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5189:83:7",
																"nodeType": "YulBlock",
																"src": "5189:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5191:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5191:77:7"
																			},
																			"nativeSrc": "5191:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5191:79:7"
																		},
																		"nativeSrc": "5191:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5191:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5164:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5164:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5173:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5173:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5160:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5160:3:7"
																		},
																		"nativeSrc": "5160:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5160:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5185:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5185:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5156:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5156:3:7"
																},
																"nativeSrc": "5156:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5156:32:7"
															},
															"nativeSrc": "5153:119:7",
															"nodeType": "YulIf",
															"src": "5153:119:7"
														},
														{
															"nativeSrc": "5282:117:7",
															"nodeType": "YulBlock",
															"src": "5282:117:7",
															"statements": [
																{
																	"nativeSrc": "5297:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5297:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5311:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5311:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5301:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5301:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5326:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5326:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5361:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5361:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5372:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5372:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5357:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5357:3:7"
																				},
																				"nativeSrc": "5357:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5357:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5381:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5381:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5336:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5336:20:7"
																		},
																		"nativeSrc": "5336:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5336:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5326:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5326:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5409:118:7",
															"nodeType": "YulBlock",
															"src": "5409:118:7",
															"statements": [
																{
																	"nativeSrc": "5424:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5424:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5438:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5438:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5428:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5428:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5454:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5454:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5489:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5489:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5500:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5500:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5485:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5485:3:7"
																				},
																				"nativeSrc": "5485:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5485:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5509:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5509:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5464:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5464:20:7"
																		},
																		"nativeSrc": "5464:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5464:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5454:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5454:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "5060:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5105:9:7",
														"nodeType": "YulTypedName",
														"src": "5105:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5116:7:7",
														"nodeType": "YulTypedName",
														"src": "5116:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5128:6:7",
														"nodeType": "YulTypedName",
														"src": "5128:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5136:6:7",
														"nodeType": "YulTypedName",
														"src": "5136:6:7",
														"type": ""
													}
												],
												"src": "5060:474:7"
											},
											{
												"body": {
													"nativeSrc": "5582:48:7",
													"nodeType": "YulBlock",
													"src": "5582:48:7",
													"statements": [
														{
															"nativeSrc": "5592:32:7",
															"nodeType": "YulAssignment",
															"src": "5592:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5617:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5617:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5610:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5610:6:7"
																		},
																		"nativeSrc": "5610:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5610:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5603:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:7"
																},
																"nativeSrc": "5603:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5603:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5592:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5592:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5540:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5564:5:7",
														"nodeType": "YulTypedName",
														"src": "5564:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5574:7:7",
														"nodeType": "YulTypedName",
														"src": "5574:7:7",
														"type": ""
													}
												],
												"src": "5540:90:7"
											},
											{
												"body": {
													"nativeSrc": "5695:50:7",
													"nodeType": "YulBlock",
													"src": "5695:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5712:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5712:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5732:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5732:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "5717:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "5717:14:7"
																		},
																		"nativeSrc": "5717:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5717:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5705:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5705:6:7"
																},
																"nativeSrc": "5705:34:7",
																"nodeType": "YulFunctionCall",
																"src": "5705:34:7"
															},
															"nativeSrc": "5705:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "5705:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "5636:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5683:5:7",
														"nodeType": "YulTypedName",
														"src": "5683:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5690:3:7",
														"nodeType": "YulTypedName",
														"src": "5690:3:7",
														"type": ""
													}
												],
												"src": "5636:109:7"
											},
											{
												"body": {
													"nativeSrc": "5843:118:7",
													"nodeType": "YulBlock",
													"src": "5843:118:7",
													"statements": [
														{
															"nativeSrc": "5853:26:7",
															"nodeType": "YulAssignment",
															"src": "5853:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5865:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5865:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5876:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5876:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5861:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5861:3:7"
																},
																"nativeSrc": "5861:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5861:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5853:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5853:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5927:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5927:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5940:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5940:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5951:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5951:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5936:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5936:3:7"
																		},
																		"nativeSrc": "5936:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5936:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "5889:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "5889:37:7"
																},
																"nativeSrc": "5889:65:7",
																"nodeType": "YulFunctionCall",
																"src": "5889:65:7"
															},
															"nativeSrc": "5889:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "5889:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "5751:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5815:9:7",
														"nodeType": "YulTypedName",
														"src": "5815:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5827:6:7",
														"nodeType": "YulTypedName",
														"src": "5827:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5838:4:7",
														"nodeType": "YulTypedName",
														"src": "5838:4:7",
														"type": ""
													}
												],
												"src": "5751:210:7"
											},
											{
												"body": {
													"nativeSrc": "6032:53:7",
													"nodeType": "YulBlock",
													"src": "6032:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6049:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6049:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6072:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6072:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6054:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6054:17:7"
																		},
																		"nativeSrc": "6054:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6054:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6042:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6042:6:7"
																},
																"nativeSrc": "6042:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6042:37:7"
															},
															"nativeSrc": "6042:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6042:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5967:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6020:5:7",
														"nodeType": "YulTypedName",
														"src": "6020:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6027:3:7",
														"nodeType": "YulTypedName",
														"src": "6027:3:7",
														"type": ""
													}
												],
												"src": "5967:118:7"
											},
											{
												"body": {
													"nativeSrc": "6189:124:7",
													"nodeType": "YulBlock",
													"src": "6189:124:7",
													"statements": [
														{
															"nativeSrc": "6199:26:7",
															"nodeType": "YulAssignment",
															"src": "6199:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6211:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6211:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6222:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6222:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6207:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6207:3:7"
																},
																"nativeSrc": "6207:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6207:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6199:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6199:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6279:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6279:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6292:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6292:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6303:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6303:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6288:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6288:3:7"
																		},
																		"nativeSrc": "6288:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6288:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6235:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6235:43:7"
																},
																"nativeSrc": "6235:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6235:71:7"
															},
															"nativeSrc": "6235:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6235:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6091:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6161:9:7",
														"nodeType": "YulTypedName",
														"src": "6161:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6173:6:7",
														"nodeType": "YulTypedName",
														"src": "6173:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6184:4:7",
														"nodeType": "YulTypedName",
														"src": "6184:4:7",
														"type": ""
													}
												],
												"src": "6091:222:7"
											},
											{
												"body": {
													"nativeSrc": "6419:519:7",
													"nodeType": "YulBlock",
													"src": "6419:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6465:83:7",
																"nodeType": "YulBlock",
																"src": "6465:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6467:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6467:77:7"
																			},
																			"nativeSrc": "6467:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6467:79:7"
																		},
																		"nativeSrc": "6467:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6467:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6440:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6440:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6449:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6449:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6436:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6436:3:7"
																		},
																		"nativeSrc": "6436:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6436:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6461:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6461:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6432:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6432:3:7"
																},
																"nativeSrc": "6432:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6432:32:7"
															},
															"nativeSrc": "6429:119:7",
															"nodeType": "YulIf",
															"src": "6429:119:7"
														},
														{
															"nativeSrc": "6558:117:7",
															"nodeType": "YulBlock",
															"src": "6558:117:7",
															"statements": [
																{
																	"nativeSrc": "6573:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6573:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6587:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6587:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6577:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6577:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6602:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6602:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6637:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6637:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6648:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6648:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6633:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6633:3:7"
																				},
																				"nativeSrc": "6633:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6633:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6657:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6657:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6612:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6612:20:7"
																		},
																		"nativeSrc": "6612:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6612:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6602:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6602:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6685:118:7",
															"nodeType": "YulBlock",
															"src": "6685:118:7",
															"statements": [
																{
																	"nativeSrc": "6700:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6700:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6714:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6714:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6704:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6704:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6730:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6730:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6765:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6765:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6776:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6776:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6761:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6761:3:7"
																				},
																				"nativeSrc": "6761:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6761:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6785:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6785:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6740:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6740:20:7"
																		},
																		"nativeSrc": "6740:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6740:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6730:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6730:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6813:118:7",
															"nodeType": "YulBlock",
															"src": "6813:118:7",
															"statements": [
																{
																	"nativeSrc": "6828:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6828:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6842:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6842:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6832:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6832:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6858:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6858:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6893:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6893:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6904:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6904:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6889:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6889:3:7"
																				},
																				"nativeSrc": "6889:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6889:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6913:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6913:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6868:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6868:20:7"
																		},
																		"nativeSrc": "6868:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6868:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6858:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6858:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "6319:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6373:9:7",
														"nodeType": "YulTypedName",
														"src": "6373:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6384:7:7",
														"nodeType": "YulTypedName",
														"src": "6384:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6396:6:7",
														"nodeType": "YulTypedName",
														"src": "6396:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6404:6:7",
														"nodeType": "YulTypedName",
														"src": "6404:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6412:6:7",
														"nodeType": "YulTypedName",
														"src": "6412:6:7",
														"type": ""
													}
												],
												"src": "6319:619:7"
											},
											{
												"body": {
													"nativeSrc": "6987:43:7",
													"nodeType": "YulBlock",
													"src": "6987:43:7",
													"statements": [
														{
															"nativeSrc": "6997:27:7",
															"nodeType": "YulAssignment",
															"src": "6997:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7012:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7012:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7019:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7019:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7008:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7008:3:7"
																},
																"nativeSrc": "7008:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7008:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6997:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6997:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6944:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6969:5:7",
														"nodeType": "YulTypedName",
														"src": "6969:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6979:7:7",
														"nodeType": "YulTypedName",
														"src": "6979:7:7",
														"type": ""
													}
												],
												"src": "6944:86:7"
											},
											{
												"body": {
													"nativeSrc": "7097:51:7",
													"nodeType": "YulBlock",
													"src": "7097:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7114:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7114:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7135:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7135:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7119:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "7119:15:7"
																		},
																		"nativeSrc": "7119:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7119:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7107:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7107:6:7"
																},
																"nativeSrc": "7107:35:7",
																"nodeType": "YulFunctionCall",
																"src": "7107:35:7"
															},
															"nativeSrc": "7107:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "7107:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7036:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7085:5:7",
														"nodeType": "YulTypedName",
														"src": "7085:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7092:3:7",
														"nodeType": "YulTypedName",
														"src": "7092:3:7",
														"type": ""
													}
												],
												"src": "7036:112:7"
											},
											{
												"body": {
													"nativeSrc": "7248:120:7",
													"nodeType": "YulBlock",
													"src": "7248:120:7",
													"statements": [
														{
															"nativeSrc": "7258:26:7",
															"nodeType": "YulAssignment",
															"src": "7258:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7270:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7270:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7281:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7281:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7266:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7266:3:7"
																},
																"nativeSrc": "7266:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7266:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7258:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7258:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7334:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7334:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7347:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7347:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7358:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7358:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7343:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7343:3:7"
																		},
																		"nativeSrc": "7343:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7343:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7294:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "7294:39:7"
																},
																"nativeSrc": "7294:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7294:67:7"
															},
															"nativeSrc": "7294:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "7294:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7154:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7220:9:7",
														"nodeType": "YulTypedName",
														"src": "7220:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7232:6:7",
														"nodeType": "YulTypedName",
														"src": "7232:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7243:4:7",
														"nodeType": "YulTypedName",
														"src": "7243:4:7",
														"type": ""
													}
												],
												"src": "7154:214:7"
											},
											{
												"body": {
													"nativeSrc": "7440:263:7",
													"nodeType": "YulBlock",
													"src": "7440:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7486:83:7",
																"nodeType": "YulBlock",
																"src": "7486:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7488:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7488:77:7"
																			},
																			"nativeSrc": "7488:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7488:79:7"
																		},
																		"nativeSrc": "7488:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7488:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7461:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7461:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7470:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7470:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7457:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7457:3:7"
																		},
																		"nativeSrc": "7457:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7457:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7482:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7482:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7453:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7453:3:7"
																},
																"nativeSrc": "7453:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7453:32:7"
															},
															"nativeSrc": "7450:119:7",
															"nodeType": "YulIf",
															"src": "7450:119:7"
														},
														{
															"nativeSrc": "7579:117:7",
															"nodeType": "YulBlock",
															"src": "7579:117:7",
															"statements": [
																{
																	"nativeSrc": "7594:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7594:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7608:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7608:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7598:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7598:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7623:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7623:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7658:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7658:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7669:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7669:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7654:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7654:3:7"
																				},
																				"nativeSrc": "7654:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7654:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7678:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7678:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7633:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7633:20:7"
																		},
																		"nativeSrc": "7633:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7633:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7623:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7623:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "7374:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7410:9:7",
														"nodeType": "YulTypedName",
														"src": "7410:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7421:7:7",
														"nodeType": "YulTypedName",
														"src": "7421:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7433:6:7",
														"nodeType": "YulTypedName",
														"src": "7433:6:7",
														"type": ""
													}
												],
												"src": "7374:329:7"
											},
											{
												"body": {
													"nativeSrc": "7775:263:7",
													"nodeType": "YulBlock",
													"src": "7775:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7821:83:7",
																"nodeType": "YulBlock",
																"src": "7821:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7823:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7823:77:7"
																			},
																			"nativeSrc": "7823:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7823:79:7"
																		},
																		"nativeSrc": "7823:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7823:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7796:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7796:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7805:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7805:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7792:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7792:3:7"
																		},
																		"nativeSrc": "7792:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7792:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7817:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7817:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7788:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7788:3:7"
																},
																"nativeSrc": "7788:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7788:32:7"
															},
															"nativeSrc": "7785:119:7",
															"nodeType": "YulIf",
															"src": "7785:119:7"
														},
														{
															"nativeSrc": "7914:117:7",
															"nodeType": "YulBlock",
															"src": "7914:117:7",
															"statements": [
																{
																	"nativeSrc": "7929:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7929:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7943:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7943:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7933:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7933:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7958:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7958:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7993:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7993:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8004:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8004:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7989:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7989:3:7"
																				},
																				"nativeSrc": "7989:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7989:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8013:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8013:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7968:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7968:20:7"
																		},
																		"nativeSrc": "7968:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7958:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7958:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7709:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7745:9:7",
														"nodeType": "YulTypedName",
														"src": "7745:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7756:7:7",
														"nodeType": "YulTypedName",
														"src": "7756:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7768:6:7",
														"nodeType": "YulTypedName",
														"src": "7768:6:7",
														"type": ""
													}
												],
												"src": "7709:329:7"
											},
											{
												"body": {
													"nativeSrc": "8109:53:7",
													"nodeType": "YulBlock",
													"src": "8109:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8126:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8126:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8149:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8149:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8131:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "8131:17:7"
																		},
																		"nativeSrc": "8131:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8131:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8119:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8119:6:7"
																},
																"nativeSrc": "8119:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8119:37:7"
															},
															"nativeSrc": "8119:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "8119:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8044:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8097:5:7",
														"nodeType": "YulTypedName",
														"src": "8097:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8104:3:7",
														"nodeType": "YulTypedName",
														"src": "8104:3:7",
														"type": ""
													}
												],
												"src": "8044:118:7"
											},
											{
												"body": {
													"nativeSrc": "8266:124:7",
													"nodeType": "YulBlock",
													"src": "8266:124:7",
													"statements": [
														{
															"nativeSrc": "8276:26:7",
															"nodeType": "YulAssignment",
															"src": "8276:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8288:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8288:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8299:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8299:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8284:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8284:3:7"
																},
																"nativeSrc": "8284:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8284:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8276:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8276:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8356:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8356:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8369:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8369:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8380:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8380:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8365:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8365:3:7"
																		},
																		"nativeSrc": "8365:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8365:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8312:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8312:43:7"
																},
																"nativeSrc": "8312:71:7",
																"nodeType": "YulFunctionCall",
																"src": "8312:71:7"
															},
															"nativeSrc": "8312:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "8312:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8168:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8238:9:7",
														"nodeType": "YulTypedName",
														"src": "8238:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8250:6:7",
														"nodeType": "YulTypedName",
														"src": "8250:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8261:4:7",
														"nodeType": "YulTypedName",
														"src": "8261:4:7",
														"type": ""
													}
												],
												"src": "8168:222:7"
											},
											{
												"body": {
													"nativeSrc": "8479:391:7",
													"nodeType": "YulBlock",
													"src": "8479:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8525:83:7",
																"nodeType": "YulBlock",
																"src": "8525:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8527:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8527:77:7"
																			},
																			"nativeSrc": "8527:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8527:79:7"
																		},
																		"nativeSrc": "8527:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8527:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8500:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8500:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8509:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8509:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8496:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8496:3:7"
																		},
																		"nativeSrc": "8496:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8496:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8521:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8521:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8492:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8492:3:7"
																},
																"nativeSrc": "8492:32:7",
																"nodeType": "YulFunctionCall",
																"src": "8492:32:7"
															},
															"nativeSrc": "8489:119:7",
															"nodeType": "YulIf",
															"src": "8489:119:7"
														},
														{
															"nativeSrc": "8618:117:7",
															"nodeType": "YulBlock",
															"src": "8618:117:7",
															"statements": [
																{
																	"nativeSrc": "8633:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8633:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8647:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8647:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8637:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8637:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8662:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8662:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8697:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8697:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8708:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8708:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8693:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8693:3:7"
																				},
																				"nativeSrc": "8693:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8693:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8717:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8717:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8672:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8672:20:7"
																		},
																		"nativeSrc": "8672:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8672:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8662:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8662:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8745:118:7",
															"nodeType": "YulBlock",
															"src": "8745:118:7",
															"statements": [
																{
																	"nativeSrc": "8760:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8760:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8774:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8774:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8764:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8764:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8790:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8790:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8825:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8825:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8836:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8836:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8821:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8821:3:7"
																				},
																				"nativeSrc": "8821:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8821:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8845:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8845:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8800:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8800:20:7"
																		},
																		"nativeSrc": "8800:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8800:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8790:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8790:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8396:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8441:9:7",
														"nodeType": "YulTypedName",
														"src": "8441:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8452:7:7",
														"nodeType": "YulTypedName",
														"src": "8452:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8464:6:7",
														"nodeType": "YulTypedName",
														"src": "8464:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8472:6:7",
														"nodeType": "YulTypedName",
														"src": "8472:6:7",
														"type": ""
													}
												],
												"src": "8396:474:7"
											},
											{
												"body": {
													"nativeSrc": "8982:53:7",
													"nodeType": "YulBlock",
													"src": "8982:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9004:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9004:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9012:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9012:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9000:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9000:3:7"
																		},
																		"nativeSrc": "9000:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9000:14:7"
																	},
																	{
																		"hexValue": "456d70747920555249",
																		"kind": "string",
																		"nativeSrc": "9016:11:7",
																		"nodeType": "YulLiteral",
																		"src": "9016:11:7",
																		"type": "",
																		"value": "Empty URI"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8993:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8993:6:7"
																},
																"nativeSrc": "8993:35:7",
																"nodeType": "YulFunctionCall",
																"src": "8993:35:7"
															},
															"nativeSrc": "8993:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "8993:35:7"
														}
													]
												},
												"name": "store_literal_in_memory_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf",
												"nativeSrc": "8876:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8974:6:7",
														"nodeType": "YulTypedName",
														"src": "8974:6:7",
														"type": ""
													}
												],
												"src": "8876:159:7"
											},
											{
												"body": {
													"nativeSrc": "9187:219:7",
													"nodeType": "YulBlock",
													"src": "9187:219:7",
													"statements": [
														{
															"nativeSrc": "9197:73:7",
															"nodeType": "YulAssignment",
															"src": "9197:73:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9263:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9263:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9268:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9268:1:7",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9204:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9204:58:7"
																},
																"nativeSrc": "9204:66:7",
																"nodeType": "YulFunctionCall",
																"src": "9204:66:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9197:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9197:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9368:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9368:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf",
																	"nativeSrc": "9279:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9279:88:7"
																},
																"nativeSrc": "9279:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9279:93:7"
															},
															"nativeSrc": "9279:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9279:93:7"
														},
														{
															"nativeSrc": "9381:19:7",
															"nodeType": "YulAssignment",
															"src": "9381:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9392:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9392:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9397:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9397:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9388:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9388:3:7"
																},
																"nativeSrc": "9388:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9388:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9381:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9381:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9041:365:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9175:3:7",
														"nodeType": "YulTypedName",
														"src": "9175:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9183:3:7",
														"nodeType": "YulTypedName",
														"src": "9183:3:7",
														"type": ""
													}
												],
												"src": "9041:365:7"
											},
											{
												"body": {
													"nativeSrc": "9583:248:7",
													"nodeType": "YulBlock",
													"src": "9583:248:7",
													"statements": [
														{
															"nativeSrc": "9593:26:7",
															"nodeType": "YulAssignment",
															"src": "9593:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9605:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9605:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9616:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9616:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9601:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9601:3:7"
																},
																"nativeSrc": "9601:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9601:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9593:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9593:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9640:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9640:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9651:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9651:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9636:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9636:3:7"
																		},
																		"nativeSrc": "9636:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9636:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9659:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9659:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9665:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9665:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9655:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9655:3:7"
																		},
																		"nativeSrc": "9655:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9655:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9629:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9629:6:7"
																},
																"nativeSrc": "9629:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9629:47:7"
															},
															"nativeSrc": "9629:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9629:47:7"
														},
														{
															"nativeSrc": "9685:139:7",
															"nodeType": "YulAssignment",
															"src": "9685:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9819:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9819:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9693:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "9693:124:7"
																},
																"nativeSrc": "9693:131:7",
																"nodeType": "YulFunctionCall",
																"src": "9693:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9685:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9685:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9412:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9563:9:7",
														"nodeType": "YulTypedName",
														"src": "9563:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9578:4:7",
														"nodeType": "YulTypedName",
														"src": "9578:4:7",
														"type": ""
													}
												],
												"src": "9412:419:7"
											},
											{
												"body": {
													"nativeSrc": "9865:152:7",
													"nodeType": "YulBlock",
													"src": "9865:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9882:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9882:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9885:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9885:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9875:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9875:6:7"
																},
																"nativeSrc": "9875:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9875:88:7"
															},
															"nativeSrc": "9875:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9875:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9979:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9979:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9982:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9982:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9972:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9972:6:7"
																},
																"nativeSrc": "9972:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9972:15:7"
															},
															"nativeSrc": "9972:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9972:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10003:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10003:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10006:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10006:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9996:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9996:6:7"
																},
																"nativeSrc": "9996:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9996:15:7"
															},
															"nativeSrc": "9996:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9996:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9837:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9837:180:7"
											},
											{
												"body": {
													"nativeSrc": "10074:269:7",
													"nodeType": "YulBlock",
													"src": "10074:269:7",
													"statements": [
														{
															"nativeSrc": "10084:22:7",
															"nodeType": "YulAssignment",
															"src": "10084:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10098:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10098:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10104:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10104:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10094:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10094:3:7"
																},
																"nativeSrc": "10094:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10094:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10084:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10084:6:7"
																}
															]
														},
														{
															"nativeSrc": "10115:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "10115:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10145:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10145:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10151:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10151:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10141:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10141:3:7"
																},
																"nativeSrc": "10141:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10141:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10119:18:7",
																	"nodeType": "YulTypedName",
																	"src": "10119:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10192:51:7",
																"nodeType": "YulBlock",
																"src": "10192:51:7",
																"statements": [
																	{
																		"nativeSrc": "10206:27:7",
																		"nodeType": "YulAssignment",
																		"src": "10206:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10220:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "10220:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10228:4:7",
																					"nodeType": "YulLiteral",
																					"src": "10228:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10216:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "10216:3:7"
																			},
																			"nativeSrc": "10216:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10216:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10206:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10206:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10172:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "10172:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10165:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10165:6:7"
																},
																"nativeSrc": "10165:26:7",
																"nodeType": "YulFunctionCall",
																"src": "10165:26:7"
															},
															"nativeSrc": "10162:81:7",
															"nodeType": "YulIf",
															"src": "10162:81:7"
														},
														{
															"body": {
																"nativeSrc": "10295:42:7",
																"nodeType": "YulBlock",
																"src": "10295:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10309:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10309:16:7"
																			},
																			"nativeSrc": "10309:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10309:18:7"
																		},
																		"nativeSrc": "10309:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10309:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10259:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "10259:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10282:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10282:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10290:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10290:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10279:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10279:2:7"
																		},
																		"nativeSrc": "10279:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10279:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10256:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "10256:2:7"
																},
																"nativeSrc": "10256:38:7",
																"nodeType": "YulFunctionCall",
																"src": "10256:38:7"
															},
															"nativeSrc": "10253:84:7",
															"nodeType": "YulIf",
															"src": "10253:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10023:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10058:4:7",
														"nodeType": "YulTypedName",
														"src": "10058:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10067:6:7",
														"nodeType": "YulTypedName",
														"src": "10067:6:7",
														"type": ""
													}
												],
												"src": "10023:320:7"
											},
											{
												"body": {
													"nativeSrc": "10403:87:7",
													"nodeType": "YulBlock",
													"src": "10403:87:7",
													"statements": [
														{
															"nativeSrc": "10413:11:7",
															"nodeType": "YulAssignment",
															"src": "10413:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "10421:3:7",
																"nodeType": "YulIdentifier",
																"src": "10421:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "10413:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10413:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10441:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10441:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "10444:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10444:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10434:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10434:6:7"
																},
																"nativeSrc": "10434:14:7",
																"nodeType": "YulFunctionCall",
																"src": "10434:14:7"
															},
															"nativeSrc": "10434:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "10434:14:7"
														},
														{
															"nativeSrc": "10457:26:7",
															"nodeType": "YulAssignment",
															"src": "10457:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10475:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10475:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10478:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10478:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "10465:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "10465:9:7"
																},
																"nativeSrc": "10465:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10465:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "10457:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10457:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "10349:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "10390:3:7",
														"nodeType": "YulTypedName",
														"src": "10390:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "10398:4:7",
														"nodeType": "YulTypedName",
														"src": "10398:4:7",
														"type": ""
													}
												],
												"src": "10349:141:7"
											},
											{
												"body": {
													"nativeSrc": "10540:49:7",
													"nodeType": "YulBlock",
													"src": "10540:49:7",
													"statements": [
														{
															"nativeSrc": "10550:33:7",
															"nodeType": "YulAssignment",
															"src": "10550:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10568:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10568:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10575:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10575:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10564:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10564:3:7"
																		},
																		"nativeSrc": "10564:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10564:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10580:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10580:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10560:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10560:3:7"
																},
																"nativeSrc": "10560:23:7",
																"nodeType": "YulFunctionCall",
																"src": "10560:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10550:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10550:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "10496:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10523:5:7",
														"nodeType": "YulTypedName",
														"src": "10523:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "10533:6:7",
														"nodeType": "YulTypedName",
														"src": "10533:6:7",
														"type": ""
													}
												],
												"src": "10496:93:7"
											},
											{
												"body": {
													"nativeSrc": "10648:54:7",
													"nodeType": "YulBlock",
													"src": "10648:54:7",
													"statements": [
														{
															"nativeSrc": "10658:37:7",
															"nodeType": "YulAssignment",
															"src": "10658:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "10683:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10683:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "10689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "10689:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "10679:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10679:3:7"
																},
																"nativeSrc": "10679:16:7",
																"nodeType": "YulFunctionCall",
																"src": "10679:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "10658:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "10658:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "10595:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "10623:4:7",
														"nodeType": "YulTypedName",
														"src": "10623:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "10629:5:7",
														"nodeType": "YulTypedName",
														"src": "10629:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "10639:8:7",
														"nodeType": "YulTypedName",
														"src": "10639:8:7",
														"type": ""
													}
												],
												"src": "10595:107:7"
											},
											{
												"body": {
													"nativeSrc": "10784:317:7",
													"nodeType": "YulBlock",
													"src": "10784:317:7",
													"statements": [
														{
															"nativeSrc": "10794:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "10794:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "10815:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "10815:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10827:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10827:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10811:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10811:3:7"
																},
																"nativeSrc": "10811:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10811:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "10798:9:7",
																	"nodeType": "YulTypedName",
																	"src": "10798:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10838:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "10838:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "10869:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10869:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10880:66:7",
																		"nodeType": "YulLiteral",
																		"src": "10880:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "10850:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "10850:18:7"
																},
																"nativeSrc": "10850:97:7",
																"nodeType": "YulFunctionCall",
																"src": "10850:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "10842:4:7",
																	"nodeType": "YulTypedName",
																	"src": "10842:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10956:51:7",
															"nodeType": "YulAssignment",
															"src": "10956:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "10987:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10987:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "10998:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "10998:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "10968:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "10968:18:7"
																},
																"nativeSrc": "10968:39:7",
																"nodeType": "YulFunctionCall",
																"src": "10968:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "10956:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "10956:8:7"
																}
															]
														},
														{
															"nativeSrc": "11016:30:7",
															"nodeType": "YulAssignment",
															"src": "11016:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11029:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11029:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "11040:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11040:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "11036:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11036:3:7"
																		},
																		"nativeSrc": "11036:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11036:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11025:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11025:3:7"
																},
																"nativeSrc": "11025:21:7",
																"nodeType": "YulFunctionCall",
																"src": "11025:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11016:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11016:5:7"
																}
															]
														},
														{
															"nativeSrc": "11055:40:7",
															"nodeType": "YulAssignment",
															"src": "11055:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11068:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11068:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "11079:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "11079:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "11089:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11089:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11075:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11075:3:7"
																		},
																		"nativeSrc": "11075:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11075:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11065:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11065:2:7"
																},
																"nativeSrc": "11065:30:7",
																"nodeType": "YulFunctionCall",
																"src": "11065:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "11055:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11055:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "10708:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10745:5:7",
														"nodeType": "YulTypedName",
														"src": "10745:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "10752:10:7",
														"nodeType": "YulTypedName",
														"src": "10752:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "10764:8:7",
														"nodeType": "YulTypedName",
														"src": "10764:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "10777:6:7",
														"nodeType": "YulTypedName",
														"src": "10777:6:7",
														"type": ""
													}
												],
												"src": "10708:393:7"
											},
											{
												"body": {
													"nativeSrc": "11139:28:7",
													"nodeType": "YulBlock",
													"src": "11139:28:7",
													"statements": [
														{
															"nativeSrc": "11149:12:7",
															"nodeType": "YulAssignment",
															"src": "11149:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "11156:5:7",
																"nodeType": "YulIdentifier",
																"src": "11156:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11149:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11149:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "11107:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11125:5:7",
														"nodeType": "YulTypedName",
														"src": "11125:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11135:3:7",
														"nodeType": "YulTypedName",
														"src": "11135:3:7",
														"type": ""
													}
												],
												"src": "11107:60:7"
											},
											{
												"body": {
													"nativeSrc": "11233:82:7",
													"nodeType": "YulBlock",
													"src": "11233:82:7",
													"statements": [
														{
															"nativeSrc": "11243:66:7",
															"nodeType": "YulAssignment",
															"src": "11243:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11301:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11301:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "11283:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "11283:17:7"
																				},
																				"nativeSrc": "11283:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11283:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "11274:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "11274:8:7"
																		},
																		"nativeSrc": "11274:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11274:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11256:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11256:17:7"
																},
																"nativeSrc": "11256:53:7",
																"nodeType": "YulFunctionCall",
																"src": "11256:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11243:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "11243:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "11173:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11213:5:7",
														"nodeType": "YulTypedName",
														"src": "11213:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11223:9:7",
														"nodeType": "YulTypedName",
														"src": "11223:9:7",
														"type": ""
													}
												],
												"src": "11173:142:7"
											},
											{
												"body": {
													"nativeSrc": "11368:28:7",
													"nodeType": "YulBlock",
													"src": "11368:28:7",
													"statements": [
														{
															"nativeSrc": "11378:12:7",
															"nodeType": "YulAssignment",
															"src": "11378:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "11385:5:7",
																"nodeType": "YulIdentifier",
																"src": "11385:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11378:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11378:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "11321:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11354:5:7",
														"nodeType": "YulTypedName",
														"src": "11354:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11364:3:7",
														"nodeType": "YulTypedName",
														"src": "11364:3:7",
														"type": ""
													}
												],
												"src": "11321:75:7"
											},
											{
												"body": {
													"nativeSrc": "11478:193:7",
													"nodeType": "YulBlock",
													"src": "11478:193:7",
													"statements": [
														{
															"nativeSrc": "11488:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "11488:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "11543:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "11543:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "11512:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "11512:30:7"
																},
																"nativeSrc": "11512:39:7",
																"nodeType": "YulFunctionCall",
																"src": "11512:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "11492:16:7",
																	"nodeType": "YulTypedName",
																	"src": "11492:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "11567:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11567:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "11607:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "11607:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "11601:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "11601:5:7"
																				},
																				"nativeSrc": "11601:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11601:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "11614:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11614:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "11646:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "11646:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "11622:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "11622:23:7"
																				},
																				"nativeSrc": "11622:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11622:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "11573:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "11573:27:7"
																		},
																		"nativeSrc": "11573:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11573:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "11560:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11560:6:7"
																},
																"nativeSrc": "11560:105:7",
																"nodeType": "YulFunctionCall",
																"src": "11560:105:7"
															},
															"nativeSrc": "11560:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "11560:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "11402:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "11455:4:7",
														"nodeType": "YulTypedName",
														"src": "11455:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "11461:6:7",
														"nodeType": "YulTypedName",
														"src": "11461:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "11469:7:7",
														"nodeType": "YulTypedName",
														"src": "11469:7:7",
														"type": ""
													}
												],
												"src": "11402:269:7"
											},
											{
												"body": {
													"nativeSrc": "11726:24:7",
													"nodeType": "YulBlock",
													"src": "11726:24:7",
													"statements": [
														{
															"nativeSrc": "11736:8:7",
															"nodeType": "YulAssignment",
															"src": "11736:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "11743:1:7",
																"nodeType": "YulLiteral",
																"src": "11743:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11736:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11736:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "11677:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11722:3:7",
														"nodeType": "YulTypedName",
														"src": "11722:3:7",
														"type": ""
													}
												],
												"src": "11677:73:7"
											},
											{
												"body": {
													"nativeSrc": "11809:136:7",
													"nodeType": "YulBlock",
													"src": "11809:136:7",
													"statements": [
														{
															"nativeSrc": "11819:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "11819:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "11833:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "11833:30:7"
																},
																"nativeSrc": "11833:32:7",
																"nodeType": "YulFunctionCall",
																"src": "11833:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "11823:6:7",
																	"nodeType": "YulTypedName",
																	"src": "11823:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "11918:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11918:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "11924:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11924:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "11932:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11932:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "11874:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11874:43:7"
																},
																"nativeSrc": "11874:65:7",
																"nodeType": "YulFunctionCall",
																"src": "11874:65:7"
															},
															"nativeSrc": "11874:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "11874:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "11756:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "11795:4:7",
														"nodeType": "YulTypedName",
														"src": "11795:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "11801:6:7",
														"nodeType": "YulTypedName",
														"src": "11801:6:7",
														"type": ""
													}
												],
												"src": "11756:189:7"
											},
											{
												"body": {
													"nativeSrc": "12001:136:7",
													"nodeType": "YulBlock",
													"src": "12001:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "12068:63:7",
																"nodeType": "YulBlock",
																"src": "12068:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "12112:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "12112:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12119:1:7",
																					"nodeType": "YulLiteral",
																					"src": "12119:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "12082:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "12082:29:7"
																			},
																			"nativeSrc": "12082:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12082:39:7"
																		},
																		"nativeSrc": "12082:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12082:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "12021:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "12021:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12028:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12028:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12018:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "12018:2:7"
																},
																"nativeSrc": "12018:14:7",
																"nodeType": "YulFunctionCall",
																"src": "12018:14:7"
															},
															"nativeSrc": "12011:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12033:26:7",
																"nodeType": "YulBlock",
																"src": "12033:26:7",
																"statements": [
																	{
																		"nativeSrc": "12035:22:7",
																		"nodeType": "YulAssignment",
																		"src": "12035:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "12048:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "12048:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12055:1:7",
																					"nodeType": "YulLiteral",
																					"src": "12055:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12044:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "12044:3:7"
																			},
																			"nativeSrc": "12044:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12044:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "12035:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "12035:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12015:2:7",
																"nodeType": "YulBlock",
																"src": "12015:2:7",
																"statements": []
															},
															"src": "12011:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "11951:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "11989:5:7",
														"nodeType": "YulTypedName",
														"src": "11989:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11996:3:7",
														"nodeType": "YulTypedName",
														"src": "11996:3:7",
														"type": ""
													}
												],
												"src": "11951:186:7"
											},
											{
												"body": {
													"nativeSrc": "12222:464:7",
													"nodeType": "YulBlock",
													"src": "12222:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "12248:431:7",
																"nodeType": "YulBlock",
																"src": "12248:431:7",
																"statements": [
																	{
																		"nativeSrc": "12262:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12262:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "12310:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "12310:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "12278:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "12278:31:7"
																			},
																			"nativeSrc": "12278:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12278:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "12266:8:7",
																				"nodeType": "YulTypedName",
																				"src": "12266:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "12329:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12329:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "12352:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "12352:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "12380:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "12380:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "12362:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "12362:17:7"
																					},
																					"nativeSrc": "12362:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "12362:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12348:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "12348:3:7"
																			},
																			"nativeSrc": "12348:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12348:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "12333:11:7",
																				"nodeType": "YulTypedName",
																				"src": "12333:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "12549:27:7",
																			"nodeType": "YulBlock",
																			"src": "12549:27:7",
																			"statements": [
																				{
																					"nativeSrc": "12551:23:7",
																					"nodeType": "YulAssignment",
																					"src": "12551:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "12566:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "12566:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "12551:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "12551:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "12533:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "12533:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12545:2:7",
																					"nodeType": "YulLiteral",
																					"src": "12545:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "12530:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "12530:2:7"
																			},
																			"nativeSrc": "12530:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12530:18:7"
																		},
																		"nativeSrc": "12527:49:7",
																		"nodeType": "YulIf",
																		"src": "12527:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "12618:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "12618:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "12635:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "12635:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "12663:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "12663:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "12645:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "12645:17:7"
																							},
																							"nativeSrc": "12645:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "12645:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "12631:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "12631:3:7"
																					},
																					"nativeSrc": "12631:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "12631:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "12589:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "12589:28:7"
																			},
																			"nativeSrc": "12589:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12589:80:7"
																		},
																		"nativeSrc": "12589:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12589:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "12239:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12239:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12244:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12244:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12236:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "12236:2:7"
																},
																"nativeSrc": "12236:11:7",
																"nodeType": "YulFunctionCall",
																"src": "12236:11:7"
															},
															"nativeSrc": "12233:446:7",
															"nodeType": "YulIf",
															"src": "12233:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "12143:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "12198:5:7",
														"nodeType": "YulTypedName",
														"src": "12198:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "12205:3:7",
														"nodeType": "YulTypedName",
														"src": "12205:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "12210:10:7",
														"nodeType": "YulTypedName",
														"src": "12210:10:7",
														"type": ""
													}
												],
												"src": "12143:543:7"
											},
											{
												"body": {
													"nativeSrc": "12755:54:7",
													"nodeType": "YulBlock",
													"src": "12755:54:7",
													"statements": [
														{
															"nativeSrc": "12765:37:7",
															"nodeType": "YulAssignment",
															"src": "12765:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "12790:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12790:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "12796:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "12796:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "12786:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12786:3:7"
																},
																"nativeSrc": "12786:16:7",
																"nodeType": "YulFunctionCall",
																"src": "12786:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "12765:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "12765:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "12692:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "12730:4:7",
														"nodeType": "YulTypedName",
														"src": "12730:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "12736:5:7",
														"nodeType": "YulTypedName",
														"src": "12736:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "12746:8:7",
														"nodeType": "YulTypedName",
														"src": "12746:8:7",
														"type": ""
													}
												],
												"src": "12692:117:7"
											},
											{
												"body": {
													"nativeSrc": "12866:118:7",
													"nodeType": "YulBlock",
													"src": "12866:118:7",
													"statements": [
														{
															"nativeSrc": "12876:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "12876:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "12925:1:7",
																						"nodeType": "YulLiteral",
																						"src": "12925:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "12928:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "12928:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "12921:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12921:3:7"
																				},
																				"nativeSrc": "12921:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12921:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "12940:1:7",
																						"nodeType": "YulLiteral",
																						"src": "12940:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "12936:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12936:3:7"
																				},
																				"nativeSrc": "12936:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12936:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "12892:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "12892:28:7"
																		},
																		"nativeSrc": "12892:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12892:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "12888:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12888:3:7"
																},
																"nativeSrc": "12888:56:7",
																"nodeType": "YulFunctionCall",
																"src": "12888:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "12880:4:7",
																	"nodeType": "YulTypedName",
																	"src": "12880:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12953:25:7",
															"nodeType": "YulAssignment",
															"src": "12953:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12967:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12967:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "12973:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12973:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12963:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12963:3:7"
																},
																"nativeSrc": "12963:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12963:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12953:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12953:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "12815:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12843:4:7",
														"nodeType": "YulTypedName",
														"src": "12843:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "12849:5:7",
														"nodeType": "YulTypedName",
														"src": "12849:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "12859:6:7",
														"nodeType": "YulTypedName",
														"src": "12859:6:7",
														"type": ""
													}
												],
												"src": "12815:169:7"
											},
											{
												"body": {
													"nativeSrc": "13070:214:7",
													"nodeType": "YulBlock",
													"src": "13070:214:7",
													"statements": [
														{
															"nativeSrc": "13203:37:7",
															"nodeType": "YulAssignment",
															"src": "13203:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13230:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13230:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "13236:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13236:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "13211:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "13211:18:7"
																},
																"nativeSrc": "13211:29:7",
																"nodeType": "YulFunctionCall",
																"src": "13211:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13203:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13203:4:7"
																}
															]
														},
														{
															"nativeSrc": "13249:29:7",
															"nodeType": "YulAssignment",
															"src": "13249:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13260:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13260:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13270:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13270:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "13273:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "13273:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "13266:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13266:3:7"
																		},
																		"nativeSrc": "13266:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13266:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "13257:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "13257:2:7"
																},
																"nativeSrc": "13257:21:7",
																"nodeType": "YulFunctionCall",
																"src": "13257:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "13249:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13249:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "12989:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13051:4:7",
														"nodeType": "YulTypedName",
														"src": "13051:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "13057:3:7",
														"nodeType": "YulTypedName",
														"src": "13057:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "13065:4:7",
														"nodeType": "YulTypedName",
														"src": "13065:4:7",
														"type": ""
													}
												],
												"src": "12989:295:7"
											},
											{
												"body": {
													"nativeSrc": "13381:1303:7",
													"nodeType": "YulBlock",
													"src": "13381:1303:7",
													"statements": [
														{
															"nativeSrc": "13392:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "13392:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "13439:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13439:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "13406:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "13406:32:7"
																},
																"nativeSrc": "13406:37:7",
																"nodeType": "YulFunctionCall",
																"src": "13406:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "13396:6:7",
																	"nodeType": "YulTypedName",
																	"src": "13396:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13528:22:7",
																"nodeType": "YulBlock",
																"src": "13528:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "13530:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13530:16:7"
																			},
																			"nativeSrc": "13530:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13530:18:7"
																		},
																		"nativeSrc": "13530:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13530:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "13500:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13500:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13508:18:7",
																		"nodeType": "YulLiteral",
																		"src": "13508:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13497:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "13497:2:7"
																},
																"nativeSrc": "13497:30:7",
																"nodeType": "YulFunctionCall",
																"src": "13497:30:7"
															},
															"nativeSrc": "13494:56:7",
															"nodeType": "YulIf",
															"src": "13494:56:7"
														},
														{
															"nativeSrc": "13560:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "13560:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "13606:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13606:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "13600:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "13600:5:7"
																		},
																		"nativeSrc": "13600:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13600:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "13574:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "13574:25:7"
																},
																"nativeSrc": "13574:38:7",
																"nodeType": "YulFunctionCall",
																"src": "13574:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "13564:6:7",
																	"nodeType": "YulTypedName",
																	"src": "13564:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "13705:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13705:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "13711:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13711:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "13719:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13719:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "13659:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "13659:45:7"
																},
																"nativeSrc": "13659:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13659:67:7"
															},
															"nativeSrc": "13659:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "13659:67:7"
														},
														{
															"nativeSrc": "13736:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "13736:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "13753:1:7",
																"nodeType": "YulLiteral",
																"src": "13753:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "13740:9:7",
																	"nodeType": "YulTypedName",
																	"src": "13740:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13764:17:7",
															"nodeType": "YulAssignment",
															"src": "13764:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "13777:4:7",
																"nodeType": "YulLiteral",
																"src": "13777:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "13764:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "13764:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "13828:611:7",
																		"nodeType": "YulBlock",
																		"src": "13828:611:7",
																		"statements": [
																			{
																				"nativeSrc": "13842:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13842:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "13861:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "13861:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "13873:4:7",
																									"nodeType": "YulLiteral",
																									"src": "13873:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "13869:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "13869:3:7"
																							},
																							"nativeSrc": "13869:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "13869:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "13857:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "13857:3:7"
																					},
																					"nativeSrc": "13857:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "13857:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "13846:7:7",
																						"nodeType": "YulTypedName",
																						"src": "13846:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13893:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13893:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13939:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "13939:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "13907:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "13907:31:7"
																					},
																					"nativeSrc": "13907:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "13907:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "13897:6:7",
																						"nodeType": "YulTypedName",
																						"src": "13897:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13957:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13957:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13966:1:7",
																					"nodeType": "YulLiteral",
																					"src": "13966:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "13961:1:7",
																						"nodeType": "YulTypedName",
																						"src": "13961:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "14025:163:7",
																					"nodeType": "YulBlock",
																					"src": "14025:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "14050:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "14050:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "14068:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "14068:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "14073:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "14073:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "14064:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "14064:3:7"
																												},
																												"nativeSrc": "14064:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "14064:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "14058:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "14058:5:7"
																										},
																										"nativeSrc": "14058:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "14058:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "14043:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "14043:6:7"
																								},
																								"nativeSrc": "14043:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "14043:42:7"
																							},
																							"nativeSrc": "14043:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "14043:42:7"
																						},
																						{
																							"nativeSrc": "14102:24:7",
																							"nodeType": "YulAssignment",
																							"src": "14102:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "14116:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "14116:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "14124:1:7",
																										"nodeType": "YulLiteral",
																										"src": "14124:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "14112:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "14112:3:7"
																								},
																								"nativeSrc": "14112:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "14112:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "14102:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "14102:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "14143:31:7",
																							"nodeType": "YulAssignment",
																							"src": "14143:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "14160:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "14160:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "14171:2:7",
																										"nodeType": "YulLiteral",
																										"src": "14171:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "14156:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "14156:3:7"
																								},
																								"nativeSrc": "14156:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "14156:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "14143:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "14143:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "13991:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "13991:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "13994:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "13994:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13988:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "13988:2:7"
																					},
																					"nativeSrc": "13988:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "13988:14:7"
																				},
																				"nativeSrc": "13980:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "14003:21:7",
																					"nodeType": "YulBlock",
																					"src": "14003:21:7",
																					"statements": [
																						{
																							"nativeSrc": "14005:17:7",
																							"nodeType": "YulAssignment",
																							"src": "14005:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "14014:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "14014:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "14017:4:7",
																										"nodeType": "YulLiteral",
																										"src": "14017:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "14010:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "14010:3:7"
																								},
																								"nativeSrc": "14010:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "14010:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "14005:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "14005:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "13984:3:7",
																					"nodeType": "YulBlock",
																					"src": "13984:3:7",
																					"statements": []
																				},
																				"src": "13980:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "14224:156:7",
																					"nodeType": "YulBlock",
																					"src": "14224:156:7",
																					"statements": [
																						{
																							"nativeSrc": "14242:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "14242:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "14269:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "14269:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "14274:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "14274:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "14265:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "14265:3:7"
																										},
																										"nativeSrc": "14265:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "14265:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "14259:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "14259:5:7"
																								},
																								"nativeSrc": "14259:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "14259:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "14246:9:7",
																									"nodeType": "YulTypedName",
																									"src": "14246:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "14309:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "14309:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "14336:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "14336:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "14351:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "14351:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "14359:4:7",
																														"nodeType": "YulLiteral",
																														"src": "14359:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "14347:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "14347:3:7"
																												},
																												"nativeSrc": "14347:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "14347:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "14317:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "14317:18:7"
																										},
																										"nativeSrc": "14317:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "14317:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "14302:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "14302:6:7"
																								},
																								"nativeSrc": "14302:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "14302:64:7"
																							},
																							"nativeSrc": "14302:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "14302:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "14207:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "14207:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "14216:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "14216:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "14204:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "14204:2:7"
																					},
																					"nativeSrc": "14204:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "14204:19:7"
																				},
																				"nativeSrc": "14201:179:7",
																				"nodeType": "YulIf",
																				"src": "14201:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "14400:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "14400:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "14414:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "14414:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "14422:1:7",
																											"nodeType": "YulLiteral",
																											"src": "14422:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "14410:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "14410:3:7"
																									},
																									"nativeSrc": "14410:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "14410:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "14426:1:7",
																									"nodeType": "YulLiteral",
																									"src": "14426:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "14406:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "14406:3:7"
																							},
																							"nativeSrc": "14406:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "14406:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "14393:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "14393:6:7"
																					},
																					"nativeSrc": "14393:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "14393:36:7"
																				},
																				"nativeSrc": "14393:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "14393:36:7"
																			}
																		]
																	},
																	"nativeSrc": "13821:618:7",
																	"nodeType": "YulCase",
																	"src": "13821:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13826:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13826:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "14456:222:7",
																		"nodeType": "YulBlock",
																		"src": "14456:222:7",
																		"statements": [
																			{
																				"nativeSrc": "14470:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "14470:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "14483:1:7",
																					"nodeType": "YulLiteral",
																					"src": "14483:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "14474:5:7",
																						"nodeType": "YulTypedName",
																						"src": "14474:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "14507:67:7",
																					"nodeType": "YulBlock",
																					"src": "14507:67:7",
																					"statements": [
																						{
																							"nativeSrc": "14525:35:7",
																							"nodeType": "YulAssignment",
																							"src": "14525:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "14544:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "14544:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "14549:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "14549:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "14540:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "14540:3:7"
																										},
																										"nativeSrc": "14540:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "14540:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "14534:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "14534:5:7"
																								},
																								"nativeSrc": "14534:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "14534:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "14525:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "14525:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "14500:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "14500:6:7"
																				},
																				"nativeSrc": "14497:77:7",
																				"nodeType": "YulIf",
																				"src": "14497:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "14594:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "14594:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "14653:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "14653:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "14660:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "14660:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "14600:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "14600:52:7"
																							},
																							"nativeSrc": "14600:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "14600:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "14587:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "14587:6:7"
																					},
																					"nativeSrc": "14587:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "14587:81:7"
																				},
																				"nativeSrc": "14587:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "14587:81:7"
																			}
																		]
																	},
																	"nativeSrc": "14448:230:7",
																	"nodeType": "YulCase",
																	"src": "14448:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "13801:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13801:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13809:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13809:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13798:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "13798:2:7"
																},
																"nativeSrc": "13798:14:7",
																"nodeType": "YulFunctionCall",
																"src": "13798:14:7"
															},
															"nativeSrc": "13791:887:7",
															"nodeType": "YulSwitch",
															"src": "13791:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "13289:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "13370:4:7",
														"nodeType": "YulTypedName",
														"src": "13370:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "13376:3:7",
														"nodeType": "YulTypedName",
														"src": "13376:3:7",
														"type": ""
													}
												],
												"src": "13289:1395:7"
											},
											{
												"body": {
													"nativeSrc": "14796:56:7",
													"nodeType": "YulBlock",
													"src": "14796:56:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14818:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14818:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14826:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14826:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14814:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14814:3:7"
																		},
																		"nativeSrc": "14814:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14814:14:7"
																	},
																	{
																		"hexValue": "5a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "14830:14:7",
																		"nodeType": "YulLiteral",
																		"src": "14830:14:7",
																		"type": "",
																		"value": "Zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14807:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14807:6:7"
																},
																"nativeSrc": "14807:38:7",
																"nodeType": "YulFunctionCall",
																"src": "14807:38:7"
															},
															"nativeSrc": "14807:38:7",
															"nodeType": "YulExpressionStatement",
															"src": "14807:38:7"
														}
													]
												},
												"name": "store_literal_in_memory_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833",
												"nativeSrc": "14690:162:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14788:6:7",
														"nodeType": "YulTypedName",
														"src": "14788:6:7",
														"type": ""
													}
												],
												"src": "14690:162:7"
											},
											{
												"body": {
													"nativeSrc": "15004:220:7",
													"nodeType": "YulBlock",
													"src": "15004:220:7",
													"statements": [
														{
															"nativeSrc": "15014:74:7",
															"nodeType": "YulAssignment",
															"src": "15014:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15080:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15080:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15085:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15085:2:7",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15021:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "15021:58:7"
																},
																"nativeSrc": "15021:67:7",
																"nodeType": "YulFunctionCall",
																"src": "15021:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15014:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15014:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15186:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15186:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833",
																	"nativeSrc": "15097:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "15097:88:7"
																},
																"nativeSrc": "15097:93:7",
																"nodeType": "YulFunctionCall",
																"src": "15097:93:7"
															},
															"nativeSrc": "15097:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "15097:93:7"
														},
														{
															"nativeSrc": "15199:19:7",
															"nodeType": "YulAssignment",
															"src": "15199:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15210:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15210:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15215:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15215:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15206:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15206:3:7"
																},
																"nativeSrc": "15206:12:7",
																"nodeType": "YulFunctionCall",
																"src": "15206:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15199:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15199:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14858:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14992:3:7",
														"nodeType": "YulTypedName",
														"src": "14992:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15000:3:7",
														"nodeType": "YulTypedName",
														"src": "15000:3:7",
														"type": ""
													}
												],
												"src": "14858:366:7"
											},
											{
												"body": {
													"nativeSrc": "15401:248:7",
													"nodeType": "YulBlock",
													"src": "15401:248:7",
													"statements": [
														{
															"nativeSrc": "15411:26:7",
															"nodeType": "YulAssignment",
															"src": "15411:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15423:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15423:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15434:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15434:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15419:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15419:3:7"
																},
																"nativeSrc": "15419:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15419:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15411:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15411:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15458:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15458:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15469:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15469:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15454:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15454:3:7"
																		},
																		"nativeSrc": "15454:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15454:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15477:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "15477:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15483:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15483:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15473:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15473:3:7"
																		},
																		"nativeSrc": "15473:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15473:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15447:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15447:6:7"
																},
																"nativeSrc": "15447:47:7",
																"nodeType": "YulFunctionCall",
																"src": "15447:47:7"
															},
															"nativeSrc": "15447:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "15447:47:7"
														},
														{
															"nativeSrc": "15503:139:7",
															"nodeType": "YulAssignment",
															"src": "15503:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15637:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15637:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15511:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "15511:124:7"
																},
																"nativeSrc": "15511:131:7",
																"nodeType": "YulFunctionCall",
																"src": "15511:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15503:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15503:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15230:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15381:9:7",
														"nodeType": "YulTypedName",
														"src": "15381:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15396:4:7",
														"nodeType": "YulTypedName",
														"src": "15396:4:7",
														"type": ""
													}
												],
												"src": "15230:419:7"
											},
											{
												"body": {
													"nativeSrc": "15761:55:7",
													"nodeType": "YulBlock",
													"src": "15761:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15783:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "15783:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15791:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15791:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15779:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15779:3:7"
																		},
																		"nativeSrc": "15779:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15779:14:7"
																	},
																	{
																		"hexValue": "5a65726f20616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "15795:13:7",
																		"nodeType": "YulLiteral",
																		"src": "15795:13:7",
																		"type": "",
																		"value": "Zero amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15772:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15772:6:7"
																},
																"nativeSrc": "15772:37:7",
																"nodeType": "YulFunctionCall",
																"src": "15772:37:7"
															},
															"nativeSrc": "15772:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "15772:37:7"
														}
													]
												},
												"name": "store_literal_in_memory_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
												"nativeSrc": "15655:161:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15753:6:7",
														"nodeType": "YulTypedName",
														"src": "15753:6:7",
														"type": ""
													}
												],
												"src": "15655:161:7"
											},
											{
												"body": {
													"nativeSrc": "15968:220:7",
													"nodeType": "YulBlock",
													"src": "15968:220:7",
													"statements": [
														{
															"nativeSrc": "15978:74:7",
															"nodeType": "YulAssignment",
															"src": "15978:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16044:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16044:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16049:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16049:2:7",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15985:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "15985:58:7"
																},
																"nativeSrc": "15985:67:7",
																"nodeType": "YulFunctionCall",
																"src": "15985:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15978:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15978:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16150:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16150:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																	"nativeSrc": "16061:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "16061:88:7"
																},
																"nativeSrc": "16061:93:7",
																"nodeType": "YulFunctionCall",
																"src": "16061:93:7"
															},
															"nativeSrc": "16061:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "16061:93:7"
														},
														{
															"nativeSrc": "16163:19:7",
															"nodeType": "YulAssignment",
															"src": "16163:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16174:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16174:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16179:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16179:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16170:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16170:3:7"
																},
																"nativeSrc": "16170:12:7",
																"nodeType": "YulFunctionCall",
																"src": "16170:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16163:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16163:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15822:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15956:3:7",
														"nodeType": "YulTypedName",
														"src": "15956:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15964:3:7",
														"nodeType": "YulTypedName",
														"src": "15964:3:7",
														"type": ""
													}
												],
												"src": "15822:366:7"
											},
											{
												"body": {
													"nativeSrc": "16365:248:7",
													"nodeType": "YulBlock",
													"src": "16365:248:7",
													"statements": [
														{
															"nativeSrc": "16375:26:7",
															"nodeType": "YulAssignment",
															"src": "16375:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16387:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16387:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16398:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16398:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16383:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16383:3:7"
																},
																"nativeSrc": "16383:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16383:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16375:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16375:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16422:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16422:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16433:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16433:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16418:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16418:3:7"
																		},
																		"nativeSrc": "16418:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16418:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16441:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "16441:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16447:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16447:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16437:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16437:3:7"
																		},
																		"nativeSrc": "16437:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16437:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16411:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16411:6:7"
																},
																"nativeSrc": "16411:47:7",
																"nodeType": "YulFunctionCall",
																"src": "16411:47:7"
															},
															"nativeSrc": "16411:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "16411:47:7"
														},
														{
															"nativeSrc": "16467:139:7",
															"nodeType": "YulAssignment",
															"src": "16467:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16601:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16601:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16475:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "16475:124:7"
																},
																"nativeSrc": "16475:131:7",
																"nodeType": "YulFunctionCall",
																"src": "16475:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16467:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16467:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16194:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16345:9:7",
														"nodeType": "YulTypedName",
														"src": "16345:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16360:4:7",
														"nodeType": "YulTypedName",
														"src": "16360:4:7",
														"type": ""
													}
												],
												"src": "16194:419:7"
											},
											{
												"body": {
													"nativeSrc": "16773:288:7",
													"nodeType": "YulBlock",
													"src": "16773:288:7",
													"statements": [
														{
															"nativeSrc": "16783:26:7",
															"nodeType": "YulAssignment",
															"src": "16783:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16795:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16795:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16806:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16806:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16791:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16791:3:7"
																},
																"nativeSrc": "16791:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16791:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16783:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16783:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16863:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16863:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16876:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16876:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16887:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16887:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16872:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16872:3:7"
																		},
																		"nativeSrc": "16872:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16872:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16819:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "16819:43:7"
																},
																"nativeSrc": "16819:71:7",
																"nodeType": "YulFunctionCall",
																"src": "16819:71:7"
															},
															"nativeSrc": "16819:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "16819:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16944:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16944:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16957:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16957:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16968:2:7",
																				"nodeType": "YulLiteral",
																				"src": "16968:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16953:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16953:3:7"
																		},
																		"nativeSrc": "16953:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16953:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16900:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "16900:43:7"
																},
																"nativeSrc": "16900:72:7",
																"nodeType": "YulFunctionCall",
																"src": "16900:72:7"
															},
															"nativeSrc": "16900:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "16900:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17026:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17026:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17039:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17039:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17050:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17050:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17035:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17035:3:7"
																		},
																		"nativeSrc": "17035:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17035:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16982:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "16982:43:7"
																},
																"nativeSrc": "16982:72:7",
																"nodeType": "YulFunctionCall",
																"src": "16982:72:7"
															},
															"nativeSrc": "16982:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "16982:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16619:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16729:9:7",
														"nodeType": "YulTypedName",
														"src": "16729:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16741:6:7",
														"nodeType": "YulTypedName",
														"src": "16741:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16749:6:7",
														"nodeType": "YulTypedName",
														"src": "16749:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16757:6:7",
														"nodeType": "YulTypedName",
														"src": "16757:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16768:4:7",
														"nodeType": "YulTypedName",
														"src": "16768:4:7",
														"type": ""
													}
												],
												"src": "16619:442:7"
											},
											{
												"body": {
													"nativeSrc": "17095:152:7",
													"nodeType": "YulBlock",
													"src": "17095:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17112:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17112:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17115:77:7",
																		"nodeType": "YulLiteral",
																		"src": "17115:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17105:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17105:6:7"
																},
																"nativeSrc": "17105:88:7",
																"nodeType": "YulFunctionCall",
																"src": "17105:88:7"
															},
															"nativeSrc": "17105:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "17105:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17209:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17209:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17212:4:7",
																		"nodeType": "YulLiteral",
																		"src": "17212:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17202:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17202:6:7"
																},
																"nativeSrc": "17202:15:7",
																"nodeType": "YulFunctionCall",
																"src": "17202:15:7"
															},
															"nativeSrc": "17202:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "17202:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17233:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17233:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17236:4:7",
																		"nodeType": "YulLiteral",
																		"src": "17236:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17226:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17226:6:7"
																},
																"nativeSrc": "17226:15:7",
																"nodeType": "YulFunctionCall",
																"src": "17226:15:7"
															},
															"nativeSrc": "17226:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "17226:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "17067:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "17067:180:7"
											},
											{
												"body": {
													"nativeSrc": "17297:147:7",
													"nodeType": "YulBlock",
													"src": "17297:147:7",
													"statements": [
														{
															"nativeSrc": "17307:25:7",
															"nodeType": "YulAssignment",
															"src": "17307:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17330:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17330:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17312:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "17312:17:7"
																},
																"nativeSrc": "17312:20:7",
																"nodeType": "YulFunctionCall",
																"src": "17312:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17307:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "17307:1:7"
																}
															]
														},
														{
															"nativeSrc": "17341:25:7",
															"nodeType": "YulAssignment",
															"src": "17341:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17364:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17364:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17346:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "17346:17:7"
																},
																"nativeSrc": "17346:20:7",
																"nodeType": "YulFunctionCall",
																"src": "17346:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17341:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "17341:1:7"
																}
															]
														},
														{
															"nativeSrc": "17375:16:7",
															"nodeType": "YulAssignment",
															"src": "17375:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17386:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17386:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17389:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17389:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17382:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17382:3:7"
																},
																"nativeSrc": "17382:9:7",
																"nodeType": "YulFunctionCall",
																"src": "17382:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "17375:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17375:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17415:22:7",
																"nodeType": "YulBlock",
																"src": "17415:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17417:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "17417:16:7"
																			},
																			"nativeSrc": "17417:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17417:18:7"
																		},
																		"nativeSrc": "17417:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "17417:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17407:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17407:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "17410:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17410:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17404:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17404:2:7"
																},
																"nativeSrc": "17404:10:7",
																"nodeType": "YulFunctionCall",
																"src": "17404:10:7"
															},
															"nativeSrc": "17401:36:7",
															"nodeType": "YulIf",
															"src": "17401:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "17253:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17284:1:7",
														"nodeType": "YulTypedName",
														"src": "17284:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17287:1:7",
														"nodeType": "YulTypedName",
														"src": "17287:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "17293:3:7",
														"nodeType": "YulTypedName",
														"src": "17293:3:7",
														"type": ""
													}
												],
												"src": "17253:191:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Empty URI\")\n\n    }\n\n    function abi_encode_t_stringliteral_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833(memPtr) {\n\n        mstore(add(memPtr, 0), \"Zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Zero amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fe575f3560e01c806342966c681161009557806395d89b411161006457806395d89b4114610286578063a9059cbb146102a4578063dd62ed3e146102d4578063f2fde38b14610304576100fe565b806342966c681461021257806370a082311461022e578063715018a61461025e5780638da5cb5b14610268576100fe565b806318160ddd116100d157806318160ddd1461018a57806323b872dd146101a8578063313ce567146101d857806340c10f19146101f6576100fe565b806304787ca21461010257806306fdde031461011e578063095ea7b31461013c578063135d088d1461016c575b5f80fd5b61011c60048036038101906101179190611160565b610320565b005b61012661037e565b6040516101339190611207565b60405180910390f35b610156600480360381019061015191906112b4565b61040e565b604051610163919061130c565b60405180910390f35b610174610430565b6040516101819190611207565b60405180910390f35b6101926104bc565b60405161019f9190611334565b60405180910390f35b6101c260048036038101906101bd919061134d565b6104c5565b6040516101cf919061130c565b60405180910390f35b6101e06104f3565b6040516101ed91906113b8565b60405180910390f35b610210600480360381019061020b91906112b4565b6104fb565b005b61022c600480360381019061022791906113d1565b6105c1565b005b610248600480360381019061024391906113fc565b610610565b6040516102559190611334565b60405180910390f35b610266610655565b005b610270610668565b60405161027d9190611436565b60405180910390f35b61028e610690565b60405161029b9190611207565b60405180910390f35b6102be60048036038101906102b991906112b4565b610720565b6040516102cb919061130c565b60405180910390f35b6102ee60048036038101906102e9919061144f565b610742565b6040516102fb9190611334565b60405180910390f35b61031e600480360381019061031991906113fc565b6107c4565b005b610328610848565b5f81510361036b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610362906114d7565b60405180910390fd5b806006908161037a91906116ef565b5050565b60606003805461038d90611522565b80601f01602080910402602001604051908101604052809291908181526020018280546103b990611522565b80156104045780601f106103db57610100808354040283529160200191610404565b820191905f5260205f20905b8154815290600101906020018083116103e757829003601f168201915b5050505050905090565b5f806104186108cf565b90506104258185856108d6565b600191505092915050565b6006805461043d90611522565b80601f016020809104026020016040519081016040528092919081815260200182805461046990611522565b80156104b45780601f1061048b576101008083540402835291602001916104b4565b820191905f5260205f20905b81548152906001019060200180831161049757829003601f168201915b505050505081565b5f600254905090565b5f806104cf6108cf565b90506104dc8582856108e8565b6104e785858561097a565b60019150509392505050565b5f6012905090565b610503610848565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610571576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056890611808565b60405180910390fd5b5f81036105b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105aa90611870565b60405180910390fd5b6105bd8282610a6a565b5050565b5f8103610603576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fa90611870565b60405180910390fd5b61060d3382610ae9565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61065d610848565b6106665f610b68565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461069f90611522565b80601f01602080910402602001604051908101604052809291908181526020018280546106cb90611522565b80156107165780601f106106ed57610100808354040283529160200191610716565b820191905f5260205f20905b8154815290600101906020018083116106f957829003601f168201915b5050505050905090565b5f8061072a6108cf565b905061073781858561097a565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6107cc610848565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361083c575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108339190611436565b60405180910390fd5b61084581610b68565b50565b6108506108cf565b73ffffffffffffffffffffffffffffffffffffffff1661086e610668565b73ffffffffffffffffffffffffffffffffffffffff16146108cd576108916108cf565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108c49190611436565b60405180910390fd5b565b5f33905090565b6108e38383836001610c2b565b505050565b5f6108f38484610742565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109745781811015610965578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161095c9392919061188e565b60405180910390fd5b61097384848484035f610c2b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109ea575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109e19190611436565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a5a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a519190611436565b60405180910390fd5b610a65838383610dfa565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ada575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ad19190611436565b60405180910390fd5b610ae55f8383610dfa565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b59575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b509190611436565b60405180910390fd5b610b64825f83610dfa565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c9b575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c929190611436565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d0b575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d029190611436565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610df4578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610deb9190611334565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e4a578060025f828254610e3e91906118f0565b92505081905550610f18565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610ed3578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610eca9392919061188e565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f5f578060025f8282540392505081905550610fa9565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110069190611334565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6110728261102c565b810181811067ffffffffffffffff821117156110915761109061103c565b5b80604052505050565b5f6110a3611013565b90506110af8282611069565b919050565b5f67ffffffffffffffff8211156110ce576110cd61103c565b5b6110d78261102c565b9050602081019050919050565b828183375f83830152505050565b5f6111046110ff846110b4565b61109a565b9050828152602081018484840111156111205761111f611028565b5b61112b8482856110e4565b509392505050565b5f82601f83011261114757611146611024565b5b81356111578482602086016110f2565b91505092915050565b5f602082840312156111755761117461101c565b5b5f82013567ffffffffffffffff81111561119257611191611020565b5b61119e84828501611133565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f6111d9826111a7565b6111e381856111b1565b93506111f38185602086016111c1565b6111fc8161102c565b840191505092915050565b5f6020820190508181035f83015261121f81846111cf565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61125082611227565b9050919050565b61126081611246565b811461126a575f80fd5b50565b5f8135905061127b81611257565b92915050565b5f819050919050565b61129381611281565b811461129d575f80fd5b50565b5f813590506112ae8161128a565b92915050565b5f80604083850312156112ca576112c961101c565b5b5f6112d78582860161126d565b92505060206112e8858286016112a0565b9150509250929050565b5f8115159050919050565b611306816112f2565b82525050565b5f60208201905061131f5f8301846112fd565b92915050565b61132e81611281565b82525050565b5f6020820190506113475f830184611325565b92915050565b5f805f606084860312156113645761136361101c565b5b5f6113718682870161126d565b93505060206113828682870161126d565b9250506040611393868287016112a0565b9150509250925092565b5f60ff82169050919050565b6113b28161139d565b82525050565b5f6020820190506113cb5f8301846113a9565b92915050565b5f602082840312156113e6576113e561101c565b5b5f6113f3848285016112a0565b91505092915050565b5f602082840312156114115761141061101c565b5b5f61141e8482850161126d565b91505092915050565b61143081611246565b82525050565b5f6020820190506114495f830184611427565b92915050565b5f80604083850312156114655761146461101c565b5b5f6114728582860161126d565b92505060206114838582860161126d565b9150509250929050565b7f456d7074792055524900000000000000000000000000000000000000000000005f82015250565b5f6114c16009836111b1565b91506114cc8261148d565b602082019050919050565b5f6020820190508181035f8301526114ee816114b5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061153957607f821691505b60208210810361154c5761154b6114f5565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026115ae7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611573565b6115b88683611573565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6115f36115ee6115e984611281565b6115d0565b611281565b9050919050565b5f819050919050565b61160c836115d9565b611620611618826115fa565b84845461157f565b825550505050565b5f90565b611634611628565b61163f818484611603565b505050565b5b81811015611662576116575f8261162c565b600181019050611645565b5050565b601f8211156116a75761167881611552565b61168184611564565b81016020851015611690578190505b6116a461169c85611564565b830182611644565b50505b505050565b5f82821c905092915050565b5f6116c75f19846008026116ac565b1980831691505092915050565b5f6116df83836116b8565b9150826002028217905092915050565b6116f8826111a7565b67ffffffffffffffff8111156117115761171061103c565b5b61171b8254611522565b611726828285611666565b5f60209050601f831160018114611757575f8415611745578287015190505b61174f85826116d4565b8655506117b6565b601f19841661176586611552565b5f5b8281101561178c57848901518255600182019150602085019450602081019050611767565b868310156117a957848901516117a5601f8916826116b8565b8355505b6001600288020188555050505b505050505050565b7f5a65726f206164647265737300000000000000000000000000000000000000005f82015250565b5f6117f2600c836111b1565b91506117fd826117be565b602082019050919050565b5f6020820190508181035f83015261181f816117e6565b9050919050565b7f5a65726f20616d6f756e740000000000000000000000000000000000000000005f82015250565b5f61185a600b836111b1565b915061186582611826565b602082019050919050565b5f6020820190508181035f8301526118878161184e565b9050919050565b5f6060820190506118a15f830186611427565b6118ae6020830185611325565b6118bb6040830184611325565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118fa82611281565b915061190583611281565b925082820190508082111561191d5761191c6118c3565b5b9291505056fea2646970667358221220dc45e9799e0210e85c11ec734e1240075e8e86c10eaacd18850f688779bf7eaf64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x304 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x268 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1F6 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x4787CA2 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x135D088D EQ PUSH2 0x16C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST PUSH2 0x320 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x126 PUSH2 0x37E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x130C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x134D JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x130C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH2 0x4FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH2 0x655 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x270 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0x690 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x130C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x742 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x1334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x7C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x328 PUSH2 0x848 JUMP JUMPDEST PUSH0 DUP2 MLOAD SUB PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x362 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 SWAP1 DUP2 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x16EF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x38D SWAP1 PUSH2 0x1522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B9 SWAP1 PUSH2 0x1522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x404 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x404 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x418 PUSH2 0x8CF JUMP JUMPDEST SWAP1 POP PUSH2 0x425 DUP2 DUP6 DUP6 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x43D SWAP1 PUSH2 0x1522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x1522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x497 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4CF PUSH2 0x8CF JUMP JUMPDEST SWAP1 POP PUSH2 0x4DC DUP6 DUP3 DUP6 PUSH2 0x8E8 JUMP JUMPDEST PUSH2 0x4E7 DUP6 DUP6 DUP6 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x503 PUSH2 0x848 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x568 SWAP1 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AA SWAP1 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BD DUP3 DUP3 PUSH2 0xA6A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FA SWAP1 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60D CALLER DUP3 PUSH2 0xAE9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65D PUSH2 0x848 JUMP JUMPDEST PUSH2 0x666 PUSH0 PUSH2 0xB68 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x69F SWAP1 PUSH2 0x1522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6CB SWAP1 PUSH2 0x1522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x716 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x716 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x72A PUSH2 0x8CF JUMP JUMPDEST SWAP1 POP PUSH2 0x737 DUP2 DUP6 DUP6 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7CC PUSH2 0x848 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x83C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x833 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x845 DUP2 PUSH2 0xB68 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x850 PUSH2 0x8CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x86E PUSH2 0x668 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8CD JUMPI PUSH2 0x891 PUSH2 0x8CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8E3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC2B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8F3 DUP5 DUP5 PUSH2 0x742 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x974 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x965 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x188E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x973 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xC2B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E1 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA5A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA51 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA65 DUP4 DUP4 DUP4 PUSH2 0xDFA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xADA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD1 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE5 PUSH0 DUP4 DUP4 PUSH2 0xDFA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB59 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB64 DUP3 PUSH0 DUP4 PUSH2 0xDFA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC92 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD0B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD02 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDF4 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDEB SWAP2 SWAP1 PUSH2 0x1334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE4A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE3E SWAP2 SWAP1 PUSH2 0x18F0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF18 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xED3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x188E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF5F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xFA9 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1006 SWAP2 SWAP1 PUSH2 0x1334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1072 DUP3 PUSH2 0x102C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1091 JUMPI PUSH2 0x1090 PUSH2 0x103C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10A3 PUSH2 0x1013 JUMP JUMPDEST SWAP1 POP PUSH2 0x10AF DUP3 DUP3 PUSH2 0x1069 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x10CE JUMPI PUSH2 0x10CD PUSH2 0x103C JUMP JUMPDEST JUMPDEST PUSH2 0x10D7 DUP3 PUSH2 0x102C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1104 PUSH2 0x10FF DUP5 PUSH2 0x10B4 JUMP JUMPDEST PUSH2 0x109A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1120 JUMPI PUSH2 0x111F PUSH2 0x1028 JUMP JUMPDEST JUMPDEST PUSH2 0x112B DUP5 DUP3 DUP6 PUSH2 0x10E4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1147 JUMPI PUSH2 0x1146 PUSH2 0x1024 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1157 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x10F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1175 JUMPI PUSH2 0x1174 PUSH2 0x101C JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1192 JUMPI PUSH2 0x1191 PUSH2 0x1020 JUMP JUMPDEST JUMPDEST PUSH2 0x119E DUP5 DUP3 DUP6 ADD PUSH2 0x1133 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11D9 DUP3 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0x11E3 DUP2 DUP6 PUSH2 0x11B1 JUMP JUMPDEST SWAP4 POP PUSH2 0x11F3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11C1 JUMP JUMPDEST PUSH2 0x11FC DUP2 PUSH2 0x102C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x121F DUP2 DUP5 PUSH2 0x11CF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1250 DUP3 PUSH2 0x1227 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1260 DUP2 PUSH2 0x1246 JUMP JUMPDEST DUP2 EQ PUSH2 0x126A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x127B DUP2 PUSH2 0x1257 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1293 DUP2 PUSH2 0x1281 JUMP JUMPDEST DUP2 EQ PUSH2 0x129D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12AE DUP2 PUSH2 0x128A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12CA JUMPI PUSH2 0x12C9 PUSH2 0x101C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12D7 DUP6 DUP3 DUP7 ADD PUSH2 0x126D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12E8 DUP6 DUP3 DUP7 ADD PUSH2 0x12A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1306 DUP2 PUSH2 0x12F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x131F PUSH0 DUP4 ADD DUP5 PUSH2 0x12FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x132E DUP2 PUSH2 0x1281 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1347 PUSH0 DUP4 ADD DUP5 PUSH2 0x1325 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1364 JUMPI PUSH2 0x1363 PUSH2 0x101C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1371 DUP7 DUP3 DUP8 ADD PUSH2 0x126D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1382 DUP7 DUP3 DUP8 ADD PUSH2 0x126D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1393 DUP7 DUP3 DUP8 ADD PUSH2 0x12A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B2 DUP2 PUSH2 0x139D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13CB PUSH0 DUP4 ADD DUP5 PUSH2 0x13A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E6 JUMPI PUSH2 0x13E5 PUSH2 0x101C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13F3 DUP5 DUP3 DUP6 ADD PUSH2 0x12A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1411 JUMPI PUSH2 0x1410 PUSH2 0x101C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x141E DUP5 DUP3 DUP6 ADD PUSH2 0x126D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1430 DUP2 PUSH2 0x1246 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1449 PUSH0 DUP4 ADD DUP5 PUSH2 0x1427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1465 JUMPI PUSH2 0x1464 PUSH2 0x101C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1472 DUP6 DUP3 DUP7 ADD PUSH2 0x126D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1483 DUP6 DUP3 DUP7 ADD PUSH2 0x126D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x456D707479205552490000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14C1 PUSH1 0x9 DUP4 PUSH2 0x11B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x14CC DUP3 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14EE DUP2 PUSH2 0x14B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1539 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x154C JUMPI PUSH2 0x154B PUSH2 0x14F5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x15AE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x15B8 DUP7 DUP4 PUSH2 0x1573 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15F3 PUSH2 0x15EE PUSH2 0x15E9 DUP5 PUSH2 0x1281 JUMP JUMPDEST PUSH2 0x15D0 JUMP JUMPDEST PUSH2 0x1281 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x160C DUP4 PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0x1620 PUSH2 0x1618 DUP3 PUSH2 0x15FA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x157F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1634 PUSH2 0x1628 JUMP JUMPDEST PUSH2 0x163F DUP2 DUP5 DUP5 PUSH2 0x1603 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1662 JUMPI PUSH2 0x1657 PUSH0 DUP3 PUSH2 0x162C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1645 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x16A7 JUMPI PUSH2 0x1678 DUP2 PUSH2 0x1552 JUMP JUMPDEST PUSH2 0x1681 DUP5 PUSH2 0x1564 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1690 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x16A4 PUSH2 0x169C DUP6 PUSH2 0x1564 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1644 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16C7 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x16AC JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16DF DUP4 DUP4 PUSH2 0x16B8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16F8 DUP3 PUSH2 0x11A7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1711 JUMPI PUSH2 0x1710 PUSH2 0x103C JUMP JUMPDEST JUMPDEST PUSH2 0x171B DUP3 SLOAD PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x1726 DUP3 DUP3 DUP6 PUSH2 0x1666 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1757 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1745 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x174F DUP6 DUP3 PUSH2 0x16D4 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x17B6 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1765 DUP7 PUSH2 0x1552 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x178C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1767 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x17A9 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x17A5 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x16B8 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5A65726F20616464726573730000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17F2 PUSH1 0xC DUP4 PUSH2 0x11B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x17FD DUP3 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x181F DUP2 PUSH2 0x17E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5A65726F20616D6F756E74000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x185A PUSH1 0xB DUP4 PUSH2 0x11B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1865 DUP3 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1887 DUP2 PUSH2 0x184E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18A1 PUSH0 DUP4 ADD DUP7 PUSH2 0x1427 JUMP JUMPDEST PUSH2 0x18AE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1325 JUMP JUMPDEST PUSH2 0x18BB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1325 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18FA DUP3 PUSH2 0x1281 JUMP JUMPDEST SWAP2 POP PUSH2 0x1905 DUP4 PUSH2 0x1281 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x191D JUMPI PUSH2 0x191C PUSH2 0x18C3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC GASLIMIT 0xE9 PUSH26 0x9E0210E85C11EC734E1240075E8E86C10EAACD18850F688779BF PUSH31 0xAF64736F6C634300081A003300000000000000000000000000000000000000 ",
							"sourceMap": "329:2050:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2202:174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;476:22:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1525:201:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1906:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2202:174:6;1531:13:0;:11;:13::i;:::-;2313:1:6::1;2290:11;2284:25;:30:::0;2280:55:::1;;2316:19;;;;;;;;;;:::i;:::-;;;;;;;;2280:55;2357:11;2346:8;:22;;;;;;:::i;:::-;;2202:174:::0;:::o;1779:89:2:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;476:22:6:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2849:97:2:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;1525:201:6:-;1531:13:0;:11;:13::i;:::-;1615:1:6::1;1601:16;;:2;:16;;::::0;1597:44:::1;;1619:22;;;;;;;;;;:::i;:::-;;;;;;;;1597:44;1666:1;1656:6;:11:::0;1652:38:::1;;1669:21;;;;;;;;;;:::i;:::-;;;;;;;;1652:38;1701:17;1707:2;1711:6;1701:5;:17::i;:::-;1525:201:::0;;:::o;1906:132::-;1970:1;1960:6;:11;1956:38;;1973:21;;;;;;;;;;:::i;:::-;;;;;;;;1956:38;2005:25;2011:10;2023:6;2005:5;:25::i;:::-;1906:132;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9701:432:2:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:148::-;1708:6;1703:3;1698;1685:30;1749:1;1740:6;1735:3;1731:16;1724:27;1610:148;;;:::o;1764:425::-;1842:5;1867:66;1883:49;1925:6;1883:49;:::i;:::-;1867:66;:::i;:::-;1858:75;;1956:6;1949:5;1942:21;1994:4;1987:5;1983:16;2032:3;2023:6;2018:3;2014:16;2011:25;2008:112;;;2039:79;;:::i;:::-;2008:112;2129:54;2176:6;2171:3;2166;2129:54;:::i;:::-;1848:341;1764:425;;;;;:::o;2209:340::-;2265:5;2314:3;2307:4;2299:6;2295:17;2291:27;2281:122;;2322:79;;:::i;:::-;2281:122;2439:6;2426:20;2464:79;2539:3;2531:6;2524:4;2516:6;2512:17;2464:79;:::i;:::-;2455:88;;2271:278;2209:340;;;;:::o;2555:509::-;2624:6;2673:2;2661:9;2652:7;2648:23;2644:32;2641:119;;;2679:79;;:::i;:::-;2641:119;2827:1;2816:9;2812:17;2799:31;2857:18;2849:6;2846:30;2843:117;;;2879:79;;:::i;:::-;2843:117;2984:63;3039:7;3030:6;3019:9;3015:22;2984:63;:::i;:::-;2974:73;;2770:287;2555:509;;;;:::o;3070:99::-;3122:6;3156:5;3150:12;3140:22;;3070:99;;;:::o;3175:169::-;3259:11;3293:6;3288:3;3281:19;3333:4;3328:3;3324:14;3309:29;;3175:169;;;;:::o;3350:139::-;3439:6;3434:3;3429;3423:23;3480:1;3471:6;3466:3;3462:16;3455:27;3350:139;;;:::o;3495:377::-;3583:3;3611:39;3644:5;3611:39;:::i;:::-;3666:71;3730:6;3725:3;3666:71;:::i;:::-;3659:78;;3746:65;3804:6;3799:3;3792:4;3785:5;3781:16;3746:65;:::i;:::-;3836:29;3858:6;3836:29;:::i;:::-;3831:3;3827:39;3820:46;;3587:285;3495:377;;;;:::o;3878:313::-;3991:4;4029:2;4018:9;4014:18;4006:26;;4078:9;4072:4;4068:20;4064:1;4053:9;4049:17;4042:47;4106:78;4179:4;4170:6;4106:78;:::i;:::-;4098:86;;3878:313;;;;:::o;4197:126::-;4234:7;4274:42;4267:5;4263:54;4252:65;;4197:126;;;:::o;4329:96::-;4366:7;4395:24;4413:5;4395:24;:::i;:::-;4384:35;;4329:96;;;:::o;4431:122::-;4504:24;4522:5;4504:24;:::i;:::-;4497:5;4494:35;4484:63;;4543:1;4540;4533:12;4484:63;4431:122;:::o;4559:139::-;4605:5;4643:6;4630:20;4621:29;;4659:33;4686:5;4659:33;:::i;:::-;4559:139;;;;:::o;4704:77::-;4741:7;4770:5;4759:16;;4704:77;;;:::o;4787:122::-;4860:24;4878:5;4860:24;:::i;:::-;4853:5;4850:35;4840:63;;4899:1;4896;4889:12;4840:63;4787:122;:::o;4915:139::-;4961:5;4999:6;4986:20;4977:29;;5015:33;5042:5;5015:33;:::i;:::-;4915:139;;;;:::o;5060:474::-;5128:6;5136;5185:2;5173:9;5164:7;5160:23;5156:32;5153:119;;;5191:79;;:::i;:::-;5153:119;5311:1;5336:53;5381:7;5372:6;5361:9;5357:22;5336:53;:::i;:::-;5326:63;;5282:117;5438:2;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5409:118;5060:474;;;;;:::o;5540:90::-;5574:7;5617:5;5610:13;5603:21;5592:32;;5540:90;;;:::o;5636:109::-;5717:21;5732:5;5717:21;:::i;:::-;5712:3;5705:34;5636:109;;:::o;5751:210::-;5838:4;5876:2;5865:9;5861:18;5853:26;;5889:65;5951:1;5940:9;5936:17;5927:6;5889:65;:::i;:::-;5751:210;;;;:::o;5967:118::-;6054:24;6072:5;6054:24;:::i;:::-;6049:3;6042:37;5967:118;;:::o;6091:222::-;6184:4;6222:2;6211:9;6207:18;6199:26;;6235:71;6303:1;6292:9;6288:17;6279:6;6235:71;:::i;:::-;6091:222;;;;:::o;6319:619::-;6396:6;6404;6412;6461:2;6449:9;6440:7;6436:23;6432:32;6429:119;;;6467:79;;:::i;:::-;6429:119;6587:1;6612:53;6657:7;6648:6;6637:9;6633:22;6612:53;:::i;:::-;6602:63;;6558:117;6714:2;6740:53;6785:7;6776:6;6765:9;6761:22;6740:53;:::i;:::-;6730:63;;6685:118;6842:2;6868:53;6913:7;6904:6;6893:9;6889:22;6868:53;:::i;:::-;6858:63;;6813:118;6319:619;;;;;:::o;6944:86::-;6979:7;7019:4;7012:5;7008:16;6997:27;;6944:86;;;:::o;7036:112::-;7119:22;7135:5;7119:22;:::i;:::-;7114:3;7107:35;7036:112;;:::o;7154:214::-;7243:4;7281:2;7270:9;7266:18;7258:26;;7294:67;7358:1;7347:9;7343:17;7334:6;7294:67;:::i;:::-;7154:214;;;;:::o;7374:329::-;7433:6;7482:2;7470:9;7461:7;7457:23;7453:32;7450:119;;;7488:79;;:::i;:::-;7450:119;7608:1;7633:53;7678:7;7669:6;7658:9;7654:22;7633:53;:::i;:::-;7623:63;;7579:117;7374:329;;;;:::o;7709:::-;7768:6;7817:2;7805:9;7796:7;7792:23;7788:32;7785:119;;;7823:79;;:::i;:::-;7785:119;7943:1;7968:53;8013:7;8004:6;7993:9;7989:22;7968:53;:::i;:::-;7958:63;;7914:117;7709:329;;;;:::o;8044:118::-;8131:24;8149:5;8131:24;:::i;:::-;8126:3;8119:37;8044:118;;:::o;8168:222::-;8261:4;8299:2;8288:9;8284:18;8276:26;;8312:71;8380:1;8369:9;8365:17;8356:6;8312:71;:::i;:::-;8168:222;;;;:::o;8396:474::-;8464:6;8472;8521:2;8509:9;8500:7;8496:23;8492:32;8489:119;;;8527:79;;:::i;:::-;8489:119;8647:1;8672:53;8717:7;8708:6;8697:9;8693:22;8672:53;:::i;:::-;8662:63;;8618:117;8774:2;8800:53;8845:7;8836:6;8825:9;8821:22;8800:53;:::i;:::-;8790:63;;8745:118;8396:474;;;;;:::o;8876:159::-;9016:11;9012:1;9004:6;9000:14;8993:35;8876:159;:::o;9041:365::-;9183:3;9204:66;9268:1;9263:3;9204:66;:::i;:::-;9197:73;;9279:93;9368:3;9279:93;:::i;:::-;9397:2;9392:3;9388:12;9381:19;;9041:365;;;:::o;9412:419::-;9578:4;9616:2;9605:9;9601:18;9593:26;;9665:9;9659:4;9655:20;9651:1;9640:9;9636:17;9629:47;9693:131;9819:4;9693:131;:::i;:::-;9685:139;;9412:419;;;:::o;9837:180::-;9885:77;9882:1;9875:88;9982:4;9979:1;9972:15;10006:4;10003:1;9996:15;10023:320;10067:6;10104:1;10098:4;10094:12;10084:22;;10151:1;10145:4;10141:12;10172:18;10162:81;;10228:4;10220:6;10216:17;10206:27;;10162:81;10290:2;10282:6;10279:14;10259:18;10256:38;10253:84;;10309:18;;:::i;:::-;10253:84;10074:269;10023:320;;;:::o;10349:141::-;10398:4;10421:3;10413:11;;10444:3;10441:1;10434:14;10478:4;10475:1;10465:18;10457:26;;10349:141;;;:::o;10496:93::-;10533:6;10580:2;10575;10568:5;10564:14;10560:23;10550:33;;10496:93;;;:::o;10595:107::-;10639:8;10689:5;10683:4;10679:16;10658:37;;10595:107;;;;:::o;10708:393::-;10777:6;10827:1;10815:10;10811:18;10850:97;10880:66;10869:9;10850:97;:::i;:::-;10968:39;10998:8;10987:9;10968:39;:::i;:::-;10956:51;;11040:4;11036:9;11029:5;11025:21;11016:30;;11089:4;11079:8;11075:19;11068:5;11065:30;11055:40;;10784:317;;10708:393;;;;;:::o;11107:60::-;11135:3;11156:5;11149:12;;11107:60;;;:::o;11173:142::-;11223:9;11256:53;11274:34;11283:24;11301:5;11283:24;:::i;:::-;11274:34;:::i;:::-;11256:53;:::i;:::-;11243:66;;11173:142;;;:::o;11321:75::-;11364:3;11385:5;11378:12;;11321:75;;;:::o;11402:269::-;11512:39;11543:7;11512:39;:::i;:::-;11573:91;11622:41;11646:16;11622:41;:::i;:::-;11614:6;11607:4;11601:11;11573:91;:::i;:::-;11567:4;11560:105;11478:193;11402:269;;;:::o;11677:73::-;11722:3;11677:73;:::o;11756:189::-;11833:32;;:::i;:::-;11874:65;11932:6;11924;11918:4;11874:65;:::i;:::-;11809:136;11756:189;;:::o;11951:186::-;12011:120;12028:3;12021:5;12018:14;12011:120;;;12082:39;12119:1;12112:5;12082:39;:::i;:::-;12055:1;12048:5;12044:13;12035:22;;12011:120;;;11951:186;;:::o;12143:543::-;12244:2;12239:3;12236:11;12233:446;;;12278:38;12310:5;12278:38;:::i;:::-;12362:29;12380:10;12362:29;:::i;:::-;12352:8;12348:44;12545:2;12533:10;12530:18;12527:49;;;12566:8;12551:23;;12527:49;12589:80;12645:22;12663:3;12645:22;:::i;:::-;12635:8;12631:37;12618:11;12589:80;:::i;:::-;12248:431;;12233:446;12143:543;;;:::o;12692:117::-;12746:8;12796:5;12790:4;12786:16;12765:37;;12692:117;;;;:::o;12815:169::-;12859:6;12892:51;12940:1;12936:6;12928:5;12925:1;12921:13;12892:51;:::i;:::-;12888:56;12973:4;12967;12963:15;12953:25;;12866:118;12815:169;;;;:::o;12989:295::-;13065:4;13211:29;13236:3;13230:4;13211:29;:::i;:::-;13203:37;;13273:3;13270:1;13266:11;13260:4;13257:21;13249:29;;12989:295;;;;:::o;13289:1395::-;13406:37;13439:3;13406:37;:::i;:::-;13508:18;13500:6;13497:30;13494:56;;;13530:18;;:::i;:::-;13494:56;13574:38;13606:4;13600:11;13574:38;:::i;:::-;13659:67;13719:6;13711;13705:4;13659:67;:::i;:::-;13753:1;13777:4;13764:17;;13809:2;13801:6;13798:14;13826:1;13821:618;;;;14483:1;14500:6;14497:77;;;14549:9;14544:3;14540:19;14534:26;14525:35;;14497:77;14600:67;14660:6;14653:5;14600:67;:::i;:::-;14594:4;14587:81;14456:222;13791:887;;13821:618;13873:4;13869:9;13861:6;13857:22;13907:37;13939:4;13907:37;:::i;:::-;13966:1;13980:208;13994:7;13991:1;13988:14;13980:208;;;14073:9;14068:3;14064:19;14058:26;14050:6;14043:42;14124:1;14116:6;14112:14;14102:24;;14171:2;14160:9;14156:18;14143:31;;14017:4;14014:1;14010:12;14005:17;;13980:208;;;14216:6;14207:7;14204:19;14201:179;;;14274:9;14269:3;14265:19;14259:26;14317:48;14359:4;14351:6;14347:17;14336:9;14317:48;:::i;:::-;14309:6;14302:64;14224:156;14201:179;14426:1;14422;14414:6;14410:14;14406:22;14400:4;14393:36;13828:611;;;13791:887;;13381:1303;;;13289:1395;;:::o;14690:162::-;14830:14;14826:1;14818:6;14814:14;14807:38;14690:162;:::o;14858:366::-;15000:3;15021:67;15085:2;15080:3;15021:67;:::i;:::-;15014:74;;15097:93;15186:3;15097:93;:::i;:::-;15215:2;15210:3;15206:12;15199:19;;14858:366;;;:::o;15230:419::-;15396:4;15434:2;15423:9;15419:18;15411:26;;15483:9;15477:4;15473:20;15469:1;15458:9;15454:17;15447:47;15511:131;15637:4;15511:131;:::i;:::-;15503:139;;15230:419;;;:::o;15655:161::-;15795:13;15791:1;15783:6;15779:14;15772:37;15655:161;:::o;15822:366::-;15964:3;15985:67;16049:2;16044:3;15985:67;:::i;:::-;15978:74;;16061:93;16150:3;16061:93;:::i;:::-;16179:2;16174:3;16170:12;16163:19;;15822:366;;;:::o;16194:419::-;16360:4;16398:2;16387:9;16383:18;16375:26;;16447:9;16441:4;16437:20;16433:1;16422:9;16418:17;16411:47;16475:131;16601:4;16475:131;:::i;:::-;16467:139;;16194:419;;;:::o;16619:442::-;16768:4;16806:2;16795:9;16791:18;16783:26;;16819:71;16887:1;16876:9;16872:17;16863:6;16819:71;:::i;:::-;16900:72;16968:2;16957:9;16953:18;16944:6;16900:72;:::i;:::-;16982;17050:2;17039:9;17035:18;17026:6;16982:72;:::i;:::-;16619:442;;;;;;:::o;17067:180::-;17115:77;17112:1;17105:88;17212:4;17209:1;17202:15;17236:4;17233:1;17226:15;17253:191;17293:3;17312:20;17330:1;17312:20;:::i;:::-;17307:25;;17346:20;17364:1;17346:20;:::i;:::-;17341:25;;17389:1;17386;17382:9;17375:16;;17410:3;17407:1;17404:10;17401:36;;;17417:18;;:::i;:::-;17401:36;17253:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1297800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"burn(uint256)": "infinite",
								"decimals()": "405",
								"imageURI()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2604",
								"renounceOwnership()": "infinite",
								"setImageURI(string)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2455",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 329,
									"end": 2379,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 329,
									"end": 2379,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 329,
									"end": 2379,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 786,
									"end": 1310,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 953,
									"end": 963,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 931,
									"end": 935,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 937,
									"end": 943,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1007,
									"end": 1008,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 986,
									"end": 995,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 980,
									"end": 1003,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 980,
									"end": 1008,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 976,
									"end": 1029,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 976,
									"end": 1029,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1010,
									"end": 1029,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1010,
									"end": 1029,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1010,
									"end": 1029,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1010,
									"end": 1029,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1010,
									"end": 1029,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1010,
									"end": 1029,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1010,
									"end": 1029,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1010,
									"end": 1029,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1010,
									"end": 1029,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1010,
									"end": 1029,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1010,
									"end": 1029,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1010,
									"end": 1029,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1010,
									"end": 1029,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1010,
									"end": 1029,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1010,
									"end": 1029,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1010,
									"end": 1029,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1010,
									"end": 1029,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1010,
									"end": 1029,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1010,
									"end": 1029,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1010,
									"end": 1029,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 976,
									"end": 1029,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 976,
									"end": 1029,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1060,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1048,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1040,
									"end": 1060,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1060,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1060,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1040,
									"end": 1060,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1060,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1060,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1040,
									"end": 1060,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1060,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1040,
									"end": 1060,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1060,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1100,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1103,
									"end": 1113,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1103,
									"end": 1111,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1103,
									"end": 1111,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1103,
									"end": 1111,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1103,
									"end": 1113,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1103,
									"end": 1113,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1103,
									"end": 1113,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1103,
									"end": 1113,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1103,
									"end": 1113,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1113,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1113,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1178,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1159,
									"end": 1161,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1159,
									"end": 1178,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1159,
									"end": 1178,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1159,
									"end": 1178,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1159,
									"end": 1178,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1159,
									"end": 1178,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1159,
									"end": 1178,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1159,
									"end": 1178,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1155,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1138,
									"end": 1179,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1138,
									"end": 1179,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1179,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1179,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1138,
									"end": 1179,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1179,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1138,
									"end": 1179,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1128,
									"end": 1135,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1128,
									"end": 1179,
									"modifierDepth": 2,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1124,
									"end": 1234,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1124,
									"end": 1234,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1124,
									"end": 1234,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1222,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1196,
									"end": 1222,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1222,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1196,
									"end": 1222,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1222,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1222,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1196,
									"end": 1222,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1222,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1196,
									"end": 1222,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1222,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1196,
									"end": 1222,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1222,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1196,
									"end": 1222,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1222,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1196,
									"end": 1222,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1222,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1222,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1222,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1222,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1222,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1124,
									"end": 1234,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1124,
									"end": 1234,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1254,
									"end": 1302,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1260,
									"end": 1270,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1288,
									"end": 1301,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1282,
									"end": 1284,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1282,
									"end": 1301,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1282,
									"end": 1301,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1282,
									"end": 1301,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1282,
									"end": 1301,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1282,
									"end": 1301,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1282,
									"end": 1301,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1282,
									"end": 1301,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1272,
									"end": 1279,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1272,
									"end": 1301,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1272,
									"end": 1301,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1272,
									"end": 1301,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1272,
									"end": 1301,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1272,
									"end": 1301,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1272,
									"end": 1301,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1272,
									"end": 1301,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1254,
									"end": 1259,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1254,
									"end": 1259,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1254,
									"end": 1259,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1254,
									"end": 1302,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1254,
									"end": 1302,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1254,
									"end": 1302,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1254,
									"end": 1302,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1254,
									"end": 1302,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 965,
									"end": 1310,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 786,
									"end": 1310,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 329,
									"end": 2379,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 329,
									"end": 2379,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2756,
									"end": 2761,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2780,
									"end": 2782,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2707,
									"end": 2789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2636,
									"end": 2641,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 2744,
									"end": 2749,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2726,
									"end": 2750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2719,
									"end": 2724,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2716,
									"end": 2751,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2765,
									"end": 2766,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2762,
									"end": 2763,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2755,
									"end": 2767,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2653,
									"end": 2775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2838,
									"end": 2843,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2875,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2863,
									"end": 2876,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 2912,
									"end": 2917,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2885,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 4269,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2930,
									"end": 4269,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3057,
									"end": 3063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3065,
									"end": 3071,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3073,
									"end": 3079,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3081,
									"end": 3087,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3130,
									"end": 3133,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3118,
									"end": 3127,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3109,
									"end": 3116,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3105,
									"end": 3128,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3101,
									"end": 3134,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 3098,
									"end": 3218,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3098,
									"end": 3218,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 3098,
									"end": 3218,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3137,
									"end": 3216,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 3137,
									"end": 3216,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3137,
									"end": 3216,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3137,
									"end": 3216,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 3137,
									"end": 3216,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3098,
									"end": 3218,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 3098,
									"end": 3218,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3278,
									"end": 3279,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3267,
									"end": 3276,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3263,
									"end": 3280,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3257,
									"end": 3281,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3308,
									"end": 3326,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3300,
									"end": 3306,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3327,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3294,
									"end": 3411,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3294,
									"end": 3411,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 3294,
									"end": 3411,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3330,
									"end": 3409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 3330,
									"end": 3409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3330,
									"end": 3409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3330,
									"end": 3409,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 3330,
									"end": 3409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3294,
									"end": 3411,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 3294,
									"end": 3411,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3435,
									"end": 3509,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 3501,
									"end": 3508,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3492,
									"end": 3498,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3481,
									"end": 3490,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3477,
									"end": 3499,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3435,
									"end": 3509,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 3435,
									"end": 3509,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3435,
									"end": 3509,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 3435,
									"end": 3509,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3425,
									"end": 3509,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3425,
									"end": 3509,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3228,
									"end": 3519,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3579,
									"end": 3581,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3568,
									"end": 3577,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3564,
									"end": 3582,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3558,
									"end": 3583,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3610,
									"end": 3628,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3602,
									"end": 3608,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3599,
									"end": 3629,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3596,
									"end": 3713,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3596,
									"end": 3713,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 3596,
									"end": 3713,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3632,
									"end": 3711,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 3632,
									"end": 3711,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3632,
									"end": 3711,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3632,
									"end": 3711,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 3632,
									"end": 3711,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3596,
									"end": 3713,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 3596,
									"end": 3713,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3737,
									"end": 3811,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 3803,
									"end": 3810,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3794,
									"end": 3800,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3792,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3779,
									"end": 3801,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3737,
									"end": 3811,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 3737,
									"end": 3811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3737,
									"end": 3811,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 3737,
									"end": 3811,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3727,
									"end": 3811,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3727,
									"end": 3811,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3529,
									"end": 3821,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3881,
									"end": 3883,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3870,
									"end": 3879,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3866,
									"end": 3884,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3860,
									"end": 3885,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3912,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3904,
									"end": 3910,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3901,
									"end": 3931,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3898,
									"end": 4015,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3898,
									"end": 4015,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 3898,
									"end": 4015,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3934,
									"end": 4013,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 3934,
									"end": 4013,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3934,
									"end": 4013,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3934,
									"end": 4013,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 3934,
									"end": 4013,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3898,
									"end": 4015,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 3898,
									"end": 4015,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4039,
									"end": 4113,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 4105,
									"end": 4112,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4096,
									"end": 4102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4085,
									"end": 4094,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4081,
									"end": 4103,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4039,
									"end": 4113,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 4039,
									"end": 4113,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4039,
									"end": 4113,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 4039,
									"end": 4113,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4029,
									"end": 4113,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4029,
									"end": 4113,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3831,
									"end": 4123,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4162,
									"end": 4164,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 4188,
									"end": 4252,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 4244,
									"end": 4251,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4235,
									"end": 4241,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4224,
									"end": 4233,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4220,
									"end": 4242,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4188,
									"end": 4252,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 4188,
									"end": 4252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4188,
									"end": 4252,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 4188,
									"end": 4252,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4178,
									"end": 4252,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4178,
									"end": 4252,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4133,
									"end": 4262,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 4269,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 4269,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 4269,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 4269,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 4269,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 4269,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 4269,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 4269,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4275,
									"end": 4374,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 4275,
									"end": 4374,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4327,
									"end": 4333,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4361,
									"end": 4366,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4355,
									"end": 4367,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4345,
									"end": 4367,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4345,
									"end": 4367,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4275,
									"end": 4374,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4275,
									"end": 4374,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4275,
									"end": 4374,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4275,
									"end": 4374,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4380,
									"end": 4560,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 4380,
									"end": 4560,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4428,
									"end": 4505,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4425,
									"end": 4426,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4418,
									"end": 4506,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4525,
									"end": 4529,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 4522,
									"end": 4523,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4515,
									"end": 4530,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4553,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4546,
									"end": 4547,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4539,
									"end": 4554,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4566,
									"end": 4886,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 4566,
									"end": 4886,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4610,
									"end": 4616,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4647,
									"end": 4648,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4641,
									"end": 4645,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4637,
									"end": 4649,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4627,
									"end": 4649,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4627,
									"end": 4649,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4694,
									"end": 4695,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4688,
									"end": 4692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4684,
									"end": 4696,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4715,
									"end": 4733,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4705,
									"end": 4786,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 4705,
									"end": 4786,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4771,
									"end": 4775,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 4763,
									"end": 4769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4759,
									"end": 4776,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4749,
									"end": 4776,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4749,
									"end": 4776,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4705,
									"end": 4786,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 4705,
									"end": 4786,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4833,
									"end": 4835,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4825,
									"end": 4831,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4822,
									"end": 4836,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4802,
									"end": 4820,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4799,
									"end": 4837,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4796,
									"end": 4880,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 4796,
									"end": 4880,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4852,
									"end": 4870,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 4852,
									"end": 4870,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 4852,
									"end": 4870,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4852,
									"end": 4870,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 4852,
									"end": 4870,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4796,
									"end": 4880,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 4796,
									"end": 4880,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4617,
									"end": 4886,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4566,
									"end": 4886,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4566,
									"end": 4886,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4566,
									"end": 4886,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4566,
									"end": 4886,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4892,
									"end": 5033,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 4892,
									"end": 5033,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4941,
									"end": 4945,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4964,
									"end": 4967,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4956,
									"end": 4967,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4956,
									"end": 4967,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 4990,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4984,
									"end": 4985,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4991,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5021,
									"end": 5025,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5018,
									"end": 5019,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5008,
									"end": 5026,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5026,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5026,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4892,
									"end": 5033,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4892,
									"end": 5033,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4892,
									"end": 5033,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4892,
									"end": 5033,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5039,
									"end": 5132,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 5039,
									"end": 5132,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5076,
									"end": 5082,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5123,
									"end": 5125,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5118,
									"end": 5120,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5111,
									"end": 5116,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5107,
									"end": 5121,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5103,
									"end": 5126,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5093,
									"end": 5126,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5093,
									"end": 5126,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5039,
									"end": 5132,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5039,
									"end": 5132,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5039,
									"end": 5132,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5039,
									"end": 5132,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5245,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 5138,
									"end": 5245,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5182,
									"end": 5190,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5232,
									"end": 5237,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5226,
									"end": 5230,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5222,
									"end": 5238,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 5201,
									"end": 5238,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5201,
									"end": 5238,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5245,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5245,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5245,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5245,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5251,
									"end": 5644,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 5251,
									"end": 5644,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5326,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5370,
									"end": 5371,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5358,
									"end": 5368,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5354,
									"end": 5372,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5393,
									"end": 5490,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 5423,
									"end": 5489,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5412,
									"end": 5421,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5393,
									"end": 5490,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 5393,
									"end": 5490,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5393,
									"end": 5490,
									"name": "tag",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 5393,
									"end": 5490,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5511,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 5541,
									"end": 5549,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5530,
									"end": 5539,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5511,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 5511,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5511,
									"end": 5550,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 5511,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5499,
									"end": 5550,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 5499,
									"end": 5550,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5583,
									"end": 5587,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5579,
									"end": 5588,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5572,
									"end": 5577,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5568,
									"end": 5589,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5559,
									"end": 5589,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5559,
									"end": 5589,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5632,
									"end": 5636,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5622,
									"end": 5630,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5618,
									"end": 5637,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5611,
									"end": 5616,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5608,
									"end": 5638,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5598,
									"end": 5638,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5598,
									"end": 5638,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5327,
									"end": 5644,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5327,
									"end": 5644,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5251,
									"end": 5644,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5251,
									"end": 5644,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5251,
									"end": 5644,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5251,
									"end": 5644,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5251,
									"end": 5644,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5251,
									"end": 5644,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5650,
									"end": 5710,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 5650,
									"end": 5710,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5678,
									"end": 5681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5699,
									"end": 5704,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5692,
									"end": 5704,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5692,
									"end": 5704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5650,
									"end": 5710,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5650,
									"end": 5710,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5650,
									"end": 5710,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5650,
									"end": 5710,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5716,
									"end": 5858,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 5716,
									"end": 5858,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5766,
									"end": 5775,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5799,
									"end": 5852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 5817,
									"end": 5851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 5826,
									"end": 5850,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 5844,
									"end": 5849,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5826,
									"end": 5850,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 5826,
									"end": 5850,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5826,
									"end": 5850,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 5826,
									"end": 5850,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5817,
									"end": 5851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 5817,
									"end": 5851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5817,
									"end": 5851,
									"name": "tag",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 5817,
									"end": 5851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5799,
									"end": 5852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 5799,
									"end": 5852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5799,
									"end": 5852,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 5799,
									"end": 5852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5786,
									"end": 5852,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5786,
									"end": 5852,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5716,
									"end": 5858,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5716,
									"end": 5858,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5716,
									"end": 5858,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5716,
									"end": 5858,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5864,
									"end": 5939,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 5864,
									"end": 5939,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5907,
									"end": 5910,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5928,
									"end": 5933,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5921,
									"end": 5933,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5921,
									"end": 5933,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5864,
									"end": 5939,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5864,
									"end": 5939,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5864,
									"end": 5939,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5864,
									"end": 5939,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5945,
									"end": 6214,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 5945,
									"end": 6214,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6055,
									"end": 6094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 6086,
									"end": 6093,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6055,
									"end": 6094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 6055,
									"end": 6094,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6055,
									"end": 6094,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 6055,
									"end": 6094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6116,
									"end": 6207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 6165,
									"end": 6206,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 6189,
									"end": 6205,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6165,
									"end": 6206,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 6165,
									"end": 6206,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6165,
									"end": 6206,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 6165,
									"end": 6206,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6157,
									"end": 6163,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6150,
									"end": 6154,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6144,
									"end": 6155,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6116,
									"end": 6207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 6116,
									"end": 6207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6116,
									"end": 6207,
									"name": "tag",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 6116,
									"end": 6207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6110,
									"end": 6114,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6103,
									"end": 6208,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6021,
									"end": 6214,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5945,
									"end": 6214,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5945,
									"end": 6214,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5945,
									"end": 6214,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5945,
									"end": 6214,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6220,
									"end": 6293,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 6220,
									"end": 6293,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6265,
									"end": 6268,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6220,
									"end": 6293,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6220,
									"end": 6293,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6299,
									"end": 6488,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 6299,
									"end": 6488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6376,
									"end": 6408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 6376,
									"end": 6408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 6376,
									"end": 6408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6376,
									"end": 6408,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 6376,
									"end": 6408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6417,
									"end": 6482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 6475,
									"end": 6481,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6467,
									"end": 6473,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6461,
									"end": 6465,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6417,
									"end": 6482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 6417,
									"end": 6482,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6417,
									"end": 6482,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 6417,
									"end": 6482,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6352,
									"end": 6488,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6299,
									"end": 6488,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6299,
									"end": 6488,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6299,
									"end": 6488,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6494,
									"end": 6680,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 6494,
									"end": 6680,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6554,
									"end": 6674,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 6554,
									"end": 6674,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6571,
									"end": 6574,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6564,
									"end": 6569,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6561,
									"end": 6575,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6554,
									"end": 6674,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6554,
									"end": 6674,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 6554,
									"end": 6674,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6625,
									"end": 6664,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 6662,
									"end": 6663,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6655,
									"end": 6660,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6625,
									"end": 6664,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 6625,
									"end": 6664,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6625,
									"end": 6664,
									"name": "tag",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 6625,
									"end": 6664,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6598,
									"end": 6599,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6591,
									"end": 6596,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6587,
									"end": 6600,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6578,
									"end": 6600,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6578,
									"end": 6600,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6554,
									"end": 6674,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 6554,
									"end": 6674,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6554,
									"end": 6674,
									"name": "tag",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 6554,
									"end": 6674,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6494,
									"end": 6680,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6494,
									"end": 6680,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6494,
									"end": 6680,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6686,
									"end": 7229,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 6686,
									"end": 7229,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6787,
									"end": 6789,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6782,
									"end": 6785,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6779,
									"end": 6790,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6776,
									"end": 7222,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6776,
									"end": 7222,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 6776,
									"end": 7222,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6821,
									"end": 6859,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 6853,
									"end": 6858,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6821,
									"end": 6859,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 6821,
									"end": 6859,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6821,
									"end": 6859,
									"name": "tag",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 6821,
									"end": 6859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6905,
									"end": 6934,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 6923,
									"end": 6933,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6905,
									"end": 6934,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 6905,
									"end": 6934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6905,
									"end": 6934,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 6905,
									"end": 6934,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6895,
									"end": 6903,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6891,
									"end": 6935,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7088,
									"end": 7090,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7076,
									"end": 7086,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7073,
									"end": 7091,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7070,
									"end": 7119,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7070,
									"end": 7119,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 7070,
									"end": 7119,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7109,
									"end": 7117,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7094,
									"end": 7117,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7094,
									"end": 7117,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7070,
									"end": 7119,
									"name": "tag",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 7070,
									"end": 7119,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7132,
									"end": 7212,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 7188,
									"end": 7210,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 7206,
									"end": 7209,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7188,
									"end": 7210,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 7188,
									"end": 7210,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7188,
									"end": 7210,
									"name": "tag",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 7188,
									"end": 7210,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7178,
									"end": 7186,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7174,
									"end": 7211,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7161,
									"end": 7172,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7132,
									"end": 7212,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 7132,
									"end": 7212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7132,
									"end": 7212,
									"name": "tag",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 7132,
									"end": 7212,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6791,
									"end": 7222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6791,
									"end": 7222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6776,
									"end": 7222,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 6776,
									"end": 7222,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6686,
									"end": 7229,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6686,
									"end": 7229,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6686,
									"end": 7229,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6686,
									"end": 7229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7235,
									"end": 7352,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 7235,
									"end": 7352,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7289,
									"end": 7297,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7339,
									"end": 7344,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7333,
									"end": 7337,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7329,
									"end": 7345,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 7308,
									"end": 7345,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7308,
									"end": 7345,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7235,
									"end": 7352,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7235,
									"end": 7352,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7235,
									"end": 7352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7235,
									"end": 7352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7235,
									"end": 7352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7358,
									"end": 7527,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 7358,
									"end": 7527,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7402,
									"end": 7408,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7435,
									"end": 7486,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 7483,
									"end": 7484,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7479,
									"end": 7485,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7471,
									"end": 7476,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7468,
									"end": 7469,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7464,
									"end": 7477,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7435,
									"end": 7486,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 7435,
									"end": 7486,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7435,
									"end": 7486,
									"name": "tag",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 7435,
									"end": 7486,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7431,
									"end": 7487,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7516,
									"end": 7520,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7510,
									"end": 7514,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7506,
									"end": 7521,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7496,
									"end": 7521,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7496,
									"end": 7521,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7409,
									"end": 7527,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7358,
									"end": 7527,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7358,
									"end": 7527,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7358,
									"end": 7527,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7358,
									"end": 7527,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7358,
									"end": 7527,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7532,
									"end": 7827,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 7532,
									"end": 7827,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7608,
									"end": 7612,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7754,
									"end": 7783,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 7779,
									"end": 7782,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7773,
									"end": 7777,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7754,
									"end": 7783,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 7754,
									"end": 7783,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7754,
									"end": 7783,
									"name": "tag",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 7754,
									"end": 7783,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7746,
									"end": 7783,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7746,
									"end": 7783,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7816,
									"end": 7819,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7813,
									"end": 7814,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 7809,
									"end": 7820,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7803,
									"end": 7807,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7800,
									"end": 7821,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 7792,
									"end": 7821,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7792,
									"end": 7821,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7532,
									"end": 7827,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7532,
									"end": 7827,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7532,
									"end": 7827,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7532,
									"end": 7827,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7532,
									"end": 7827,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7832,
									"end": 9227,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 7832,
									"end": 9227,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7949,
									"end": 7986,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 7982,
									"end": 7985,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7949,
									"end": 7986,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 7949,
									"end": 7986,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7949,
									"end": 7986,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 7949,
									"end": 7986,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8051,
									"end": 8069,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8043,
									"end": 8049,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8040,
									"end": 8070,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8037,
									"end": 8093,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8037,
									"end": 8093,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 8037,
									"end": 8093,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8073,
									"end": 8091,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 8073,
									"end": 8091,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 8073,
									"end": 8091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8073,
									"end": 8091,
									"name": "tag",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 8073,
									"end": 8091,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8037,
									"end": 8093,
									"name": "tag",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 8037,
									"end": 8093,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8117,
									"end": 8155,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 8149,
									"end": 8153,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8143,
									"end": 8154,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 8117,
									"end": 8155,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 8117,
									"end": 8155,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8117,
									"end": 8155,
									"name": "tag",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 8117,
									"end": 8155,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8202,
									"end": 8269,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 8262,
									"end": 8268,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8254,
									"end": 8260,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8248,
									"end": 8252,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8202,
									"end": 8269,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 8202,
									"end": 8269,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8202,
									"end": 8269,
									"name": "tag",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 8202,
									"end": 8269,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8296,
									"end": 8297,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8320,
									"end": 8324,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8307,
									"end": 8324,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8307,
									"end": 8324,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8352,
									"end": 8354,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8344,
									"end": 8350,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8341,
									"end": 8355,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8369,
									"end": 8370,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8364,
									"end": 8982,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8364,
									"end": 8982,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8364,
									"end": 8982,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 8364,
									"end": 8982,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9026,
									"end": 9027,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9043,
									"end": 9049,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9040,
									"end": 9117,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9040,
									"end": 9117,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 9040,
									"end": 9117,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9092,
									"end": 9101,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9087,
									"end": 9090,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 9083,
									"end": 9102,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9077,
									"end": 9103,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9068,
									"end": 9103,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9068,
									"end": 9103,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9040,
									"end": 9117,
									"name": "tag",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 9040,
									"end": 9117,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9143,
									"end": 9210,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 9203,
									"end": 9209,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9196,
									"end": 9201,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9143,
									"end": 9210,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 9143,
									"end": 9210,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9143,
									"end": 9210,
									"name": "tag",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 9143,
									"end": 9210,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9137,
									"end": 9141,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9130,
									"end": 9211,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8999,
									"end": 9221,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8334,
									"end": 9221,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 8334,
									"end": 9221,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8364,
									"end": 8982,
									"name": "tag",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 8364,
									"end": 8982,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8416,
									"end": 8420,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8412,
									"end": 8421,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 8404,
									"end": 8410,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8400,
									"end": 8422,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8450,
									"end": 8487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "207"
								},
								{
									"begin": 8482,
									"end": 8486,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8450,
									"end": 8487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 8450,
									"end": 8487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8450,
									"end": 8487,
									"name": "tag",
									"source": 7,
									"value": "207"
								},
								{
									"begin": 8450,
									"end": 8487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8509,
									"end": 8510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8523,
									"end": 8731,
									"name": "tag",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 8523,
									"end": 8731,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8537,
									"end": 8544,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8534,
									"end": 8535,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8531,
									"end": 8545,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8523,
									"end": 8731,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8523,
									"end": 8731,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 8523,
									"end": 8731,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8616,
									"end": 8625,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8611,
									"end": 8614,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8607,
									"end": 8626,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8601,
									"end": 8627,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8593,
									"end": 8599,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8586,
									"end": 8628,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8667,
									"end": 8668,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8659,
									"end": 8665,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8655,
									"end": 8669,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8645,
									"end": 8669,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8645,
									"end": 8669,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8714,
									"end": 8716,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8703,
									"end": 8712,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8699,
									"end": 8717,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8686,
									"end": 8717,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8686,
									"end": 8717,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8560,
									"end": 8564,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8557,
									"end": 8558,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8553,
									"end": 8565,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8548,
									"end": 8565,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8548,
									"end": 8565,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8523,
									"end": 8731,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 8523,
									"end": 8731,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8523,
									"end": 8731,
									"name": "tag",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 8523,
									"end": 8731,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8759,
									"end": 8765,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8750,
									"end": 8757,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8747,
									"end": 8766,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8744,
									"end": 8923,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8744,
									"end": 8923,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 8744,
									"end": 8923,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8817,
									"end": 8826,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8812,
									"end": 8815,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8808,
									"end": 8827,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8802,
									"end": 8828,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8860,
									"end": 8908,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 8902,
									"end": 8906,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8894,
									"end": 8900,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8890,
									"end": 8907,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8879,
									"end": 8888,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8860,
									"end": 8908,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 8860,
									"end": 8908,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8860,
									"end": 8908,
									"name": "tag",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 8860,
									"end": 8908,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8852,
									"end": 8858,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8845,
									"end": 8909,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8767,
									"end": 8923,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8744,
									"end": 8923,
									"name": "tag",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 8744,
									"end": 8923,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8969,
									"end": 8970,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8965,
									"end": 8966,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 8957,
									"end": 8963,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 8953,
									"end": 8967,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8949,
									"end": 8971,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8943,
									"end": 8947,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 8936,
									"end": 8972,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8371,
									"end": 8982,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8371,
									"end": 8982,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8371,
									"end": 8982,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8334,
									"end": 9221,
									"name": "tag",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 8334,
									"end": 9221,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8334,
									"end": 9221,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7924,
									"end": 9227,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7924,
									"end": 9227,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7924,
									"end": 9227,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7832,
									"end": 9227,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7832,
									"end": 9227,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7832,
									"end": 9227,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9233,
									"end": 9359,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 9233,
									"end": 9359,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9270,
									"end": 9277,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9310,
									"end": 9352,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9303,
									"end": 9308,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9299,
									"end": 9353,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9288,
									"end": 9353,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9288,
									"end": 9353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9233,
									"end": 9359,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9233,
									"end": 9359,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9233,
									"end": 9359,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9233,
									"end": 9359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9365,
									"end": 9461,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 9365,
									"end": 9461,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9402,
									"end": 9409,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9431,
									"end": 9455,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "215"
								},
								{
									"begin": 9449,
									"end": 9454,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9431,
									"end": 9455,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 9431,
									"end": 9455,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9431,
									"end": 9455,
									"name": "tag",
									"source": 7,
									"value": "215"
								},
								{
									"begin": 9431,
									"end": 9455,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9420,
									"end": 9455,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9420,
									"end": 9455,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9365,
									"end": 9461,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9365,
									"end": 9461,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9365,
									"end": 9461,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9365,
									"end": 9461,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9467,
									"end": 9585,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 9467,
									"end": 9585,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9554,
									"end": 9578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "217"
								},
								{
									"begin": 9572,
									"end": 9577,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9554,
									"end": 9578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 9554,
									"end": 9578,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9554,
									"end": 9578,
									"name": "tag",
									"source": 7,
									"value": "217"
								},
								{
									"begin": 9554,
									"end": 9578,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9549,
									"end": 9552,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9542,
									"end": 9579,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9467,
									"end": 9585,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9467,
									"end": 9585,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9467,
									"end": 9585,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9591,
									"end": 9813,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 9591,
									"end": 9813,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9684,
									"end": 9688,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9722,
									"end": 9724,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9711,
									"end": 9720,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9707,
									"end": 9725,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9699,
									"end": 9725,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9699,
									"end": 9725,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9735,
									"end": 9806,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 9803,
									"end": 9804,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9792,
									"end": 9801,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9788,
									"end": 9805,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9779,
									"end": 9785,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9735,
									"end": 9806,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 9735,
									"end": 9806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9735,
									"end": 9806,
									"name": "tag",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 9735,
									"end": 9806,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9591,
									"end": 9813,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9591,
									"end": 9813,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9591,
									"end": 9813,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9591,
									"end": 9813,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9591,
									"end": 9813,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9819,
									"end": 9988,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 9819,
									"end": 9988,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9903,
									"end": 9914,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9937,
									"end": 9943,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9932,
									"end": 9935,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9925,
									"end": 9944,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9977,
									"end": 9981,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9972,
									"end": 9975,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9968,
									"end": 9982,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9953,
									"end": 9982,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9953,
									"end": 9982,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9819,
									"end": 9988,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9819,
									"end": 9988,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9819,
									"end": 9988,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9819,
									"end": 9988,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9819,
									"end": 9988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9994,
									"end": 10153,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 9994,
									"end": 10153,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10134,
									"end": 10145,
									"name": "PUSH",
									"source": 7,
									"value": "456D707479205552490000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10130,
									"end": 10131,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10122,
									"end": 10128,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10118,
									"end": 10132,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10111,
									"end": 10146,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9994,
									"end": 10153,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9994,
									"end": 10153,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10159,
									"end": 10524,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 10159,
									"end": 10524,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10301,
									"end": 10304,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10322,
									"end": 10388,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "223"
								},
								{
									"begin": 10386,
									"end": 10387,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 10381,
									"end": 10384,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10322,
									"end": 10388,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 10322,
									"end": 10388,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10322,
									"end": 10388,
									"name": "tag",
									"source": 7,
									"value": "223"
								},
								{
									"begin": 10322,
									"end": 10388,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10315,
									"end": 10388,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10315,
									"end": 10388,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10397,
									"end": 10490,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 10486,
									"end": 10489,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10397,
									"end": 10490,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 10397,
									"end": 10490,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10397,
									"end": 10490,
									"name": "tag",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 10397,
									"end": 10490,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10515,
									"end": 10517,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10510,
									"end": 10513,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10506,
									"end": 10518,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10499,
									"end": 10518,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10499,
									"end": 10518,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10159,
									"end": 10524,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10159,
									"end": 10524,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10159,
									"end": 10524,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10159,
									"end": 10524,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10530,
									"end": 10949,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10530,
									"end": 10949,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10696,
									"end": 10700,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10734,
									"end": 10736,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10723,
									"end": 10732,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10719,
									"end": 10737,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10711,
									"end": 10737,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10711,
									"end": 10737,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10783,
									"end": 10792,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10777,
									"end": 10781,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10773,
									"end": 10793,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 10769,
									"end": 10770,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10758,
									"end": 10767,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10754,
									"end": 10771,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10747,
									"end": 10794,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10811,
									"end": 10942,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "226"
								},
								{
									"begin": 10937,
									"end": 10941,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10811,
									"end": 10942,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 10811,
									"end": 10942,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10811,
									"end": 10942,
									"name": "tag",
									"source": 7,
									"value": "226"
								},
								{
									"begin": 10811,
									"end": 10942,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10803,
									"end": 10942,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10803,
									"end": 10942,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10530,
									"end": 10949,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10530,
									"end": 10949,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10530,
									"end": 10949,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10530,
									"end": 10949,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10955,
									"end": 11135,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 10955,
									"end": 11135,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11003,
									"end": 11080,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11000,
									"end": 11001,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10993,
									"end": 11081,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 11100,
									"end": 11104,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 11097,
									"end": 11098,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 11090,
									"end": 11105,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 11124,
									"end": 11128,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 11121,
									"end": 11122,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11114,
									"end": 11129,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 11141,
									"end": 11243,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 11141,
									"end": 11243,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11183,
									"end": 11191,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11230,
									"end": 11235,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11227,
									"end": 11228,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 11223,
									"end": 11236,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 11202,
									"end": 11236,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11202,
									"end": 11236,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11141,
									"end": 11243,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11141,
									"end": 11243,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11141,
									"end": 11243,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11141,
									"end": 11243,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11249,
									"end": 12097,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 11249,
									"end": 12097,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11310,
									"end": 11315,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11317,
									"end": 11321,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 11341,
									"end": 11347,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11332,
									"end": 11347,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11332,
									"end": 11347,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11365,
									"end": 11370,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11356,
									"end": 11370,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11356,
									"end": 11370,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11379,
									"end": 12091,
									"name": "tag",
									"source": 7,
									"value": "230"
								},
								{
									"begin": 11379,
									"end": 12091,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11400,
									"end": 11401,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 11390,
									"end": 11398,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 11387,
									"end": 11402,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 11379,
									"end": 12091,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11379,
									"end": 12091,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "232"
								},
								{
									"begin": 11379,
									"end": 12091,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11495,
									"end": 11499,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 11490,
									"end": 11493,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 11486,
									"end": 11500,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 11480,
									"end": 11484,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11477,
									"end": 11501,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 11474,
									"end": 11524,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11474,
									"end": 11524,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "233"
								},
								{
									"begin": 11474,
									"end": 11524,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11504,
									"end": 11522,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "234"
								},
								{
									"begin": 11504,
									"end": 11522,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 11504,
									"end": 11522,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11504,
									"end": 11522,
									"name": "tag",
									"source": 7,
									"value": "234"
								},
								{
									"begin": 11504,
									"end": 11522,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11474,
									"end": 11524,
									"name": "tag",
									"source": 7,
									"value": "233"
								},
								{
									"begin": 11474,
									"end": 11524,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11554,
									"end": 11555,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 11544,
									"end": 11552,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 11540,
									"end": 11556,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 11537,
									"end": 11988,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11537,
									"end": 11988,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "235"
								},
								{
									"begin": 11537,
									"end": 11988,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11969,
									"end": 11973,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 11962,
									"end": 11967,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11958,
									"end": 11974,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 11949,
									"end": 11974,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11949,
									"end": 11974,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11537,
									"end": 11988,
									"name": "tag",
									"source": 7,
									"value": "235"
								},
								{
									"begin": 11537,
									"end": 11988,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12019,
									"end": 12023,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 12013,
									"end": 12017,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12009,
									"end": 12024,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 12001,
									"end": 12024,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12001,
									"end": 12024,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12049,
									"end": 12081,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "236"
								},
								{
									"begin": 12072,
									"end": 12080,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 12049,
									"end": 12081,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 12049,
									"end": 12081,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12049,
									"end": 12081,
									"name": "tag",
									"source": 7,
									"value": "236"
								},
								{
									"begin": 12049,
									"end": 12081,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12037,
									"end": 12081,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 12037,
									"end": 12081,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11379,
									"end": 12091,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "230"
								},
								{
									"begin": 11379,
									"end": 12091,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11379,
									"end": 12091,
									"name": "tag",
									"source": 7,
									"value": "232"
								},
								{
									"begin": 11379,
									"end": 12091,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11249,
									"end": 12097,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 11249,
									"end": 12097,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11249,
									"end": 12097,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 11249,
									"end": 12097,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11249,
									"end": 12097,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11249,
									"end": 12097,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11249,
									"end": 12097,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11249,
									"end": 12097,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12103,
									"end": 13176,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 12103,
									"end": 13176,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12157,
									"end": 12162,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12348,
									"end": 12356,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12338,
									"end": 12378,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "238"
								},
								{
									"begin": 12338,
									"end": 12378,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 12369,
									"end": 12370,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 12360,
									"end": 12370,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12360,
									"end": 12370,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12371,
									"end": 12376,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "237"
								},
								{
									"begin": 12371,
									"end": 12376,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12338,
									"end": 12378,
									"name": "tag",
									"source": 7,
									"value": "238"
								},
								{
									"begin": 12338,
									"end": 12378,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12397,
									"end": 12401,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12387,
									"end": 12423,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "239"
								},
								{
									"begin": 12387,
									"end": 12423,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 12414,
									"end": 12415,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12405,
									"end": 12415,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12405,
									"end": 12415,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12416,
									"end": 12421,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "237"
								},
								{
									"begin": 12416,
									"end": 12421,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12387,
									"end": 12423,
									"name": "tag",
									"source": 7,
									"value": "239"
								},
								{
									"begin": 12387,
									"end": 12423,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12483,
									"end": 12487,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12531,
									"end": 12532,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 12526,
									"end": 12553,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12526,
									"end": 12553,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 12526,
									"end": 12553,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "241"
								},
								{
									"begin": 12526,
									"end": 12553,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 12567,
									"end": 12568,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 12562,
									"end": 12753,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12562,
									"end": 12753,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 12562,
									"end": 12753,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "242"
								},
								{
									"begin": 12562,
									"end": 12753,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 12476,
									"end": 12753,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "240"
								},
								{
									"begin": 12476,
									"end": 12753,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12526,
									"end": 12553,
									"name": "tag",
									"source": 7,
									"value": "241"
								},
								{
									"begin": 12526,
									"end": 12553,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12544,
									"end": 12545,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 12535,
									"end": 12545,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12535,
									"end": 12545,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12546,
									"end": 12551,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12546,
									"end": 12551,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "237"
								},
								{
									"begin": 12546,
									"end": 12551,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12562,
									"end": 12753,
									"name": "tag",
									"source": 7,
									"value": "242"
								},
								{
									"begin": 12562,
									"end": 12753,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12607,
									"end": 12610,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 12597,
									"end": 12605,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 12594,
									"end": 12611,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 12591,
									"end": 12634,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 12591,
									"end": 12634,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "243"
								},
								{
									"begin": 12591,
									"end": 12634,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 12614,
									"end": 12632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "244"
								},
								{
									"begin": 12614,
									"end": 12632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 12614,
									"end": 12632,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12614,
									"end": 12632,
									"name": "tag",
									"source": 7,
									"value": "244"
								},
								{
									"begin": 12614,
									"end": 12632,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12591,
									"end": 12634,
									"name": "tag",
									"source": 7,
									"value": "243"
								},
								{
									"begin": 12591,
									"end": 12634,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12663,
									"end": 12671,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12660,
									"end": 12661,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 12656,
									"end": 12672,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 12647,
									"end": 12672,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12647,
									"end": 12672,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12698,
									"end": 12701,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 12691,
									"end": 12696,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12688,
									"end": 12702,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 12685,
									"end": 12725,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 12685,
									"end": 12725,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "245"
								},
								{
									"begin": 12685,
									"end": 12725,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 12705,
									"end": 12723,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "246"
								},
								{
									"begin": 12705,
									"end": 12723,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 12705,
									"end": 12723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12705,
									"end": 12723,
									"name": "tag",
									"source": 7,
									"value": "246"
								},
								{
									"begin": 12705,
									"end": 12723,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12685,
									"end": 12725,
									"name": "tag",
									"source": 7,
									"value": "245"
								},
								{
									"begin": 12685,
									"end": 12725,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12738,
									"end": 12743,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12738,
									"end": 12743,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "237"
								},
								{
									"begin": 12738,
									"end": 12743,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12476,
									"end": 12753,
									"name": "tag",
									"source": 7,
									"value": "240"
								},
								{
									"begin": 12476,
									"end": 12753,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12476,
									"end": 12753,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12862,
									"end": 12864,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 12852,
									"end": 12860,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12849,
									"end": 12865,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 12843,
									"end": 12846,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 12837,
									"end": 12841,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12834,
									"end": 12847,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 12830,
									"end": 12866,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 12812,
									"end": 12814,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 12802,
									"end": 12810,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 12799,
									"end": 12815,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 12794,
									"end": 12796,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 12788,
									"end": 12792,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 12785,
									"end": 12797,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 12781,
									"end": 12816,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 12765,
									"end": 12876,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 12762,
									"end": 13008,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 12762,
									"end": 13008,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "247"
								},
								{
									"begin": 12762,
									"end": 13008,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 12918,
									"end": 12926,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12912,
									"end": 12916,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12908,
									"end": 12927,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 12899,
									"end": 12927,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12899,
									"end": 12927,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12953,
									"end": 12956,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12946,
									"end": 12951,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12943,
									"end": 12957,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 12940,
									"end": 12980,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 12940,
									"end": 12980,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "248"
								},
								{
									"begin": 12940,
									"end": 12980,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 12960,
									"end": 12978,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "249"
								},
								{
									"begin": 12960,
									"end": 12978,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 12960,
									"end": 12978,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12960,
									"end": 12978,
									"name": "tag",
									"source": 7,
									"value": "249"
								},
								{
									"begin": 12960,
									"end": 12978,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12940,
									"end": 12980,
									"name": "tag",
									"source": 7,
									"value": "248"
								},
								{
									"begin": 12940,
									"end": 12980,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12993,
									"end": 12998,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "237"
								},
								{
									"begin": 12993,
									"end": 12998,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12762,
									"end": 13008,
									"name": "tag",
									"source": 7,
									"value": "247"
								},
								{
									"begin": 12762,
									"end": 13008,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13033,
									"end": 13075,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "250"
								},
								{
									"begin": 13071,
									"end": 13074,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 13061,
									"end": 13069,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 13055,
									"end": 13059,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 13052,
									"end": 13053,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 13033,
									"end": 13075,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 13033,
									"end": 13075,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13033,
									"end": 13075,
									"name": "tag",
									"source": 7,
									"value": "250"
								},
								{
									"begin": 13033,
									"end": 13075,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13018,
									"end": 13075,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 13018,
									"end": 13075,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13018,
									"end": 13075,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13018,
									"end": 13075,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13107,
									"end": 13111,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 13102,
									"end": 13105,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 13098,
									"end": 13112,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 13091,
									"end": 13096,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 13088,
									"end": 13113,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 13085,
									"end": 13136,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 13085,
									"end": 13136,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "251"
								},
								{
									"begin": 13085,
									"end": 13136,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 13116,
									"end": 13134,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "252"
								},
								{
									"begin": 13116,
									"end": 13134,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 13116,
									"end": 13134,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13116,
									"end": 13134,
									"name": "tag",
									"source": 7,
									"value": "252"
								},
								{
									"begin": 13116,
									"end": 13134,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13085,
									"end": 13136,
									"name": "tag",
									"source": 7,
									"value": "251"
								},
								{
									"begin": 13085,
									"end": 13136,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13165,
									"end": 13169,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 13158,
									"end": 13163,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 13154,
									"end": 13170,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 13145,
									"end": 13170,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13145,
									"end": 13170,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12103,
									"end": 13176,
									"name": "tag",
									"source": 7,
									"value": "237"
								},
								{
									"begin": 12103,
									"end": 13176,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12103,
									"end": 13176,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 12103,
									"end": 13176,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 12103,
									"end": 13176,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12103,
									"end": 13176,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12103,
									"end": 13176,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12103,
									"end": 13176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13182,
									"end": 13268,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 13182,
									"end": 13268,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13217,
									"end": 13224,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13257,
									"end": 13261,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 13250,
									"end": 13255,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13246,
									"end": 13262,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 13235,
									"end": 13262,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13235,
									"end": 13262,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13182,
									"end": 13268,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13182,
									"end": 13268,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13182,
									"end": 13268,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13182,
									"end": 13268,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13274,
									"end": 13555,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 13274,
									"end": 13555,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13332,
									"end": 13337,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13356,
									"end": 13379,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "255"
								},
								{
									"begin": 13374,
									"end": 13378,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13356,
									"end": 13379,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 13356,
									"end": 13379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13356,
									"end": 13379,
									"name": "tag",
									"source": 7,
									"value": "255"
								},
								{
									"begin": 13356,
									"end": 13379,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13348,
									"end": 13379,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13348,
									"end": 13379,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13400,
									"end": 13425,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "256"
								},
								{
									"begin": 13416,
									"end": 13424,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13400,
									"end": 13425,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 13400,
									"end": 13425,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13400,
									"end": 13425,
									"name": "tag",
									"source": 7,
									"value": "256"
								},
								{
									"begin": 13400,
									"end": 13425,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13388,
									"end": 13425,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 13388,
									"end": 13425,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13444,
									"end": 13548,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "257"
								},
								{
									"begin": 13481,
									"end": 13547,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13471,
									"end": 13479,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 13465,
									"end": 13469,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 13444,
									"end": 13548,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 13444,
									"end": 13548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13444,
									"end": 13548,
									"name": "tag",
									"source": 7,
									"value": "257"
								},
								{
									"begin": 13444,
									"end": 13548,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13435,
									"end": 13548,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13435,
									"end": 13548,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13274,
									"end": 13555,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 13274,
									"end": 13555,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13274,
									"end": 13555,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13274,
									"end": 13555,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13274,
									"end": 13555,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13561,
									"end": 13741,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 13561,
									"end": 13741,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13609,
									"end": 13686,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13606,
									"end": 13607,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13599,
									"end": 13687,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 13706,
									"end": 13710,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 13703,
									"end": 13704,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 13696,
									"end": 13711,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 13730,
									"end": 13734,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 13727,
									"end": 13728,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13720,
									"end": 13735,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 13747,
									"end": 13932,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 13747,
									"end": 13932,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13787,
									"end": 13788,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13804,
									"end": 13824,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "260"
								},
								{
									"begin": 13822,
									"end": 13823,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13804,
									"end": 13824,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 13804,
									"end": 13824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13804,
									"end": 13824,
									"name": "tag",
									"source": 7,
									"value": "260"
								},
								{
									"begin": 13804,
									"end": 13824,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13799,
									"end": 13824,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13799,
									"end": 13824,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13838,
									"end": 13858,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "261"
								},
								{
									"begin": 13856,
									"end": 13857,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13838,
									"end": 13858,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 13838,
									"end": 13858,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13838,
									"end": 13858,
									"name": "tag",
									"source": 7,
									"value": "261"
								},
								{
									"begin": 13838,
									"end": 13858,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13833,
									"end": 13858,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 13833,
									"end": 13858,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13877,
									"end": 13878,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13867,
									"end": 13902,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "262"
								},
								{
									"begin": 13867,
									"end": 13902,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 13882,
									"end": 13900,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "263"
								},
								{
									"begin": 13882,
									"end": 13900,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 13882,
									"end": 13900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13882,
									"end": 13900,
									"name": "tag",
									"source": 7,
									"value": "263"
								},
								{
									"begin": 13882,
									"end": 13900,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13867,
									"end": 13902,
									"name": "tag",
									"source": 7,
									"value": "262"
								},
								{
									"begin": 13867,
									"end": 13902,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13924,
									"end": 13925,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13921,
									"end": 13922,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13917,
									"end": 13926,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 13912,
									"end": 13926,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13912,
									"end": 13926,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13747,
									"end": 13932,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 13747,
									"end": 13932,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13747,
									"end": 13932,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13747,
									"end": 13932,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13747,
									"end": 13932,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13938,
									"end": 14104,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 13938,
									"end": 14104,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14078,
									"end": 14096,
									"name": "PUSH",
									"source": 7,
									"value": "416D6F756E7420746F6F206C6172676500000000000000000000000000000000"
								},
								{
									"begin": 14074,
									"end": 14075,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14066,
									"end": 14072,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14062,
									"end": 14076,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 14055,
									"end": 14097,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 13938,
									"end": 14104,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13938,
									"end": 14104,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14110,
									"end": 14476,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 14110,
									"end": 14476,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14252,
									"end": 14255,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14273,
									"end": 14340,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "266"
								},
								{
									"begin": 14337,
									"end": 14339,
									"name": "PUSH",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 14332,
									"end": 14335,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 14273,
									"end": 14340,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 14273,
									"end": 14340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14273,
									"end": 14340,
									"name": "tag",
									"source": 7,
									"value": "266"
								},
								{
									"begin": 14273,
									"end": 14340,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14266,
									"end": 14340,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14266,
									"end": 14340,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14349,
									"end": 14442,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "267"
								},
								{
									"begin": 14438,
									"end": 14441,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14349,
									"end": 14442,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 14349,
									"end": 14442,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14349,
									"end": 14442,
									"name": "tag",
									"source": 7,
									"value": "267"
								},
								{
									"begin": 14349,
									"end": 14442,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14467,
									"end": 14469,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 14462,
									"end": 14465,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14458,
									"end": 14470,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 14451,
									"end": 14470,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14451,
									"end": 14470,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14110,
									"end": 14476,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14110,
									"end": 14476,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14110,
									"end": 14476,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14110,
									"end": 14476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14482,
									"end": 14901,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 14482,
									"end": 14901,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14648,
									"end": 14652,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14686,
									"end": 14688,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 14675,
									"end": 14684,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14671,
									"end": 14689,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 14663,
									"end": 14689,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14663,
									"end": 14689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14735,
									"end": 14744,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 14729,
									"end": 14733,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 14725,
									"end": 14745,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 14721,
									"end": 14722,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14710,
									"end": 14719,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 14706,
									"end": 14723,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 14699,
									"end": 14746,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 14763,
									"end": 14894,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "269"
								},
								{
									"begin": 14889,
									"end": 14893,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 14763,
									"end": 14894,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 14763,
									"end": 14894,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14763,
									"end": 14894,
									"name": "tag",
									"source": 7,
									"value": "269"
								},
								{
									"begin": 14763,
									"end": 14894,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14755,
									"end": 14894,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14755,
									"end": 14894,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14482,
									"end": 14901,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14482,
									"end": 14901,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14482,
									"end": 14901,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14482,
									"end": 14901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14907,
									"end": 15317,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 14907,
									"end": 15317,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14947,
									"end": 14954,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14970,
									"end": 14990,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "271"
								},
								{
									"begin": 14988,
									"end": 14989,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14970,
									"end": 14990,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 14970,
									"end": 14990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14970,
									"end": 14990,
									"name": "tag",
									"source": 7,
									"value": "271"
								},
								{
									"begin": 14970,
									"end": 14990,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14965,
									"end": 14990,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14965,
									"end": 14990,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15004,
									"end": 15024,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "272"
								},
								{
									"begin": 15022,
									"end": 15023,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 15004,
									"end": 15024,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 15004,
									"end": 15024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15004,
									"end": 15024,
									"name": "tag",
									"source": 7,
									"value": "272"
								},
								{
									"begin": 15004,
									"end": 15024,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14999,
									"end": 15024,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 14999,
									"end": 15024,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15059,
									"end": 15060,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15056,
									"end": 15057,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15052,
									"end": 15061,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 15081,
									"end": 15111,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "273"
								},
								{
									"begin": 15099,
									"end": 15110,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 15081,
									"end": 15111,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 15081,
									"end": 15111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15081,
									"end": 15111,
									"name": "tag",
									"source": 7,
									"value": "273"
								},
								{
									"begin": 15081,
									"end": 15111,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15070,
									"end": 15111,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 15070,
									"end": 15111,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15260,
									"end": 15261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15251,
									"end": 15258,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15247,
									"end": 15262,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 15244,
									"end": 15245,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 15241,
									"end": 15263,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 15221,
									"end": 15222,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 15214,
									"end": 15223,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 15194,
									"end": 15277,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 15171,
									"end": 15310,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "274"
								},
								{
									"begin": 15171,
									"end": 15310,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 15290,
									"end": 15308,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "275"
								},
								{
									"begin": 15290,
									"end": 15308,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 15290,
									"end": 15308,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15290,
									"end": 15308,
									"name": "tag",
									"source": 7,
									"value": "275"
								},
								{
									"begin": 15290,
									"end": 15308,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15171,
									"end": 15310,
									"name": "tag",
									"source": 7,
									"value": "274"
								},
								{
									"begin": 15171,
									"end": 15310,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14955,
									"end": 15317,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14907,
									"end": 15317,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 14907,
									"end": 15317,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14907,
									"end": 15317,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14907,
									"end": 15317,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14907,
									"end": 15317,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15323,
									"end": 15514,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 15323,
									"end": 15514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15363,
									"end": 15366,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 15382,
									"end": 15402,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "277"
								},
								{
									"begin": 15400,
									"end": 15401,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15382,
									"end": 15402,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 15382,
									"end": 15402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15382,
									"end": 15402,
									"name": "tag",
									"source": 7,
									"value": "277"
								},
								{
									"begin": 15382,
									"end": 15402,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15377,
									"end": 15402,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 15377,
									"end": 15402,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15416,
									"end": 15436,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "278"
								},
								{
									"begin": 15434,
									"end": 15435,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 15416,
									"end": 15436,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 15416,
									"end": 15436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15416,
									"end": 15436,
									"name": "tag",
									"source": 7,
									"value": "278"
								},
								{
									"begin": 15416,
									"end": 15436,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15411,
									"end": 15436,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 15411,
									"end": 15436,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15459,
									"end": 15460,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15456,
									"end": 15457,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15452,
									"end": 15461,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 15445,
									"end": 15461,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 15445,
									"end": 15461,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15480,
									"end": 15483,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 15477,
									"end": 15478,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15474,
									"end": 15484,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 15471,
									"end": 15507,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 15471,
									"end": 15507,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "279"
								},
								{
									"begin": 15471,
									"end": 15507,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 15487,
									"end": 15505,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "280"
								},
								{
									"begin": 15487,
									"end": 15505,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 15487,
									"end": 15505,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15487,
									"end": 15505,
									"name": "tag",
									"source": 7,
									"value": "280"
								},
								{
									"begin": 15487,
									"end": 15505,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15471,
									"end": 15507,
									"name": "tag",
									"source": 7,
									"value": "279"
								},
								{
									"begin": 15471,
									"end": 15507,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15323,
									"end": 15514,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 15323,
									"end": 15514,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 15323,
									"end": 15514,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15323,
									"end": 15514,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15323,
									"end": 15514,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15520,
									"end": 15638,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 15520,
									"end": 15638,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15607,
									"end": 15631,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "282"
								},
								{
									"begin": 15625,
									"end": 15630,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 15607,
									"end": 15631,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 15607,
									"end": 15631,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15607,
									"end": 15631,
									"name": "tag",
									"source": 7,
									"value": "282"
								},
								{
									"begin": 15607,
									"end": 15631,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15602,
									"end": 15605,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15595,
									"end": 15632,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 15520,
									"end": 15638,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15520,
									"end": 15638,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15520,
									"end": 15638,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15644,
									"end": 16086,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 15644,
									"end": 16086,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15793,
									"end": 15797,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 15831,
									"end": 15833,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 15820,
									"end": 15829,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15816,
									"end": 15834,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 15808,
									"end": 15834,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 15808,
									"end": 15834,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15844,
									"end": 15915,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "284"
								},
								{
									"begin": 15912,
									"end": 15913,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 15901,
									"end": 15910,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 15897,
									"end": 15914,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 15888,
									"end": 15894,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 15844,
									"end": 15915,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 15844,
									"end": 15915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15844,
									"end": 15915,
									"name": "tag",
									"source": 7,
									"value": "284"
								},
								{
									"begin": 15844,
									"end": 15915,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15925,
									"end": 15997,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "285"
								},
								{
									"begin": 15993,
									"end": 15995,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 15982,
									"end": 15991,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 15978,
									"end": 15996,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 15969,
									"end": 15975,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 15925,
									"end": 15997,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 15925,
									"end": 15997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15925,
									"end": 15997,
									"name": "tag",
									"source": 7,
									"value": "285"
								},
								{
									"begin": 15925,
									"end": 15997,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 16007,
									"end": 16079,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "286"
								},
								{
									"begin": 16075,
									"end": 16077,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 16064,
									"end": 16073,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 16060,
									"end": 16078,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 16051,
									"end": 16057,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 16007,
									"end": 16079,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 16007,
									"end": 16079,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 16007,
									"end": 16079,
									"name": "tag",
									"source": 7,
									"value": "286"
								},
								{
									"begin": 16007,
									"end": 16079,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15644,
									"end": 16086,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 15644,
									"end": 16086,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 15644,
									"end": 16086,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15644,
									"end": 16086,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15644,
									"end": 16086,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15644,
									"end": 16086,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15644,
									"end": 16086,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 16092,
									"end": 16314,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 16092,
									"end": 16314,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 16185,
									"end": 16189,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 16223,
									"end": 16225,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 16212,
									"end": 16221,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 16208,
									"end": 16226,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 16200,
									"end": 16226,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 16200,
									"end": 16226,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 16236,
									"end": 16307,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "288"
								},
								{
									"begin": 16304,
									"end": 16305,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 16293,
									"end": 16302,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 16289,
									"end": 16306,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 16280,
									"end": 16286,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 16236,
									"end": 16307,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 16236,
									"end": 16307,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 16236,
									"end": 16307,
									"name": "tag",
									"source": 7,
									"value": "288"
								},
								{
									"begin": 16236,
									"end": 16307,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 16092,
									"end": 16314,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 16092,
									"end": 16314,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 16092,
									"end": 16314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 16092,
									"end": 16314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 16092,
									"end": 16314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 329,
									"end": 2379,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 329,
									"end": 2379,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 329,
									"end": 2379,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 329,
									"end": 2379,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 329,
									"end": 2379,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 329,
									"end": 2379,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 329,
									"end": 2379,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 329,
									"end": 2379,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 329,
									"end": 2379,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dc45e9799e0210e85c11ec734e1240075e8e86c10eaacd18850f688779bf7eaf64736f6c634300081a0033",
									".code": [
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "42966C68"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "42966C68"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "4787CA2"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "135D088D"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 2379,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2202,
											"end": 2376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2202,
											"end": 2376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 476,
											"end": 498,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 476,
											"end": 498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 476,
											"end": 498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1525,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1525,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1906,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1906,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2301,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2309,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2314,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2280,
											"end": 2335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2280,
											"end": 2335,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2280,
											"end": 2335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2280,
											"end": 2335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2357,
											"end": 2368,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2346,
											"end": 2368,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2346,
											"end": 2368,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2368,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2346,
											"end": 2368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2346,
											"end": 2368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2368,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 476,
											"end": 498,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 476,
											"end": 498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 476,
											"end": 498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 476,
											"end": 498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 476,
											"end": 498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1601,
											"end": 1617,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1603,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1601,
											"end": 1617,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1597,
											"end": 1641,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1597,
											"end": 1641,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1641,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1619,
											"end": 1641,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1641,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1619,
											"end": 1641,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1641,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1619,
											"end": 1641,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1641,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1619,
											"end": 1641,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1641,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1619,
											"end": 1641,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1641,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1641,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1641,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1641,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1641,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1641,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1597,
											"end": 1641,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1597,
											"end": 1641,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1656,
											"end": 1662,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1667,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1690,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1652,
											"end": 1690,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 1690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1690,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 1690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1669,
											"end": 1690,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 1690,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 1690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1669,
											"end": 1690,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 1690,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1669,
											"end": 1690,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 1690,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1669,
											"end": 1690,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 1690,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1669,
											"end": 1690,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 1690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1690,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 1690,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 1690,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 1690,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 1690,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 1690,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1690,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1652,
											"end": 1690,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1718,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1707,
											"end": 1709,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1711,
											"end": 1717,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1701,
											"end": 1718,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1718,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1701,
											"end": 1718,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1970,
											"end": 1971,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1956,
											"end": 1994,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1973,
											"end": 1994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 1994,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1956,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2011,
											"end": 2021,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2029,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2005,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2030,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2005,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 2038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 2038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 580,
											"end": 682,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 580,
											"end": 682,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 621,
											"end": 627,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 674,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 668,
											"end": 675,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 663,
											"end": 665,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 648,
											"end": 676,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 638,
											"end": 676,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 638,
											"end": 676,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 580,
											"end": 682,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 580,
											"end": 682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 688,
											"end": 868,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 688,
											"end": 868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 736,
											"end": 813,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 733,
											"end": 734,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 814,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 833,
											"end": 837,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 823,
											"end": 838,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 862,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 979,
											"end": 983,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 957,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 957,
											"end": 984,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 957,
											"end": 984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 949,
											"end": 955,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 945,
											"end": 985,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1049,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1070,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1033,
											"end": 1095,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1098,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1149,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 874,
											"end": 1155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1222,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 1251,
											"end": 1284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1466,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1446,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1470,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 1530,
											"end": 1536,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1508,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1592,
											"end": 1596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1706,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1701,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 1749,
											"end": 1750,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1746,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1738,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1724,
											"end": 1751,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1847,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 1925,
											"end": 1931,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1883,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1867,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 1933,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 1933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1954,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 1998,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 1992,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 1999,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2035,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2029,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2021,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2030,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2011,
											"end": 2036,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2039,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2174,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2129,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1848,
											"end": 2189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 2189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2270,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2311,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2312,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2318,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 2322,
											"end": 2401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2439,
											"end": 2445,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2446,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 2539,
											"end": 2542,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2524,
											"end": 2528,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2529,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2464,
											"end": 2543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2455,
											"end": 2543,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2455,
											"end": 2543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2624,
											"end": 2630,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2661,
											"end": 2670,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2671,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2676,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2679,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 2828,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2825,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2812,
											"end": 2829,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2799,
											"end": 2830,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2875,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2876,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2879,
											"end": 2958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 3039,
											"end": 3046,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3036,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2984,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3047,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2770,
											"end": 3057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 3064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3169,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3070,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3128,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3156,
											"end": 3161,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3162,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3140,
											"end": 3162,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3140,
											"end": 3162,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3169,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3175,
											"end": 3344,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3175,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3259,
											"end": 3270,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3293,
											"end": 3299,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3291,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3281,
											"end": 3300,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3333,
											"end": 3337,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3328,
											"end": 3331,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3309,
											"end": 3338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3309,
											"end": 3338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3175,
											"end": 3344,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3175,
											"end": 3344,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3175,
											"end": 3344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3175,
											"end": 3344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3175,
											"end": 3344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3489,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3350,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3439,
											"end": 3445,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3434,
											"end": 3437,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3429,
											"end": 3432,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3423,
											"end": 3446,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 3480,
											"end": 3481,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3477,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3466,
											"end": 3469,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3478,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3482,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3495,
											"end": 3872,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3495,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3611,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 3644,
											"end": 3649,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3611,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3611,
											"end": 3650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3611,
											"end": 3650,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 3611,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 3730,
											"end": 3736,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3728,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3666,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3737,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 3666,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3659,
											"end": 3737,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3659,
											"end": 3737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3746,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3804,
											"end": 3810,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3799,
											"end": 3802,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3792,
											"end": 3796,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3785,
											"end": 3790,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3797,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3746,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3746,
											"end": 3811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3746,
											"end": 3811,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3746,
											"end": 3811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3836,
											"end": 3865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3831,
											"end": 3834,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3866,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 3866,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 3866,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3587,
											"end": 3872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3495,
											"end": 3872,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3495,
											"end": 3872,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3495,
											"end": 3872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3495,
											"end": 3872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3495,
											"end": 3872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 4191,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3878,
											"end": 4191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 3995,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4029,
											"end": 4031,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4018,
											"end": 4027,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4014,
											"end": 4032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4006,
											"end": 4032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4006,
											"end": 4032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4078,
											"end": 4087,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4072,
											"end": 4076,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4088,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4064,
											"end": 4065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4062,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4049,
											"end": 4066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4089,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 4179,
											"end": 4183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4176,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 4106,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4184,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 4106,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4098,
											"end": 4184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4098,
											"end": 4184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 4191,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 4191,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 4191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 4191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 4191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4197,
											"end": 4323,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 4197,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4241,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4274,
											"end": 4316,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4267,
											"end": 4272,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4263,
											"end": 4317,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4252,
											"end": 4317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4252,
											"end": 4317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4197,
											"end": 4323,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4197,
											"end": 4323,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4197,
											"end": 4323,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4197,
											"end": 4323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4425,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4329,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4366,
											"end": 4373,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 4413,
											"end": 4418,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4395,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 4395,
											"end": 4419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4395,
											"end": 4419,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 4395,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4425,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4425,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4425,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4431,
											"end": 4553,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4431,
											"end": 4553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 4522,
											"end": 4527,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4504,
											"end": 4528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4528,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 4504,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4502,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4529,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4484,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 4484,
											"end": 4547,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4543,
											"end": 4544,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4540,
											"end": 4541,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4545,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4484,
											"end": 4547,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 4484,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4431,
											"end": 4553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4431,
											"end": 4553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4698,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4559,
											"end": 4698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4605,
											"end": 4610,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4643,
											"end": 4649,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4650,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 4650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 4650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4659,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 4686,
											"end": 4691,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4659,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4659,
											"end": 4692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4659,
											"end": 4692,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 4659,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4698,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4698,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4781,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 4704,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4741,
											"end": 4748,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4775,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4759,
											"end": 4775,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4759,
											"end": 4775,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4781,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4781,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4909,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4787,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 4878,
											"end": 4883,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 4860,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4884,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 4860,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 4858,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4885,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4840,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 4840,
											"end": 4903,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4899,
											"end": 4900,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4896,
											"end": 4897,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4889,
											"end": 4901,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4840,
											"end": 4903,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 4840,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4915,
											"end": 5054,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4915,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4961,
											"end": 4966,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5005,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5006,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 5006,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 5006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 5042,
											"end": 5047,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5015,
											"end": 5048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5048,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 5015,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4915,
											"end": 5054,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4915,
											"end": 5054,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4915,
											"end": 5054,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4915,
											"end": 5054,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4915,
											"end": 5054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5534,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 5060,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5128,
											"end": 5134,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5136,
											"end": 5142,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5187,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5173,
											"end": 5182,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5164,
											"end": 5171,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5183,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5156,
											"end": 5188,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5272,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 5153,
											"end": 5272,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5191,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 5191,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 5191,
											"end": 5270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5191,
											"end": 5270,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 5191,
											"end": 5270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5272,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 5153,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5311,
											"end": 5312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 5381,
											"end": 5388,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5372,
											"end": 5378,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5361,
											"end": 5370,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5357,
											"end": 5379,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5336,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5336,
											"end": 5389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5336,
											"end": 5389,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 5336,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5326,
											"end": 5389,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5326,
											"end": 5389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5440,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 5509,
											"end": 5516,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 5498,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 5464,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5409,
											"end": 5527,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5534,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5534,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5630,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 5540,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5617,
											"end": 5622,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5623,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5603,
											"end": 5624,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5592,
											"end": 5624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5592,
											"end": 5624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5630,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5630,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5630,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5636,
											"end": 5745,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 5636,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5717,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 5732,
											"end": 5737,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5717,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 5717,
											"end": 5738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5717,
											"end": 5738,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 5717,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5715,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5705,
											"end": 5739,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5636,
											"end": 5745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5636,
											"end": 5745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5636,
											"end": 5745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5751,
											"end": 5961,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 5751,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5838,
											"end": 5842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5876,
											"end": 5878,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5865,
											"end": 5874,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5853,
											"end": 5879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5853,
											"end": 5879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5889,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 5951,
											"end": 5952,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5940,
											"end": 5949,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 5953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5927,
											"end": 5933,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5889,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 5889,
											"end": 5954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5889,
											"end": 5954,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 5889,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5751,
											"end": 5961,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5751,
											"end": 5961,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5751,
											"end": 5961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5751,
											"end": 5961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5751,
											"end": 5961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5967,
											"end": 6085,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5967,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6054,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 6072,
											"end": 6077,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6054,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 6054,
											"end": 6078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6054,
											"end": 6078,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 6054,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6052,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6042,
											"end": 6079,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5967,
											"end": 6085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5967,
											"end": 6085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5967,
											"end": 6085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6091,
											"end": 6313,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 6091,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6184,
											"end": 6188,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6222,
											"end": 6224,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6225,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 6303,
											"end": 6304,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6301,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6288,
											"end": 6305,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6279,
											"end": 6285,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 6235,
											"end": 6306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6091,
											"end": 6313,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6091,
											"end": 6313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6091,
											"end": 6313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6091,
											"end": 6313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6091,
											"end": 6313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6319,
											"end": 6938,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 6319,
											"end": 6938,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6404,
											"end": 6410,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6412,
											"end": 6418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6461,
											"end": 6463,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6449,
											"end": 6458,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 6447,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6436,
											"end": 6459,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6432,
											"end": 6464,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6548,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 6429,
											"end": 6548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 6467,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 6467,
											"end": 6546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6546,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 6467,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6548,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 6429,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6587,
											"end": 6588,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6612,
											"end": 6665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 6657,
											"end": 6664,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6654,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6637,
											"end": 6646,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6633,
											"end": 6655,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 6612,
											"end": 6665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6665,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 6612,
											"end": 6665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6665,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6665,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6675,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6740,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 6785,
											"end": 6792,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6776,
											"end": 6782,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6765,
											"end": 6774,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6761,
											"end": 6783,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6740,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 6740,
											"end": 6793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6740,
											"end": 6793,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 6740,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6730,
											"end": 6793,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6730,
											"end": 6793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6803,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6842,
											"end": 6844,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6868,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 6913,
											"end": 6920,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6904,
											"end": 6910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6893,
											"end": 6902,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6868,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6868,
											"end": 6921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6868,
											"end": 6921,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 6868,
											"end": 6921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6858,
											"end": 6921,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6858,
											"end": 6921,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6813,
											"end": 6931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6319,
											"end": 6938,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6319,
											"end": 6938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6319,
											"end": 6938,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6319,
											"end": 6938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6319,
											"end": 6938,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6319,
											"end": 6938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 7030,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 6944,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6979,
											"end": 6986,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7019,
											"end": 7023,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 7012,
											"end": 7017,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7024,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6997,
											"end": 7024,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6997,
											"end": 7024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 7030,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 7030,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 7030,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 7030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7148,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 7036,
											"end": 7148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 7135,
											"end": 7140,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 7119,
											"end": 7141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7141,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 7119,
											"end": 7141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7142,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7154,
											"end": 7368,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 7154,
											"end": 7368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7243,
											"end": 7247,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7281,
											"end": 7283,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7270,
											"end": 7279,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7258,
											"end": 7284,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7258,
											"end": 7284,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7294,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 7358,
											"end": 7359,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7347,
											"end": 7356,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7343,
											"end": 7360,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7334,
											"end": 7340,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7294,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 7294,
											"end": 7361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7294,
											"end": 7361,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 7294,
											"end": 7361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7154,
											"end": 7368,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7154,
											"end": 7368,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7154,
											"end": 7368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7154,
											"end": 7368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7154,
											"end": 7368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7374,
											"end": 7703,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 7374,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7433,
											"end": 7439,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7482,
											"end": 7484,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7470,
											"end": 7479,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7461,
											"end": 7468,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7457,
											"end": 7480,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7450,
											"end": 7569,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7450,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 7450,
											"end": 7569,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7488,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 7488,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 7488,
											"end": 7567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7488,
											"end": 7567,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 7488,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7450,
											"end": 7569,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 7450,
											"end": 7569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7608,
											"end": 7609,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7633,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 7678,
											"end": 7685,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7669,
											"end": 7675,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7658,
											"end": 7667,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7654,
											"end": 7676,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7633,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 7633,
											"end": 7686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7633,
											"end": 7686,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 7633,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7623,
											"end": 7686,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7623,
											"end": 7686,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7579,
											"end": 7696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7374,
											"end": 7703,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7374,
											"end": 7703,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7374,
											"end": 7703,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7374,
											"end": 7703,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7374,
											"end": 7703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7709,
											"end": 8038,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 7709,
											"end": 8038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7768,
											"end": 7774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7819,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7805,
											"end": 7814,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7803,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7792,
											"end": 7815,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7788,
											"end": 7820,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7785,
											"end": 7904,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7785,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 7785,
											"end": 7904,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 7823,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 7823,
											"end": 7902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7902,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 7823,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7785,
											"end": 7904,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 7785,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7943,
											"end": 7944,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7968,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 8013,
											"end": 8020,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8004,
											"end": 8010,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7993,
											"end": 8002,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8011,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 7968,
											"end": 8021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 8021,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 7968,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 8021,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 8021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7914,
											"end": 8031,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7709,
											"end": 8038,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7709,
											"end": 8038,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7709,
											"end": 8038,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7709,
											"end": 8038,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7709,
											"end": 8038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8044,
											"end": 8162,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 8044,
											"end": 8162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8131,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 8149,
											"end": 8154,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8131,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 8131,
											"end": 8155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8131,
											"end": 8155,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 8131,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8126,
											"end": 8129,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8119,
											"end": 8156,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8044,
											"end": 8162,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8044,
											"end": 8162,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8044,
											"end": 8162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8390,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 8168,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8261,
											"end": 8265,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8299,
											"end": 8301,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8288,
											"end": 8297,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8284,
											"end": 8302,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8312,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 8380,
											"end": 8381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8369,
											"end": 8378,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8365,
											"end": 8382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8362,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8312,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 8312,
											"end": 8383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8312,
											"end": 8383,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 8312,
											"end": 8383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8390,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8390,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8396,
											"end": 8870,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 8396,
											"end": 8870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8464,
											"end": 8470,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8472,
											"end": 8478,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8521,
											"end": 8523,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8509,
											"end": 8518,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 8507,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8496,
											"end": 8519,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8492,
											"end": 8524,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8489,
											"end": 8608,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8489,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 8489,
											"end": 8608,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8527,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 8527,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 8527,
											"end": 8606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8527,
											"end": 8606,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 8527,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8489,
											"end": 8608,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 8489,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8647,
											"end": 8648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8672,
											"end": 8725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 8717,
											"end": 8724,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8708,
											"end": 8714,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8697,
											"end": 8706,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8693,
											"end": 8715,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8672,
											"end": 8725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 8672,
											"end": 8725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8672,
											"end": 8725,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 8672,
											"end": 8725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8725,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8618,
											"end": 8735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8774,
											"end": 8776,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8800,
											"end": 8853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 8845,
											"end": 8852,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8842,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8825,
											"end": 8834,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8821,
											"end": 8843,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 8800,
											"end": 8853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8853,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 8800,
											"end": 8853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8790,
											"end": 8853,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8790,
											"end": 8853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8745,
											"end": 8863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8396,
											"end": 8870,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8396,
											"end": 8870,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8396,
											"end": 8870,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8396,
											"end": 8870,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8396,
											"end": 8870,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8396,
											"end": 8870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8876,
											"end": 9035,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 8876,
											"end": 9035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9016,
											"end": 9027,
											"name": "PUSH",
											"source": 7,
											"value": "456D707479205552490000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9012,
											"end": 9013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9004,
											"end": 9010,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9000,
											"end": 9014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8993,
											"end": 9028,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8876,
											"end": 9035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8876,
											"end": 9035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9406,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 9041,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9186,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 9268,
											"end": 9269,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 9263,
											"end": 9266,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9204,
											"end": 9270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 9204,
											"end": 9270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9204,
											"end": 9270,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 9204,
											"end": 9270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9197,
											"end": 9270,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9197,
											"end": 9270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9279,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 9368,
											"end": 9371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9279,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 9279,
											"end": 9372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9279,
											"end": 9372,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 9279,
											"end": 9372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9397,
											"end": 9399,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9392,
											"end": 9395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9400,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9381,
											"end": 9400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9381,
											"end": 9400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9406,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9406,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9831,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 9412,
											"end": 9831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9578,
											"end": 9582,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9616,
											"end": 9618,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9614,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9601,
											"end": 9619,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9593,
											"end": 9619,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9593,
											"end": 9619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9665,
											"end": 9674,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9659,
											"end": 9663,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9655,
											"end": 9675,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9651,
											"end": 9652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9640,
											"end": 9649,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9636,
											"end": 9653,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9629,
											"end": 9676,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9693,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 9819,
											"end": 9823,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9693,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 9693,
											"end": 9824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9693,
											"end": 9824,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 9693,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9685,
											"end": 9824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9685,
											"end": 9824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9837,
											"end": 10017,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 9837,
											"end": 10017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9885,
											"end": 9962,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9882,
											"end": 9883,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9875,
											"end": 9963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9982,
											"end": 9986,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 9979,
											"end": 9980,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9972,
											"end": 9987,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10010,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10003,
											"end": 10004,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9996,
											"end": 10011,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10023,
											"end": 10343,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 10023,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10104,
											"end": 10105,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 10098,
											"end": 10102,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10094,
											"end": 10106,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10084,
											"end": 10106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10084,
											"end": 10106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10151,
											"end": 10152,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10145,
											"end": 10149,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10141,
											"end": 10153,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10162,
											"end": 10243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 10162,
											"end": 10243,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10228,
											"end": 10232,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 10220,
											"end": 10226,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10216,
											"end": 10233,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10206,
											"end": 10233,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10206,
											"end": 10233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10162,
											"end": 10243,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 10162,
											"end": 10243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10290,
											"end": 10292,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10282,
											"end": 10288,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10279,
											"end": 10293,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10259,
											"end": 10277,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10256,
											"end": 10294,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10253,
											"end": 10337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 10253,
											"end": 10337,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10309,
											"end": 10327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 10309,
											"end": 10327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 10309,
											"end": 10327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10309,
											"end": 10327,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 10309,
											"end": 10327,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10253,
											"end": 10337,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 10253,
											"end": 10337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10074,
											"end": 10343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10023,
											"end": 10343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10023,
											"end": 10343,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10023,
											"end": 10343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10023,
											"end": 10343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10349,
											"end": 10490,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 10349,
											"end": 10490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10398,
											"end": 10402,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10421,
											"end": 10424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10413,
											"end": 10424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10413,
											"end": 10424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10444,
											"end": 10447,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10441,
											"end": 10442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10434,
											"end": 10448,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10478,
											"end": 10482,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10475,
											"end": 10476,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10457,
											"end": 10483,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10457,
											"end": 10483,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10349,
											"end": 10490,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10349,
											"end": 10490,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10349,
											"end": 10490,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10349,
											"end": 10490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10496,
											"end": 10589,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 10496,
											"end": 10589,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10533,
											"end": 10539,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10580,
											"end": 10582,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10575,
											"end": 10577,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 10568,
											"end": 10573,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10564,
											"end": 10578,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10560,
											"end": 10583,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10496,
											"end": 10589,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10496,
											"end": 10589,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10496,
											"end": 10589,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10496,
											"end": 10589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10595,
											"end": 10702,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 10595,
											"end": 10702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10639,
											"end": 10647,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10689,
											"end": 10694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10679,
											"end": 10695,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 10658,
											"end": 10695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10658,
											"end": 10695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10595,
											"end": 10702,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10595,
											"end": 10702,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10595,
											"end": 10702,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10595,
											"end": 10702,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10595,
											"end": 10702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10708,
											"end": 11101,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 10708,
											"end": 11101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10777,
											"end": 10783,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10827,
											"end": 10828,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 10815,
											"end": 10825,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10811,
											"end": 10829,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 10850,
											"end": 10947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 10880,
											"end": 10946,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10869,
											"end": 10878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10850,
											"end": 10947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 10850,
											"end": 10947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10850,
											"end": 10947,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 10850,
											"end": 10947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10968,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 10998,
											"end": 11006,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10987,
											"end": 10996,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10968,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 10968,
											"end": 11007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10968,
											"end": 11007,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 10968,
											"end": 11007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10956,
											"end": 11007,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 10956,
											"end": 11007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11040,
											"end": 11044,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11036,
											"end": 11045,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 11029,
											"end": 11034,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11025,
											"end": 11046,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11016,
											"end": 11046,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 11016,
											"end": 11046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11089,
											"end": 11093,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11087,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11075,
											"end": 11094,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11068,
											"end": 11073,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11065,
											"end": 11095,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 11055,
											"end": 11095,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11055,
											"end": 11095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10784,
											"end": 11101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10784,
											"end": 11101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10708,
											"end": 11101,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10708,
											"end": 11101,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10708,
											"end": 11101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10708,
											"end": 11101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10708,
											"end": 11101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10708,
											"end": 11101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11107,
											"end": 11167,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 11107,
											"end": 11167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11135,
											"end": 11138,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11156,
											"end": 11161,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11149,
											"end": 11161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11149,
											"end": 11161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11107,
											"end": 11167,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11107,
											"end": 11167,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11107,
											"end": 11167,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11107,
											"end": 11167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11173,
											"end": 11315,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 11173,
											"end": 11315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11223,
											"end": 11232,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11256,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 11274,
											"end": 11308,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 11283,
											"end": 11307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 11301,
											"end": 11306,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11283,
											"end": 11307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 11283,
											"end": 11307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11283,
											"end": 11307,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 11283,
											"end": 11307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11274,
											"end": 11308,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 11274,
											"end": 11308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11274,
											"end": 11308,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 11274,
											"end": 11308,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11256,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 11256,
											"end": 11309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11256,
											"end": 11309,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 11256,
											"end": 11309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11243,
											"end": 11309,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11243,
											"end": 11309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11173,
											"end": 11315,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11173,
											"end": 11315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11173,
											"end": 11315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11173,
											"end": 11315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11321,
											"end": 11396,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 11321,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11364,
											"end": 11367,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11385,
											"end": 11390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11378,
											"end": 11390,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11378,
											"end": 11390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11321,
											"end": 11396,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11321,
											"end": 11396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11321,
											"end": 11396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11321,
											"end": 11396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11402,
											"end": 11671,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 11402,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11512,
											"end": 11551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 11543,
											"end": 11550,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11512,
											"end": 11551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 11512,
											"end": 11551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11512,
											"end": 11551,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 11512,
											"end": 11551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11573,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 11622,
											"end": 11663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 11646,
											"end": 11662,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11622,
											"end": 11663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 11622,
											"end": 11663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11622,
											"end": 11663,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 11622,
											"end": 11663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11614,
											"end": 11620,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11607,
											"end": 11611,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11601,
											"end": 11612,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11573,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 11573,
											"end": 11664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11573,
											"end": 11664,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 11573,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11567,
											"end": 11571,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11560,
											"end": 11665,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 11478,
											"end": 11671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11402,
											"end": 11671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11402,
											"end": 11671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11402,
											"end": 11671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11402,
											"end": 11671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11677,
											"end": 11750,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 11677,
											"end": 11750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11722,
											"end": 11725,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11677,
											"end": 11750,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11677,
											"end": 11750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11756,
											"end": 11945,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 11756,
											"end": 11945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11833,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 11833,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 11833,
											"end": 11865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11833,
											"end": 11865,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 11833,
											"end": 11865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11874,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 11932,
											"end": 11938,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11924,
											"end": 11930,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11918,
											"end": 11922,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11874,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 11874,
											"end": 11939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11874,
											"end": 11939,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 11874,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11809,
											"end": 11945,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11756,
											"end": 11945,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11756,
											"end": 11945,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11756,
											"end": 11945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11951,
											"end": 12137,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 11951,
											"end": 12137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12011,
											"end": 12131,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 12011,
											"end": 12131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12028,
											"end": 12031,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12021,
											"end": 12026,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12018,
											"end": 12032,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 12011,
											"end": 12131,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12011,
											"end": 12131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 12011,
											"end": 12131,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12082,
											"end": 12121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 12119,
											"end": 12120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12112,
											"end": 12117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12082,
											"end": 12121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 12082,
											"end": 12121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12082,
											"end": 12121,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 12082,
											"end": 12121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12055,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 12048,
											"end": 12053,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12044,
											"end": 12057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12035,
											"end": 12057,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12035,
											"end": 12057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12011,
											"end": 12131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 12011,
											"end": 12131,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12011,
											"end": 12131,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 12011,
											"end": 12131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11951,
											"end": 12137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11951,
											"end": 12137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11951,
											"end": 12137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12143,
											"end": 12686,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 12143,
											"end": 12686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12244,
											"end": 12246,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 12239,
											"end": 12242,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12236,
											"end": 12247,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 12233,
											"end": 12679,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12233,
											"end": 12679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 12233,
											"end": 12679,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12278,
											"end": 12316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 12310,
											"end": 12315,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12278,
											"end": 12316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 12278,
											"end": 12316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12278,
											"end": 12316,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 12278,
											"end": 12316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12362,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 12380,
											"end": 12390,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12362,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 12362,
											"end": 12391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12362,
											"end": 12391,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 12362,
											"end": 12391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12352,
											"end": 12360,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12348,
											"end": 12392,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12545,
											"end": 12547,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12533,
											"end": 12543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12530,
											"end": 12548,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 12527,
											"end": 12576,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12527,
											"end": 12576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 12527,
											"end": 12576,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12566,
											"end": 12574,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12551,
											"end": 12574,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12551,
											"end": 12574,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12527,
											"end": 12576,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 12527,
											"end": 12576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12589,
											"end": 12669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 12645,
											"end": 12667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 12663,
											"end": 12666,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12645,
											"end": 12667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 12645,
											"end": 12667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12645,
											"end": 12667,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 12645,
											"end": 12667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12635,
											"end": 12643,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12631,
											"end": 12668,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12618,
											"end": 12629,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12589,
											"end": 12669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 12589,
											"end": 12669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12589,
											"end": 12669,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 12589,
											"end": 12669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12248,
											"end": 12679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12248,
											"end": 12679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12233,
											"end": 12679,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 12233,
											"end": 12679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12143,
											"end": 12686,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12143,
											"end": 12686,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12143,
											"end": 12686,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12143,
											"end": 12686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12692,
											"end": 12809,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 12692,
											"end": 12809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12746,
											"end": 12754,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12796,
											"end": 12801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12790,
											"end": 12794,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12786,
											"end": 12802,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 12765,
											"end": 12802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12765,
											"end": 12802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12692,
											"end": 12809,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12692,
											"end": 12809,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12692,
											"end": 12809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12692,
											"end": 12809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12692,
											"end": 12809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12815,
											"end": 12984,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 12815,
											"end": 12984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12859,
											"end": 12865,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12892,
											"end": 12943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 12940,
											"end": 12941,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12936,
											"end": 12942,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 12928,
											"end": 12933,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12925,
											"end": 12926,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 12921,
											"end": 12934,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 12892,
											"end": 12943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 12892,
											"end": 12943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12892,
											"end": 12943,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 12892,
											"end": 12943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12888,
											"end": 12944,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 12973,
											"end": 12977,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12967,
											"end": 12971,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12963,
											"end": 12978,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12953,
											"end": 12978,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12953,
											"end": 12978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12866,
											"end": 12984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12815,
											"end": 12984,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12815,
											"end": 12984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12815,
											"end": 12984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12815,
											"end": 12984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12815,
											"end": 12984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12989,
											"end": 13284,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 12989,
											"end": 13284,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13065,
											"end": 13069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13211,
											"end": 13240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 13236,
											"end": 13239,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13230,
											"end": 13234,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13211,
											"end": 13240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 13211,
											"end": 13240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13211,
											"end": 13240,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 13211,
											"end": 13240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13203,
											"end": 13240,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13203,
											"end": 13240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13273,
											"end": 13276,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13270,
											"end": 13271,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 13266,
											"end": 13277,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 13260,
											"end": 13264,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13257,
											"end": 13278,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 13249,
											"end": 13278,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13249,
											"end": 13278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12989,
											"end": 13284,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12989,
											"end": 13284,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12989,
											"end": 13284,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12989,
											"end": 13284,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12989,
											"end": 13284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13289,
											"end": 14684,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 13289,
											"end": 14684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13406,
											"end": 13443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 13439,
											"end": 13442,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13406,
											"end": 13443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 13406,
											"end": 13443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13406,
											"end": 13443,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 13406,
											"end": 13443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13508,
											"end": 13526,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13500,
											"end": 13506,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13497,
											"end": 13527,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 13494,
											"end": 13550,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13494,
											"end": 13550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 13494,
											"end": 13550,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13530,
											"end": 13548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 13530,
											"end": 13548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 13530,
											"end": 13548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13530,
											"end": 13548,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 13530,
											"end": 13548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13494,
											"end": 13550,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 13494,
											"end": 13550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13574,
											"end": 13612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 13606,
											"end": 13610,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13600,
											"end": 13611,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13574,
											"end": 13612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 13574,
											"end": 13612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13574,
											"end": 13612,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 13574,
											"end": 13612,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13659,
											"end": 13726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 13719,
											"end": 13725,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13711,
											"end": 13717,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13705,
											"end": 13709,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13659,
											"end": 13726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 13659,
											"end": 13726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13659,
											"end": 13726,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 13659,
											"end": 13726,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13753,
											"end": 13754,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13781,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13764,
											"end": 13781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13764,
											"end": 13781,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13809,
											"end": 13811,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 13801,
											"end": 13807,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13798,
											"end": 13812,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 13826,
											"end": 13827,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 13821,
											"end": 14439,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13821,
											"end": 14439,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13821,
											"end": 14439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 13821,
											"end": 14439,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14483,
											"end": 14484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14500,
											"end": 14506,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14497,
											"end": 14574,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14497,
											"end": 14574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 14497,
											"end": 14574,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14549,
											"end": 14558,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14544,
											"end": 14547,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 14540,
											"end": 14559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14534,
											"end": 14560,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14525,
											"end": 14560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14525,
											"end": 14560,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14497,
											"end": 14574,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 14497,
											"end": 14574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14600,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 14660,
											"end": 14666,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14653,
											"end": 14658,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14600,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 14600,
											"end": 14667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14600,
											"end": 14667,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 14600,
											"end": 14667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14594,
											"end": 14598,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14587,
											"end": 14668,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 14456,
											"end": 14678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13791,
											"end": 14678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 13791,
											"end": 14678,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13821,
											"end": 14439,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 13821,
											"end": 14439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13873,
											"end": 13877,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 13869,
											"end": 13878,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 13861,
											"end": 13867,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13857,
											"end": 13879,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13907,
											"end": 13944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 13939,
											"end": 13943,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13907,
											"end": 13944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 13907,
											"end": 13944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13907,
											"end": 13944,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 13907,
											"end": 13944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13966,
											"end": 13967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13980,
											"end": 14188,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 13980,
											"end": 14188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13994,
											"end": 14001,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13991,
											"end": 13992,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13988,
											"end": 14002,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 14188,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 14188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 13980,
											"end": 14188,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14073,
											"end": 14082,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14068,
											"end": 14071,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 14064,
											"end": 14083,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14058,
											"end": 14084,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14050,
											"end": 14056,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14043,
											"end": 14085,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 14124,
											"end": 14125,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 14116,
											"end": 14122,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14112,
											"end": 14126,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14102,
											"end": 14126,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14102,
											"end": 14126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14171,
											"end": 14173,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14160,
											"end": 14169,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14156,
											"end": 14174,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14143,
											"end": 14174,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 14143,
											"end": 14174,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14017,
											"end": 14021,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14014,
											"end": 14015,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14010,
											"end": 14022,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14005,
											"end": 14022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14005,
											"end": 14022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 14188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 13980,
											"end": 14188,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 14188,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 13980,
											"end": 14188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14216,
											"end": 14222,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14207,
											"end": 14214,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14204,
											"end": 14223,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 14201,
											"end": 14380,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14201,
											"end": 14380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 14201,
											"end": 14380,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14274,
											"end": 14283,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14269,
											"end": 14272,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 14265,
											"end": 14284,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14259,
											"end": 14285,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14317,
											"end": 14365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 14359,
											"end": 14363,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 14351,
											"end": 14357,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 14347,
											"end": 14364,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14336,
											"end": 14345,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14317,
											"end": 14365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 14317,
											"end": 14365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14317,
											"end": 14365,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 14317,
											"end": 14365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14309,
											"end": 14315,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14302,
											"end": 14366,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 14224,
											"end": 14380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14201,
											"end": 14380,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 14201,
											"end": 14380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14426,
											"end": 14427,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 14422,
											"end": 14423,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 14414,
											"end": 14420,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 14410,
											"end": 14424,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 14406,
											"end": 14428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14400,
											"end": 14404,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 14393,
											"end": 14429,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 13828,
											"end": 14439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13828,
											"end": 14439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13828,
											"end": 14439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13791,
											"end": 14678,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 13791,
											"end": 14678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13791,
											"end": 14678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13381,
											"end": 14684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13381,
											"end": 14684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13381,
											"end": 14684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13289,
											"end": 14684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13289,
											"end": 14684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13289,
											"end": 14684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14690,
											"end": 14852,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 14690,
											"end": 14852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14830,
											"end": 14844,
											"name": "PUSH",
											"source": 7,
											"value": "5A65726F20616464726573730000000000000000000000000000000000000000"
										},
										{
											"begin": 14826,
											"end": 14827,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14818,
											"end": 14824,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14814,
											"end": 14828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14807,
											"end": 14845,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14690,
											"end": 14852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14690,
											"end": 14852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14858,
											"end": 15224,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 14858,
											"end": 15224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15000,
											"end": 15003,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15021,
											"end": 15088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 15085,
											"end": 15087,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 15080,
											"end": 15083,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15021,
											"end": 15088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 15021,
											"end": 15088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15021,
											"end": 15088,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 15021,
											"end": 15088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15014,
											"end": 15088,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15014,
											"end": 15088,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15097,
											"end": 15190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 15186,
											"end": 15189,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15097,
											"end": 15190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 15097,
											"end": 15190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15097,
											"end": 15190,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 15097,
											"end": 15190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15215,
											"end": 15217,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15210,
											"end": 15213,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15206,
											"end": 15218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15199,
											"end": 15218,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15199,
											"end": 15218,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14858,
											"end": 15224,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14858,
											"end": 15224,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14858,
											"end": 15224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14858,
											"end": 15224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15230,
											"end": 15649,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 15230,
											"end": 15649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15396,
											"end": 15400,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15434,
											"end": 15436,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15423,
											"end": 15432,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15419,
											"end": 15437,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15411,
											"end": 15437,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15411,
											"end": 15437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15483,
											"end": 15492,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15477,
											"end": 15481,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15473,
											"end": 15493,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15469,
											"end": 15470,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15458,
											"end": 15467,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15454,
											"end": 15471,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15447,
											"end": 15494,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15511,
											"end": 15642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 15637,
											"end": 15641,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15511,
											"end": 15642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 15511,
											"end": 15642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15511,
											"end": 15642,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 15511,
											"end": 15642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15503,
											"end": 15642,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15503,
											"end": 15642,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15230,
											"end": 15649,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15230,
											"end": 15649,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15230,
											"end": 15649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15230,
											"end": 15649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15655,
											"end": 15816,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 15655,
											"end": 15816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15795,
											"end": 15808,
											"name": "PUSH",
											"source": 7,
											"value": "5A65726F20616D6F756E74000000000000000000000000000000000000000000"
										},
										{
											"begin": 15791,
											"end": 15792,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15783,
											"end": 15789,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15779,
											"end": 15793,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15772,
											"end": 15809,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15655,
											"end": 15816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15655,
											"end": 15816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15822,
											"end": 16188,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 15822,
											"end": 16188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15964,
											"end": 15967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15985,
											"end": 16052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 16049,
											"end": 16051,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 16044,
											"end": 16047,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15985,
											"end": 16052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 15985,
											"end": 16052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15985,
											"end": 16052,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 15985,
											"end": 16052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15978,
											"end": 16052,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15978,
											"end": 16052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16061,
											"end": 16154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 16150,
											"end": 16153,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16061,
											"end": 16154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 16061,
											"end": 16154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16061,
											"end": 16154,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 16061,
											"end": 16154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16179,
											"end": 16181,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16174,
											"end": 16177,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16170,
											"end": 16182,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16163,
											"end": 16182,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16163,
											"end": 16182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15822,
											"end": 16188,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15822,
											"end": 16188,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15822,
											"end": 16188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15822,
											"end": 16188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16194,
											"end": 16613,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 16194,
											"end": 16613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16360,
											"end": 16364,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16398,
											"end": 16400,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16387,
											"end": 16396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16383,
											"end": 16401,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16375,
											"end": 16401,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16375,
											"end": 16401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16447,
											"end": 16456,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16441,
											"end": 16445,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16437,
											"end": 16457,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16433,
											"end": 16434,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16422,
											"end": 16431,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16418,
											"end": 16435,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16411,
											"end": 16458,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16475,
											"end": 16606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 16601,
											"end": 16605,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16475,
											"end": 16606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 16475,
											"end": 16606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16475,
											"end": 16606,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 16475,
											"end": 16606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16467,
											"end": 16606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16467,
											"end": 16606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16194,
											"end": 16613,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16194,
											"end": 16613,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16194,
											"end": 16613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16194,
											"end": 16613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16619,
											"end": 17061,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 16619,
											"end": 17061,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16768,
											"end": 16772,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16806,
											"end": 16808,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 16795,
											"end": 16804,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16791,
											"end": 16809,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16783,
											"end": 16809,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16783,
											"end": 16809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16819,
											"end": 16890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 16887,
											"end": 16888,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16876,
											"end": 16885,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16872,
											"end": 16889,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16863,
											"end": 16869,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 16819,
											"end": 16890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 16819,
											"end": 16890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16819,
											"end": 16890,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 16819,
											"end": 16890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16900,
											"end": 16972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 16968,
											"end": 16970,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16957,
											"end": 16966,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16953,
											"end": 16971,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16944,
											"end": 16950,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16900,
											"end": 16972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 16900,
											"end": 16972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16900,
											"end": 16972,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 16900,
											"end": 16972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16982,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 17050,
											"end": 17052,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17039,
											"end": 17048,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17035,
											"end": 17053,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17026,
											"end": 17032,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16982,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 16982,
											"end": 17054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16982,
											"end": 17054,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 16982,
											"end": 17054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16619,
											"end": 17061,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 16619,
											"end": 17061,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 16619,
											"end": 17061,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16619,
											"end": 17061,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16619,
											"end": 17061,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16619,
											"end": 17061,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16619,
											"end": 17061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17067,
											"end": 17247,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 17067,
											"end": 17247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17115,
											"end": 17192,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17112,
											"end": 17113,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17105,
											"end": 17193,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17212,
											"end": 17216,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 17209,
											"end": 17210,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17202,
											"end": 17217,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17236,
											"end": 17240,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 17233,
											"end": 17234,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17226,
											"end": 17241,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17253,
											"end": 17444,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 17253,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17293,
											"end": 17296,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17312,
											"end": 17332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 17330,
											"end": 17331,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17312,
											"end": 17332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 17312,
											"end": 17332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17312,
											"end": 17332,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 17312,
											"end": 17332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17307,
											"end": 17332,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17307,
											"end": 17332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17346,
											"end": 17366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 17364,
											"end": 17365,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17346,
											"end": 17366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 17346,
											"end": 17366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17346,
											"end": 17366,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 17346,
											"end": 17366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17341,
											"end": 17366,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17341,
											"end": 17366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17389,
											"end": 17390,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17386,
											"end": 17387,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17382,
											"end": 17391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17375,
											"end": 17391,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17375,
											"end": 17391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17410,
											"end": 17413,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17407,
											"end": 17408,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17404,
											"end": 17414,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17401,
											"end": 17437,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17401,
											"end": 17437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 17401,
											"end": 17437,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17417,
											"end": 17435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 17417,
											"end": 17435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 17417,
											"end": 17435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17417,
											"end": 17435,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 17417,
											"end": 17435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17401,
											"end": 17437,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 17401,
											"end": 17437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17253,
											"end": 17444,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17253,
											"end": 17444,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17253,
											"end": 17444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17253,
											"end": 17444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17253,
											"end": 17444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/CustomToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"imageURI()": "135d088d",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setImageURI(string)": "04787ca2",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_imageURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"imageURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newImageURI\",\"type\":\"string\"}],\"name\":\"setImageURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extends ERC20 functionality with image metadata and minting/burning capabilities\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Can be called by any token holder\",\"params\":{\"amount\":\"Amount of tokens to burn (including decimals)\"}},\"constructor\":{\"details\":\"Initializes the token with initial supply and image URI\",\"params\":{\"_amount\":\"Initial supply (before decimals)\",\"_imageURI\":\"Token image URI\",\"name\":\"Token name\",\"symbol\":\"Token symbol\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"mint(address,uint256)\":{\"details\":\"Only callable by contract owner\",\"params\":{\"amount\":\"Amount of tokens to mint (including decimals)\",\"to\":\"Address to receive the minted tokens\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setImageURI(string)\":{\"details\":\"Only callable by contract owner\",\"params\":{\"newImageURI\":\"New URI to set for the token image\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"imageURI\":{\"details\":\"This can be updated by the contract owner\"}},\"title\":\"CustomToken - An ERC20 token with image URI support\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Destroys tokens from caller's balance\"},\"constructor\":{\"notice\":\"Contract constructor\"},\"imageURI()\":{\"notice\":\"Storage for token image URI\"},\"mint(address,uint256)\":{\"notice\":\"Creates new tokens\"},\"setImageURI(string)\":{\"notice\":\"Updates the token's image URI\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CustomToken.sol\":\"CustomToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/CustomToken.sol\":{\"keccak256\":\"0xf5cbc12845cc187ac327a9a7a18ee44079e16ee5bbf2a34b064911915d314195\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5738b05672bbb6deb129e22fdb27793ad8a082719c09cce493dda82a1bf5a13f\",\"dweb:/ipfs/QmdZ5GLQdXi7fyACg9UwqqRmqGwjSvnUktcTAj1rG2MB9F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/CustomToken.sol:CustomToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/CustomToken.sol:CustomToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/CustomToken.sol:CustomToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/CustomToken.sol:CustomToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/CustomToken.sol:CustomToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/CustomToken.sol:CustomToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 945,
								"contract": "contracts/CustomToken.sol:CustomToken",
								"label": "imageURI",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(uint256)": {
								"notice": "Destroys tokens from caller's balance"
							},
							"constructor": {
								"notice": "Contract constructor"
							},
							"imageURI()": {
								"notice": "Storage for token image URI"
							},
							"mint(address,uint256)": {
								"notice": "Creates new tokens"
							},
							"setImageURI(string)": {
								"notice": "Updates the token's image URI"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10619:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10637:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10656:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10633:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10663:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10715:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10724:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10742:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10813:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10820:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10829:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10848:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10804:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9788:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10790:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/CustomToken.sol": {
				"ast": {
					"absolutePath": "contracts/CustomToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"CustomToken": [
							1097
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						]
					},
					"id": 1098,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1098,
							"sourceUnit": 800,
							"src": "61:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1098,
							"sourceUnit": 148,
							"src": "118:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 939,
										"name": "ERC20",
										"nameLocations": [
											"353:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "353:5:6"
									},
									"id": 940,
									"nodeType": "InheritanceSpecifier",
									"src": "353:5:6"
								},
								{
									"baseName": {
										"id": 941,
										"name": "Ownable",
										"nameLocations": [
											"360:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "360:7:6"
									},
									"id": 942,
									"nodeType": "InheritanceSpecifier",
									"src": "360:7:6"
								}
							],
							"canonicalName": "CustomToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 938,
								"nodeType": "StructuredDocumentation",
								"src": "174:155:6",
								"text": "@title CustomToken - An ERC20 token with image URI support\n @dev Extends ERC20 functionality with image metadata and minting/burning capabilities"
							},
							"fullyImplemented": true,
							"id": 1097,
							"linearizedBaseContracts": [
								1097,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "CustomToken",
							"nameLocation": "338:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "375:95:6",
										"text": "@notice Storage for token image URI\n @dev This can be updated by the contract owner"
									},
									"functionSelector": "135d088d",
									"id": 945,
									"mutability": "mutable",
									"name": "imageURI",
									"nameLocation": "490:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1097,
									"src": "476:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 944,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "476:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "965:345:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 967,
																	"name": "_imageURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "986:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "980:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 965,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "980:5:6",
																	"typeDescriptions": {}
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "980:16:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "997:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "980:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 970,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1007:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "980:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 976,
												"nodeType": "IfStatement",
												"src": "976:53:6",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "456d70747920555249",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1017:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf",
																	"typeString": "literal_string \"Empty URI\""
																},
																"value": "Empty URI"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf",
																	"typeString": "literal_string \"Empty URI\""
																}
															],
															"id": 972,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "1010:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1010:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 975,
													"nodeType": "ExpressionStatement",
													"src": "1010:19:6"
												}
											},
											{
												"expression": {
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 977,
														"name": "imageURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "1040:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 978,
														"name": "_imageURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "1051:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1040:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "1040:20:6"
											},
											{
												"assignments": [
													982
												],
												"declarations": [
													{
														"constant": false,
														"id": 982,
														"mutability": "mutable",
														"name": "decimalsValue",
														"nameLocation": "1087:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1014,
														"src": "1081:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 981,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1081:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 985,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 983,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "1103:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
															"typeString": "function () view returns (uint8)"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1103:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1081:32:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 986,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "1128:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1143:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 988,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1143:7:6",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 987,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1138:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1138:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1152:3:6",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "1138:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1159:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"id": 993,
																		"name": "decimalsValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 982,
																		"src": "1165:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "1159:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 995,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1158:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1138:41:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1128:51:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1003,
												"nodeType": "IfStatement",
												"src": "1124:110:6",
												"trueBody": {
													"id": 1002,
													"nodeType": "Block",
													"src": "1181:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "416d6f756e7420746f6f206c61726765",
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1203:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff",
																			"typeString": "literal_string \"Amount too large\""
																		},
																		"value": "Amount too large"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff",
																			"typeString": "literal_string \"Amount too large\""
																		}
																	],
																	"id": 998,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "1196:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1196:26:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1001,
															"nodeType": "ExpressionStatement",
															"src": "1196:26:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1005,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1260:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1264:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1260:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1007,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "1272:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1282:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 1009,
																	"name": "decimalsValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "1288:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1282:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1272:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1004,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1254:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1254:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "1254:48:6"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "511:269:6",
										"text": "@notice Contract constructor\n @dev Initializes the token with initial supply and image URI\n @param name Token name\n @param symbol Token symbol\n @param _imageURI Token image URI\n @param _amount Initial supply (before decimals)"
									},
									"id": 1015,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 957,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 948,
													"src": "931:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 958,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 950,
													"src": "937:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 959,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 956,
												"name": "ERC20",
												"nameLocations": [
													"925:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "925:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "925:19:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 961,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "953:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "957:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "953:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 963,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 960,
												"name": "Ownable",
												"nameLocations": [
													"945:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "945:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "945:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "822:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "808:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 947,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "808:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "851:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "837:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 949,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "837:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "_imageURI",
												"nameLocation": "882:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "868:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 951,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "868:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "910:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "902:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:127:6"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "965:0:6"
									},
									"scope": 1097,
									"src": "786:524:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "1586:140:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1025,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "1601:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1615:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1607:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1026,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1607:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1607:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1601:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1035,
												"nodeType": "IfStatement",
												"src": "1597:44:6",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "5a65726f2061646472657373",
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1626:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833",
																	"typeString": "literal_string \"Zero address\""
																},
																"value": "Zero address"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833",
																	"typeString": "literal_string \"Zero address\""
																}
															],
															"id": 1031,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "1619:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1619:22:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1034,
													"nodeType": "ExpressionStatement",
													"src": "1619:22:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1036,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "1656:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1666:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1656:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1043,
												"nodeType": "IfStatement",
												"src": "1652:38:6",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "5a65726f20616d6f756e74",
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1676:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																	"typeString": "literal_string \"Zero amount\""
																},
																"value": "Zero amount"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																	"typeString": "literal_string \"Zero amount\""
																}
															],
															"id": 1039,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "1669:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1669:21:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1042,
													"nodeType": "ExpressionStatement",
													"src": "1669:21:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "1707:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "1711:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1044,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1701:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1701:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "1701:17:6"
											}
										]
									},
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "1318:201:6",
										"text": "@notice Creates new tokens\n @dev Only callable by contract owner\n @param to Address to receive the minted tokens\n @param amount Amount of tokens to mint (including decimals)"
									},
									"functionSelector": "40c10f19",
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1023,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1022,
												"name": "onlyOwner",
												"nameLocations": [
													"1576:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1576:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1576:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "1534:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1547:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1539:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1539:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1559:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1551:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1538:28:6"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1586:0:6"
									},
									"scope": 1097,
									"src": "1525:201:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "1945:93:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1056,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "1960:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1970:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1960:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1063,
												"nodeType": "IfStatement",
												"src": "1956:38:6",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "5a65726f20616d6f756e74",
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1980:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																	"typeString": "literal_string \"Zero amount\""
																},
																"value": "Zero amount"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																	"typeString": "literal_string \"Zero amount\""
																}
															],
															"id": 1059,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "1973:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1973:21:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1062,
													"nodeType": "ExpressionStatement",
													"src": "1973:21:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1065,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2011:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2015:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2011:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "2023:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1064,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2005:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2005:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "2005:25:6"
											}
										]
									},
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "1734:166:6",
										"text": "@notice Destroys tokens from caller's balance\n @dev Can be called by any token holder\n @param amount Amount of tokens to burn (including decimals)"
									},
									"functionSelector": "42966c68",
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1915:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1928:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "1920:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1919:16:6"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:6"
									},
									"scope": 1097,
									"src": "1906:132:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "2269:107:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1081,
																	"name": "newImageURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1074,
																	"src": "2290:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2284:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1079,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2284:5:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2284:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2303:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2284:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2313:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2284:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1090,
												"nodeType": "IfStatement",
												"src": "2280:55:6",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "456d70747920555249",
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2323:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf",
																	"typeString": "literal_string \"Empty URI\""
																},
																"value": "Empty URI"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_377e7d6fd027110d063b0a8d9bde3d823916570a3855e9f6208fc3a569dc7ebf",
																	"typeString": "literal_string \"Empty URI\""
																}
															],
															"id": 1086,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "2316:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 1088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2316:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1089,
													"nodeType": "ExpressionStatement",
													"src": "2316:19:6"
												}
											},
											{
												"expression": {
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1091,
														"name": "imageURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "2346:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1092,
														"name": "newImageURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "2357:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2346:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "2346:22:6"
											}
										]
									},
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "2046:150:6",
										"text": "@notice Updates the token's image URI\n @dev Only callable by contract owner\n @param newImageURI New URI to set for the token image"
									},
									"functionSelector": "04787ca2",
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1077,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1076,
												"name": "onlyOwner",
												"nameLocations": [
													"2259:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2259:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2259:9:6"
										}
									],
									"name": "setImageURI",
									"nameLocation": "2211:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "newImageURI",
												"nameLocation": "2237:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "2223:25:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1073,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2223:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2222:27:6"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2269:0:6"
									},
									"scope": 1097,
									"src": "2202:174:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1098,
							"src": "329:2050:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "33:2346:6"
				},
				"id": 6
			}
		}
	}
}