{
	"id": "9b9d2975804a9e7b519d1f32dfc89071",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ico.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\nstruct Bid {\r\n    uint256 amount;                   // Amount of ETH bid\r\n    bool isWinner;                    // Whether this bid is among the top 500k\r\n}\r\n\r\ncontract InitialCoinOffering is Ownable {\r\n    uint256 public totalSupply;            // Total supply of tokens\r\n    uint256 public tokensForSale;         // 50% of totalSupply for the ICO\r\n    address public treasury;              // Treasury address to receive funds\r\n    uint256 public totalETH;              // Total ETH held by the contract  \r\n    uint256 public startTime;             // Start time of the ICO\r\n    uint256 public endTime;               // End time of the ICO (startTime + 2 days)\r\n    mapping(address => Bid) public bids;  // Mapping of bidder addresses to their bids\r\n    address[] public bidders;             // List of all bidders\r\n    uint256 public maxWinners = 500000;   // Maximum number of winning bids\r\n    address[] public winners;            // List of top 500k winning addresses\r\n    mapping(address => bool) public isBot;      // Tracks flagged bot addresses\r\n    address public botRedirectContract;         // Address of the bot-handling contract\r\n    bool public icoEnded;                // Tracks whether the ICO has ended\r\n\r\n    constructor(uint256 _totalSupply, address _treasury) Ownable(msg.sender) {\r\n        totalSupply = _totalSupply;\r\n        tokensForSale = totalSupply / 2;         // Allocate 50% for ICO\r\n        treasury = _treasury;\r\n        startTime = block.timestamp;            // ICO starts now\r\n        endTime = startTime + 2 days;           // ICO ends in 2 days\r\n        icoEnded = false;\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ico.sol": {
				"InitialCoinOffering": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_totalSupply",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "bidders",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "bids",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isWinner",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "botRedirectContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "icoEnded",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isBot",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxWinners",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokensForSale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "winners",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ico.sol\":276:1738  contract InitialCoinOffering is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ico.sol\":966:972  500000 */\n  0x07a120\n    /* \"contracts/ico.sol\":938:972  uint256 public maxWinners = 500000 */\n  0x09\n  sstore\n    /* \"contracts/ico.sol\":1345:1733  constructor(uint256 _totalSupply, address _treasury) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ico.sol\":1406:1416  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/ico.sol\":1443:1455  _totalSupply */\n  dup2\n    /* \"contracts/ico.sol\":1429:1440  totalSupply */\n  0x01\n    /* \"contracts/ico.sol\":1429:1455  totalSupply = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ico.sol\":1496:1497  2 */\n  0x02\n    /* \"contracts/ico.sol\":1482:1493  totalSupply */\n  sload(0x01)\n    /* \"contracts/ico.sol\":1482:1497  totalSupply / 2 */\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n    /* \"contracts/ico.sol\":1466:1479  tokensForSale */\n  0x02\n    /* \"contracts/ico.sol\":1466:1497  tokensForSale = totalSupply / 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ico.sol\":1551:1560  _treasury */\n  dup1\n    /* \"contracts/ico.sol\":1540:1548  treasury */\n  0x03\n  0x00\n    /* \"contracts/ico.sol\":1540:1560  treasury = _treasury */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ico.sol\":1583:1598  block.timestamp */\n  timestamp\n    /* \"contracts/ico.sol\":1571:1580  startTime */\n  0x05\n    /* \"contracts/ico.sol\":1571:1598  startTime = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ico.sol\":1660:1666  2 days */\n  0x02a300\n    /* \"contracts/ico.sol\":1648:1657  startTime */\n  sload(0x05)\n    /* \"contracts/ico.sol\":1648:1666  startTime + 2 days */\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n    /* \"contracts/ico.sol\":1638:1645  endTime */\n  0x06\n    /* \"contracts/ico.sol\":1638:1666  endTime = startTime + 2 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ico.sol\":1720:1725  false */\n  0x00\n    /* \"contracts/ico.sol\":1709:1717  icoEnded */\n  0x0c\n  0x14\n    /* \"contracts/ico.sol\":1709:1725  icoEnded = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ico.sol\":1345:1733  constructor(uint256 _totalSupply, address _treasury) Ownable(msg.sender) {... */\n  pop\n  pop\n    /* \"contracts/ico.sol\":276:1738  contract InitialCoinOffering is Ownable {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_20:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_22:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_23:\n    /* \"#utility.yul\":490:514   */\n  tag_38\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_39:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_24:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_41\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_23\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_25:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:922   */\ntag_26:\n    /* \"#utility.yul\":863:870   */\n  0x00\n    /* \"#utility.yul\":892:916   */\n  tag_44\n    /* \"#utility.yul\":910:915   */\n  dup3\n    /* \"#utility.yul\":892:916   */\n  tag_25\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":881:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_27:\n    /* \"#utility.yul\":1001:1025   */\n  tag_46\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_26\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_47:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_28:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_49\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_27\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  dup1\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_52\n  tag_20\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1309:1428   */\ntag_51:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_53\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_24\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_54\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_28\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1718:1836   */\ntag_29:\n    /* \"#utility.yul\":1805:1829   */\n  tag_56\n    /* \"#utility.yul\":1823:1828   */\n  dup2\n    /* \"#utility.yul\":1805:1829   */\n  tag_26\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1800:1803   */\n  dup3\n    /* \"#utility.yul\":1793:1830   */\n  mstore\n    /* \"#utility.yul\":1718:1836   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1842:2064   */\ntag_9:\n    /* \"#utility.yul\":1935:1939   */\n  0x00\n    /* \"#utility.yul\":1973:1975   */\n  0x20\n    /* \"#utility.yul\":1962:1971   */\n  dup3\n    /* \"#utility.yul\":1958:1976   */\n  add\n    /* \"#utility.yul\":1950:1976   */\n  swap1\n  pop\n    /* \"#utility.yul\":1986:2057   */\n  tag_58\n    /* \"#utility.yul\":2054:2055   */\n  0x00\n    /* \"#utility.yul\":2043:2052   */\n  dup4\n    /* \"#utility.yul\":2039:2056   */\n  add\n    /* \"#utility.yul\":2030:2036   */\n  dup5\n    /* \"#utility.yul\":1986:2057   */\n  tag_29\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1842:2064   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2070:2250   */\ntag_30:\n    /* \"#utility.yul\":2118:2195   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2115:2116   */\n  0x00\n    /* \"#utility.yul\":2108:2196   */\n  mstore\n    /* \"#utility.yul\":2215:2219   */\n  0x12\n    /* \"#utility.yul\":2212:2213   */\n  0x04\n    /* \"#utility.yul\":2205:2220   */\n  mstore\n    /* \"#utility.yul\":2239:2243   */\n  0x24\n    /* \"#utility.yul\":2236:2237   */\n  0x00\n    /* \"#utility.yul\":2229:2244   */\n  revert\n    /* \"#utility.yul\":2256:2436   */\ntag_31:\n    /* \"#utility.yul\":2304:2381   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2301:2302   */\n  0x00\n    /* \"#utility.yul\":2294:2382   */\n  mstore\n    /* \"#utility.yul\":2401:2405   */\n  0x11\n    /* \"#utility.yul\":2398:2399   */\n  0x04\n    /* \"#utility.yul\":2391:2406   */\n  mstore\n    /* \"#utility.yul\":2425:2429   */\n  0x24\n    /* \"#utility.yul\":2422:2423   */\n  0x00\n    /* \"#utility.yul\":2415:2430   */\n  revert\n    /* \"#utility.yul\":2442:2627   */\ntag_14:\n    /* \"#utility.yul\":2482:2483   */\n  0x00\n    /* \"#utility.yul\":2499:2519   */\n  tag_62\n    /* \"#utility.yul\":2517:2518   */\n  dup3\n    /* \"#utility.yul\":2499:2519   */\n  tag_22\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2494:2519   */\n  swap2\n  pop\n    /* \"#utility.yul\":2533:2553   */\n  tag_63\n    /* \"#utility.yul\":2551:2552   */\n  dup4\n    /* \"#utility.yul\":2533:2553   */\n  tag_22\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2528:2553   */\n  swap3\n  pop\n    /* \"#utility.yul\":2572:2573   */\n  dup3\n    /* \"#utility.yul\":2562:2597   */\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2577:2595   */\n  tag_65\n  tag_30\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2562:2597   */\ntag_64:\n    /* \"#utility.yul\":2619:2620   */\n  dup3\n    /* \"#utility.yul\":2616:2617   */\n  dup3\n    /* \"#utility.yul\":2612:2621   */\n  div\n    /* \"#utility.yul\":2607:2621   */\n  swap1\n  pop\n    /* \"#utility.yul\":2442:2627   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2633:2824   */\ntag_16:\n    /* \"#utility.yul\":2673:2676   */\n  0x00\n    /* \"#utility.yul\":2692:2712   */\n  tag_67\n    /* \"#utility.yul\":2710:2711   */\n  dup3\n    /* \"#utility.yul\":2692:2712   */\n  tag_22\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2687:2712   */\n  swap2\n  pop\n    /* \"#utility.yul\":2726:2746   */\n  tag_68\n    /* \"#utility.yul\":2744:2745   */\n  dup4\n    /* \"#utility.yul\":2726:2746   */\n  tag_22\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2721:2746   */\n  swap3\n  pop\n    /* \"#utility.yul\":2769:2770   */\n  dup3\n    /* \"#utility.yul\":2766:2767   */\n  dup3\n    /* \"#utility.yul\":2762:2771   */\n  add\n    /* \"#utility.yul\":2755:2771   */\n  swap1\n  pop\n    /* \"#utility.yul\":2790:2793   */\n  dup1\n    /* \"#utility.yul\":2787:2788   */\n  dup3\n    /* \"#utility.yul\":2784:2794   */\n  gt\n    /* \"#utility.yul\":2781:2817   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2797:2815   */\n  tag_70\n  tag_31\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2781:2817   */\ntag_69:\n    /* \"#utility.yul\":2633:2824   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ico.sol\":276:1738  contract InitialCoinOffering is Ownable {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ico.sol\":276:1738  contract InitialCoinOffering is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6c88268b\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa2fb1175\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa2fb1175\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xcde8e5d3\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xcff29dfd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x6c88268b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x3bbac579\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x3bbac579\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x585ac3e8\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x61d027b3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x62ea82db\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x12aef8c3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3197cbb6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x36bdee74\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ico.sol\":393:421  uint256 public tokensForSale */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ico.sol\":323:349  uint256 public totalSupply */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ico.sol\":697:719  uint256 public endTime */\n    tag_5:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ico.sol\":550:573  uint256 public totalETH */\n    tag_6:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ico.sol\":1095:1132  mapping(address => bool) public isBot */\n    tag_7:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ico.sol\":1265:1285  bool public icoEnded */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ico.sol\":470:493  address public treasury */\n    tag_9:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ico.sol\":784:819  mapping(address => Bid) public bids */\n    tag_10:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_51\n      swap3\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ico.sol\":1176:1210  address public botRedirectContract */\n    tag_11:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/ico.sol\":629:653  uint256 public startTime */\n    tag_13:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ico.sol\":1015:1039  address[] public winners */\n    tag_15:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ico.sol\":938:972  uint256 public maxWinners = 500000 */\n    tag_16:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ico.sol\":872:896  address[] public bidders */\n    tag_17:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      stop\n        /* \"contracts/ico.sol\":393:421  uint256 public tokensForSale */\n    tag_23:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/ico.sol\":323:349  uint256 public totalSupply */\n    tag_27:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/ico.sol\":697:719  uint256 public endTime */\n    tag_30:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/ico.sol\":550:573  uint256 public totalETH */\n    tag_33:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/ico.sol\":1095:1132  mapping(address => bool) public isBot */\n    tag_38:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ico.sol\":1265:1285  bool public icoEnded */\n    tag_42:\n      0x0c\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ico.sol\":470:493  address public treasury */\n    tag_45:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ico.sol\":784:819  mapping(address => Bid) public bids */\n    tag_50:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/ico.sol\":1176:1210  address public botRedirectContract */\n    tag_54:\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ico.sol\":629:653  uint256 public startTime */\n    tag_59:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ico.sol\":1015:1039  address[] public winners */\n    tag_67:\n      0x0a\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ico.sol\":938:972  uint256 public maxWinners = 500000 */\n    tag_70:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/ico.sol\":872:896  address[] public bidders */\n    tag_74:\n      0x08\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_93\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_100\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_105:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_106:\n        /* \"#utility.yul\":177:201   */\n      tag_122\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_105\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_25:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_124\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_106\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_108:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_110:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_111:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_130\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_110\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_112:\n        /* \"#utility.yul\":1076:1100   */\n      tag_132\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_111\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_133:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_113:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_135\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_112\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_37:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_138\n      tag_108\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":1352:1471   */\n    tag_137:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_139\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_113\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1701   */\n    tag_114:\n        /* \"#utility.yul\":1645:1652   */\n      0x00\n        /* \"#utility.yul\":1688:1693   */\n      dup2\n        /* \"#utility.yul\":1681:1694   */\n      iszero\n        /* \"#utility.yul\":1674:1695   */\n      iszero\n        /* \"#utility.yul\":1663:1695   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1707:1816   */\n    tag_115:\n        /* \"#utility.yul\":1788:1809   */\n      tag_142\n        /* \"#utility.yul\":1803:1808   */\n      dup2\n        /* \"#utility.yul\":1788:1809   */\n      tag_114\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":1783:1786   */\n      dup3\n        /* \"#utility.yul\":1776:1810   */\n      mstore\n        /* \"#utility.yul\":1707:1816   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1822:2032   */\n    tag_40:\n        /* \"#utility.yul\":1909:1913   */\n      0x00\n        /* \"#utility.yul\":1947:1949   */\n      0x20\n        /* \"#utility.yul\":1936:1945   */\n      dup3\n        /* \"#utility.yul\":1932:1950   */\n      add\n        /* \"#utility.yul\":1924:1950   */\n      swap1\n      pop\n        /* \"#utility.yul\":1960:2025   */\n      tag_144\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2011:2020   */\n      dup4\n        /* \"#utility.yul\":2007:2024   */\n      add\n        /* \"#utility.yul\":1998:2004   */\n      dup5\n        /* \"#utility.yul\":1960:2025   */\n      tag_115\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1822:2032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2156   */\n    tag_116:\n        /* \"#utility.yul\":2125:2149   */\n      tag_146\n        /* \"#utility.yul\":2143:2148   */\n      dup2\n        /* \"#utility.yul\":2125:2149   */\n      tag_111\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":2120:2123   */\n      dup3\n        /* \"#utility.yul\":2113:2150   */\n      mstore\n        /* \"#utility.yul\":2038:2156   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2162:2384   */\n    tag_47:\n        /* \"#utility.yul\":2255:2259   */\n      0x00\n        /* \"#utility.yul\":2293:2295   */\n      0x20\n        /* \"#utility.yul\":2282:2291   */\n      dup3\n        /* \"#utility.yul\":2278:2296   */\n      add\n        /* \"#utility.yul\":2270:2296   */\n      swap1\n      pop\n        /* \"#utility.yul\":2306:2377   */\n      tag_148\n        /* \"#utility.yul\":2374:2375   */\n      0x00\n        /* \"#utility.yul\":2363:2372   */\n      dup4\n        /* \"#utility.yul\":2359:2376   */\n      add\n        /* \"#utility.yul\":2350:2356   */\n      dup5\n        /* \"#utility.yul\":2306:2377   */\n      tag_116\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":2162:2384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2390:2710   */\n    tag_52:\n        /* \"#utility.yul\":2505:2509   */\n      0x00\n        /* \"#utility.yul\":2543:2545   */\n      0x40\n        /* \"#utility.yul\":2532:2541   */\n      dup3\n        /* \"#utility.yul\":2528:2546   */\n      add\n        /* \"#utility.yul\":2520:2546   */\n      swap1\n      pop\n        /* \"#utility.yul\":2556:2627   */\n      tag_150\n        /* \"#utility.yul\":2624:2625   */\n      0x00\n        /* \"#utility.yul\":2613:2622   */\n      dup4\n        /* \"#utility.yul\":2609:2626   */\n      add\n        /* \"#utility.yul\":2600:2606   */\n      dup6\n        /* \"#utility.yul\":2556:2627   */\n      tag_106\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2637:2703   */\n      tag_151\n        /* \"#utility.yul\":2699:2701   */\n      0x20\n        /* \"#utility.yul\":2688:2697   */\n      dup4\n        /* \"#utility.yul\":2684:2702   */\n      add\n        /* \"#utility.yul\":2675:2681   */\n      dup5\n        /* \"#utility.yul\":2637:2703   */\n      tag_115\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2390:2710   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:2838   */\n    tag_117:\n        /* \"#utility.yul\":2789:2813   */\n      tag_153\n        /* \"#utility.yul\":2807:2812   */\n      dup2\n        /* \"#utility.yul\":2789:2813   */\n      tag_105\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2782:2787   */\n      dup2\n        /* \"#utility.yul\":2779:2814   */\n      eq\n        /* \"#utility.yul\":2769:2832   */\n      tag_154\n      jumpi\n        /* \"#utility.yul\":2828:2829   */\n      0x00\n        /* \"#utility.yul\":2825:2826   */\n      dup1\n        /* \"#utility.yul\":2818:2830   */\n      revert\n        /* \"#utility.yul\":2769:2832   */\n    tag_154:\n        /* \"#utility.yul\":2716:2838   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2844:2983   */\n    tag_118:\n        /* \"#utility.yul\":2890:2895   */\n      0x00\n        /* \"#utility.yul\":2928:2934   */\n      dup2\n        /* \"#utility.yul\":2915:2935   */\n      calldataload\n        /* \"#utility.yul\":2906:2935   */\n      swap1\n      pop\n        /* \"#utility.yul\":2944:2977   */\n      tag_156\n        /* \"#utility.yul\":2971:2976   */\n      dup2\n        /* \"#utility.yul\":2944:2977   */\n      tag_117\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":2844:2983   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2989:3318   */\n    tag_66:\n        /* \"#utility.yul\":3048:3054   */\n      0x00\n        /* \"#utility.yul\":3097:3099   */\n      0x20\n        /* \"#utility.yul\":3085:3094   */\n      dup3\n        /* \"#utility.yul\":3076:3083   */\n      dup5\n        /* \"#utility.yul\":3072:3095   */\n      sub\n        /* \"#utility.yul\":3068:3100   */\n      slt\n        /* \"#utility.yul\":3065:3184   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":3103:3182   */\n      tag_159\n      tag_108\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":3065:3184   */\n    tag_158:\n        /* \"#utility.yul\":3223:3224   */\n      0x00\n        /* \"#utility.yul\":3248:3301   */\n      tag_160\n        /* \"#utility.yul\":3293:3300   */\n      dup5\n        /* \"#utility.yul\":3284:3290   */\n      dup3\n        /* \"#utility.yul\":3273:3282   */\n      dup6\n        /* \"#utility.yul\":3269:3291   */\n      add\n        /* \"#utility.yul\":3248:3301   */\n      tag_118\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3238:3301   */\n      swap2\n      pop\n        /* \"#utility.yul\":3194:3311   */\n      pop\n        /* \"#utility.yul\":2989:3318   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205333e02b34b93b2908262ebc3ac69e5df26a6922863c4f20184e1ca141783b7664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_262": {
									"entryPoint": null,
									"id": 262,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 340,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address_fromMemory": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 825,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 780,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2827:3",
										"nodeType": "YulBlock",
										"src": "0:2827:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:32:3",
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nativeSrc": "389:16:3",
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:3",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nativeSrc": "460:79:3",
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:3",
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:3",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:3",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nativeSrc": "519:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nativeSrc": "519:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nativeSrc": "490:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nativeSrc": "480:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nativeSrc": "473:43:3",
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nativeSrc": "470:63:3",
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:3",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nativeSrc": "608:80:3",
													"nodeType": "YulBlock",
													"src": "608:80:3",
													"statements": [
														{
															"nativeSrc": "618:22:3",
															"nodeType": "YulAssignment",
															"src": "618:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:3"
																},
																"nativeSrc": "627:13:3",
																"nodeType": "YulFunctionCall",
																"src": "627:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:3"
																},
																"nativeSrc": "649:33:3",
																"nodeType": "YulFunctionCall",
																"src": "649:33:3"
															},
															"nativeSrc": "649:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:3",
														"nodeType": "YulTypedName",
														"src": "586:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:3",
														"nodeType": "YulTypedName",
														"src": "594:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:3",
														"nodeType": "YulTypedName",
														"src": "602:5:3",
														"type": ""
													}
												],
												"src": "545:143:3"
											},
											{
												"body": {
													"nativeSrc": "739:81:3",
													"nodeType": "YulBlock",
													"src": "739:81:3",
													"statements": [
														{
															"nativeSrc": "749:65:3",
															"nodeType": "YulAssignment",
															"src": "749:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "764:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "771:42:3",
																		"nodeType": "YulLiteral",
																		"src": "771:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "760:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:3"
																},
																"nativeSrc": "760:54:3",
																"nodeType": "YulFunctionCall",
																"src": "760:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "749:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "694:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:3",
														"nodeType": "YulTypedName",
														"src": "721:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "731:7:3",
														"nodeType": "YulTypedName",
														"src": "731:7:3",
														"type": ""
													}
												],
												"src": "694:126:3"
											},
											{
												"body": {
													"nativeSrc": "871:51:3",
													"nodeType": "YulBlock",
													"src": "871:51:3",
													"statements": [
														{
															"nativeSrc": "881:35:3",
															"nodeType": "YulAssignment",
															"src": "881:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "910:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "910:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "892:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "892:17:3"
																},
																"nativeSrc": "892:24:3",
																"nodeType": "YulFunctionCall",
																"src": "892:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "881:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "881:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "826:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "853:5:3",
														"nodeType": "YulTypedName",
														"src": "853:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "863:7:3",
														"nodeType": "YulTypedName",
														"src": "863:7:3",
														"type": ""
													}
												],
												"src": "826:96:3"
											},
											{
												"body": {
													"nativeSrc": "971:79:3",
													"nodeType": "YulBlock",
													"src": "971:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:3",
																"nodeType": "YulBlock",
																"src": "1028:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:3"
																			},
																			"nativeSrc": "1030:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:3"
																		},
																		"nativeSrc": "1030:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1001:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:3"
																				},
																				"nativeSrc": "1001:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:3"
																		},
																		"nativeSrc": "991:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:3"
																},
																"nativeSrc": "984:43:3",
																"nodeType": "YulFunctionCall",
																"src": "984:43:3"
															},
															"nativeSrc": "981:63:3",
															"nodeType": "YulIf",
															"src": "981:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "928:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:3",
														"nodeType": "YulTypedName",
														"src": "964:5:3",
														"type": ""
													}
												],
												"src": "928:122:3"
											},
											{
												"body": {
													"nativeSrc": "1119:80:3",
													"nodeType": "YulBlock",
													"src": "1119:80:3",
													"statements": [
														{
															"nativeSrc": "1129:22:3",
															"nodeType": "YulAssignment",
															"src": "1129:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:3"
																},
																"nativeSrc": "1138:13:3",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1160:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:3"
																},
																"nativeSrc": "1160:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:3"
															},
															"nativeSrc": "1160:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1056:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:3",
														"nodeType": "YulTypedName",
														"src": "1097:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:3",
														"nodeType": "YulTypedName",
														"src": "1105:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:3",
														"nodeType": "YulTypedName",
														"src": "1113:5:3",
														"type": ""
													}
												],
												"src": "1056:143:3"
											},
											{
												"body": {
													"nativeSrc": "1299:413:3",
													"nodeType": "YulBlock",
													"src": "1299:413:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1345:83:3",
																"nodeType": "YulBlock",
																"src": "1345:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1347:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:3"
																			},
																			"nativeSrc": "1347:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:3"
																		},
																		"nativeSrc": "1347:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1320:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1329:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1316:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:3"
																		},
																		"nativeSrc": "1316:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1312:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:3"
																},
																"nativeSrc": "1312:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1312:32:3"
															},
															"nativeSrc": "1309:119:3",
															"nodeType": "YulIf",
															"src": "1309:119:3"
														},
														{
															"nativeSrc": "1438:128:3",
															"nodeType": "YulBlock",
															"src": "1438:128:3",
															"statements": [
																{
																	"nativeSrc": "1453:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1467:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1457:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1482:74:3",
																	"nodeType": "YulAssignment",
																	"src": "1482:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1528:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1539:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1524:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:3"
																				},
																				"nativeSrc": "1524:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1548:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1492:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:3"
																		},
																		"nativeSrc": "1492:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1482:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1576:129:3",
															"nodeType": "YulBlock",
															"src": "1576:129:3",
															"statements": [
																{
																	"nativeSrc": "1591:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1605:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1595:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1621:74:3",
																	"nodeType": "YulAssignment",
																	"src": "1621:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1667:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1678:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1663:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:3"
																				},
																				"nativeSrc": "1663:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1687:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1631:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:3"
																		},
																		"nativeSrc": "1631:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1621:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_fromMemory",
												"nativeSrc": "1205:507:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1261:9:3",
														"nodeType": "YulTypedName",
														"src": "1261:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1272:7:3",
														"nodeType": "YulTypedName",
														"src": "1272:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1284:6:3",
														"nodeType": "YulTypedName",
														"src": "1284:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1292:6:3",
														"nodeType": "YulTypedName",
														"src": "1292:6:3",
														"type": ""
													}
												],
												"src": "1205:507:3"
											},
											{
												"body": {
													"nativeSrc": "1783:53:3",
													"nodeType": "YulBlock",
													"src": "1783:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1800:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1800:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1823:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1823:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1805:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1805:17:3"
																		},
																		"nativeSrc": "1805:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1805:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1793:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1793:6:3"
																},
																"nativeSrc": "1793:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1793:37:3"
															},
															"nativeSrc": "1793:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1793:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1718:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1771:5:3",
														"nodeType": "YulTypedName",
														"src": "1771:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1778:3:3",
														"nodeType": "YulTypedName",
														"src": "1778:3:3",
														"type": ""
													}
												],
												"src": "1718:118:3"
											},
											{
												"body": {
													"nativeSrc": "1940:124:3",
													"nodeType": "YulBlock",
													"src": "1940:124:3",
													"statements": [
														{
															"nativeSrc": "1950:26:3",
															"nodeType": "YulAssignment",
															"src": "1950:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1962:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1962:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1973:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1973:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1958:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1958:3:3"
																},
																"nativeSrc": "1958:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1958:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1950:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1950:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2030:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2030:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2043:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2043:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2054:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2054:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2039:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2039:3:3"
																		},
																		"nativeSrc": "2039:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2039:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1986:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1986:43:3"
																},
																"nativeSrc": "1986:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1986:71:3"
															},
															"nativeSrc": "1986:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1986:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1842:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1912:9:3",
														"nodeType": "YulTypedName",
														"src": "1912:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1924:6:3",
														"nodeType": "YulTypedName",
														"src": "1924:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1935:4:3",
														"nodeType": "YulTypedName",
														"src": "1935:4:3",
														"type": ""
													}
												],
												"src": "1842:222:3"
											},
											{
												"body": {
													"nativeSrc": "2098:152:3",
													"nodeType": "YulBlock",
													"src": "2098:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2115:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2115:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2118:77:3",
																		"nodeType": "YulLiteral",
																		"src": "2118:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2108:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:3"
																},
																"nativeSrc": "2108:88:3",
																"nodeType": "YulFunctionCall",
																"src": "2108:88:3"
															},
															"nativeSrc": "2108:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "2108:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2212:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2212:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2215:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2215:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2205:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2205:6:3"
																},
																"nativeSrc": "2205:15:3",
																"nodeType": "YulFunctionCall",
																"src": "2205:15:3"
															},
															"nativeSrc": "2205:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "2205:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2236:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2236:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2239:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2239:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2229:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2229:6:3"
																},
																"nativeSrc": "2229:15:3",
																"nodeType": "YulFunctionCall",
																"src": "2229:15:3"
															},
															"nativeSrc": "2229:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "2229:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "2070:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "2070:180:3"
											},
											{
												"body": {
													"nativeSrc": "2284:152:3",
													"nodeType": "YulBlock",
													"src": "2284:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2301:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2301:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2304:77:3",
																		"nodeType": "YulLiteral",
																		"src": "2304:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2294:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:3"
																},
																"nativeSrc": "2294:88:3",
																"nodeType": "YulFunctionCall",
																"src": "2294:88:3"
															},
															"nativeSrc": "2294:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "2294:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2398:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2398:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2401:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2401:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2391:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2391:6:3"
																},
																"nativeSrc": "2391:15:3",
																"nodeType": "YulFunctionCall",
																"src": "2391:15:3"
															},
															"nativeSrc": "2391:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "2391:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2422:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2422:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2425:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2425:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2415:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2415:6:3"
																},
																"nativeSrc": "2415:15:3",
																"nodeType": "YulFunctionCall",
																"src": "2415:15:3"
															},
															"nativeSrc": "2415:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "2415:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2256:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "2256:180:3"
											},
											{
												"body": {
													"nativeSrc": "2484:143:3",
													"nodeType": "YulBlock",
													"src": "2484:143:3",
													"statements": [
														{
															"nativeSrc": "2494:25:3",
															"nodeType": "YulAssignment",
															"src": "2494:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2517:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2517:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2499:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "2499:17:3"
																},
																"nativeSrc": "2499:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2499:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2494:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "2494:1:3"
																}
															]
														},
														{
															"nativeSrc": "2528:25:3",
															"nodeType": "YulAssignment",
															"src": "2528:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2551:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2551:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2533:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "2533:17:3"
																},
																"nativeSrc": "2533:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2533:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2528:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "2528:1:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2575:22:3",
																"nodeType": "YulBlock",
																"src": "2575:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "2577:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "2577:16:3"
																			},
																			"nativeSrc": "2577:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2577:18:3"
																		},
																		"nativeSrc": "2577:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2577:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2572:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2572:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2565:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2565:6:3"
																},
																"nativeSrc": "2565:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2565:9:3"
															},
															"nativeSrc": "2562:35:3",
															"nodeType": "YulIf",
															"src": "2562:35:3"
														},
														{
															"nativeSrc": "2607:14:3",
															"nodeType": "YulAssignment",
															"src": "2607:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2616:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2616:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2619:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2619:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2612:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2612:3:3"
																},
																"nativeSrc": "2612:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2612:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2607:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "2607:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "2442:185:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2473:1:3",
														"nodeType": "YulTypedName",
														"src": "2473:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2476:1:3",
														"nodeType": "YulTypedName",
														"src": "2476:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2482:1:3",
														"nodeType": "YulTypedName",
														"src": "2482:1:3",
														"type": ""
													}
												],
												"src": "2442:185:3"
											},
											{
												"body": {
													"nativeSrc": "2677:147:3",
													"nodeType": "YulBlock",
													"src": "2677:147:3",
													"statements": [
														{
															"nativeSrc": "2687:25:3",
															"nodeType": "YulAssignment",
															"src": "2687:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2710:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2710:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2692:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "2692:17:3"
																},
																"nativeSrc": "2692:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2692:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2687:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "2687:1:3"
																}
															]
														},
														{
															"nativeSrc": "2721:25:3",
															"nodeType": "YulAssignment",
															"src": "2721:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2744:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2744:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2726:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "2726:17:3"
																},
																"nativeSrc": "2726:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2726:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2721:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "2721:1:3"
																}
															]
														},
														{
															"nativeSrc": "2755:16:3",
															"nodeType": "YulAssignment",
															"src": "2755:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2766:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2766:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2769:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2769:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2762:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2762:3:3"
																},
																"nativeSrc": "2762:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2762:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2755:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2755:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2795:22:3",
																"nodeType": "YulBlock",
																"src": "2795:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2797:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "2797:16:3"
																			},
																			"nativeSrc": "2797:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2797:18:3"
																		},
																		"nativeSrc": "2797:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2797:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2787:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2787:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2790:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2790:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2784:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "2784:2:3"
																},
																"nativeSrc": "2784:10:3",
																"nodeType": "YulFunctionCall",
																"src": "2784:10:3"
															},
															"nativeSrc": "2781:36:3",
															"nodeType": "YulIf",
															"src": "2781:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2633:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2664:1:3",
														"nodeType": "YulTypedName",
														"src": "2664:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2667:1:3",
														"nodeType": "YulTypedName",
														"src": "2667:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2673:3:3",
														"nodeType": "YulTypedName",
														"src": "2673:3:3",
														"type": ""
													}
												],
												"src": "2633:191:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526207a120600955348015610016575f80fd5b50604051610bff380380610bff833981810160405281019061003891906102a6565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a9575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100a091906102f3565b60405180910390fd5b6100b88161015460201b60201c565b508160018190555060026001546100cf9190610366565b6002819055508060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426005819055506202a30060055461012d9190610396565b6006819055505f600c60146101000a81548160ff02191690831515021790555050506103c9565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f819050919050565b61022b81610219565b8114610235575f80fd5b50565b5f8151905061024681610222565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102758261024c565b9050919050565b6102858161026b565b811461028f575f80fd5b50565b5f815190506102a08161027c565b92915050565b5f80604083850312156102bc576102bb610215565b5b5f6102c985828601610238565b92505060206102da85828601610292565b9150509250929050565b6102ed8161026b565b82525050565b5f6020820190506103065f8301846102e4565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61037082610219565b915061037b83610219565b92508261038b5761038a61030c565b5b828204905092915050565b5f6103a082610219565b91506103ab83610219565b92508282019050808211156103c3576103c2610339565b5b92915050565b610829806103d65f395ff3fe608060405234801561000f575f80fd5b50600436106100fe575f3560e01c80636c88268b11610095578063a2fb117511610064578063a2fb11751461027b578063cde8e5d3146102ab578063cff29dfd146102c9578063f2fde38b146102f9576100fe565b80636c88268b14610217578063715018a61461023557806378e979251461023f5780638da5cb5b1461025d576100fe565b80633bbac579116100d15780633bbac5791461017a578063585ac3e8146101aa57806361d027b3146101c857806362ea82db146101e6576100fe565b806312aef8c31461010257806318160ddd146101205780633197cbb61461013e57806336bdee741461015c575b5f80fd5b61010a610315565b604051610117919061067a565b60405180910390f35b61012861031b565b604051610135919061067a565b60405180910390f35b610146610321565b604051610153919061067a565b60405180910390f35b610164610327565b604051610171919061067a565b60405180910390f35b610194600480360381019061018f91906106f1565b61032d565b6040516101a19190610736565b60405180910390f35b6101b261034a565b6040516101bf9190610736565b60405180910390f35b6101d061035d565b6040516101dd919061075e565b60405180910390f35b61020060048036038101906101fb91906106f1565b610382565b60405161020e929190610777565b60405180910390f35b61021f6103ae565b60405161022c919061075e565b60405180910390f35b61023d6103d3565b005b6102476103e6565b604051610254919061067a565b60405180910390f35b6102656103ec565b604051610272919061075e565b60405180910390f35b610295600480360381019061029091906107c8565b610413565b6040516102a2919061075e565b60405180910390f35b6102b361044e565b6040516102c0919061067a565b60405180910390f35b6102e360048036038101906102de91906107c8565b610454565b6040516102f0919061075e565b60405180910390f35b610313600480360381019061030e91906106f1565b61048f565b005b60025481565b60015481565b60065481565b60045481565b600b602052805f5260405f205f915054906101000a900460ff1681565b600c60149054906101000a900460ff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6007602052805f5260405f205f91509050805f015490806001015f9054906101000a900460ff16905082565b600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103db610513565b6103e45f61059a565b565b60055481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600a8181548110610422575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095481565b60088181548110610463575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610497610513565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610507575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016104fe919061075e565b60405180910390fd5b6105108161059a565b50565b61051b61065b565b73ffffffffffffffffffffffffffffffffffffffff166105396103ec565b73ffffffffffffffffffffffffffffffffffffffff16146105985761055c61065b565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161058f919061075e565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b61067481610662565b82525050565b5f60208201905061068d5f83018461066b565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106c082610697565b9050919050565b6106d0816106b6565b81146106da575f80fd5b50565b5f813590506106eb816106c7565b92915050565b5f6020828403121561070657610705610693565b5b5f610713848285016106dd565b91505092915050565b5f8115159050919050565b6107308161071c565b82525050565b5f6020820190506107495f830184610727565b92915050565b610758816106b6565b82525050565b5f6020820190506107715f83018461074f565b92915050565b5f60408201905061078a5f83018561066b565b6107976020830184610727565b9392505050565b6107a781610662565b81146107b1575f80fd5b50565b5f813590506107c28161079e565b92915050565b5f602082840312156107dd576107dc610693565b5b5f6107ea848285016107b4565b9150509291505056fea26469706673582212205333e02b34b93b2908262ebc3ac69e5df26a6922863c4f20184e1ca141783b7664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x7A120 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x16 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBFF CODESIZE SUB DUP1 PUSH2 0xBFF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x38 SWAP2 SWAP1 PUSH2 0x2A6 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB8 DUP2 PUSH2 0x154 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 SLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0x366 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH3 0x2A300 PUSH1 0x5 SLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x396 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x3C9 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22B DUP2 PUSH2 0x219 JUMP JUMPDEST DUP2 EQ PUSH2 0x235 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x246 DUP2 PUSH2 0x222 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x275 DUP3 PUSH2 0x24C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x285 DUP2 PUSH2 0x26B JUMP JUMPDEST DUP2 EQ PUSH2 0x28F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A0 DUP2 PUSH2 0x27C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BC JUMPI PUSH2 0x2BB PUSH2 0x215 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C9 DUP6 DUP3 DUP7 ADD PUSH2 0x238 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DA DUP6 DUP3 DUP7 ADD PUSH2 0x292 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2ED DUP2 PUSH2 0x26B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x306 PUSH0 DUP4 ADD DUP5 PUSH2 0x2E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x370 DUP3 PUSH2 0x219 JUMP JUMPDEST SWAP2 POP PUSH2 0x37B DUP4 PUSH2 0x219 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x38B JUMPI PUSH2 0x38A PUSH2 0x30C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3A0 DUP3 PUSH2 0x219 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AB DUP4 PUSH2 0x219 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3C3 JUMPI PUSH2 0x3C2 PUSH2 0x339 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x829 DUP1 PUSH2 0x3D6 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C88268B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA2FB1175 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA2FB1175 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0xCDE8E5D3 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xCFF29DFD EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F9 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6C88268B EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25D JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x3BBAC579 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x3BBAC579 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x585AC3E8 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x62EA82DB EQ PUSH2 0x1E6 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x12AEF8C3 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x36BDEE74 EQ PUSH2 0x15C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH2 0x31B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x164 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH2 0x34A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP3 SWAP2 SWAP1 PUSH2 0x777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH2 0x3D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x247 PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B3 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x3DB PUSH2 0x513 JUMP JUMPDEST PUSH2 0x3E4 PUSH0 PUSH2 0x59A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x422 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x463 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x513 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x507 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x510 DUP2 PUSH2 0x59A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x51B PUSH2 0x65B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x539 PUSH2 0x3EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x598 JUMPI PUSH2 0x55C PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58F SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x674 DUP2 PUSH2 0x662 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x68D PUSH0 DUP4 ADD DUP5 PUSH2 0x66B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6C0 DUP3 PUSH2 0x697 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D0 DUP2 PUSH2 0x6B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x6DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6EB DUP2 PUSH2 0x6C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x706 JUMPI PUSH2 0x705 PUSH2 0x693 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x713 DUP5 DUP3 DUP6 ADD PUSH2 0x6DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x730 DUP2 PUSH2 0x71C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x749 PUSH0 DUP4 ADD DUP5 PUSH2 0x727 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x758 DUP2 PUSH2 0x6B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x771 PUSH0 DUP4 ADD DUP5 PUSH2 0x74F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x78A PUSH0 DUP4 ADD DUP6 PUSH2 0x66B JUMP JUMPDEST PUSH2 0x797 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x727 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7A7 DUP2 PUSH2 0x662 JUMP JUMPDEST DUP2 EQ PUSH2 0x7B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7C2 DUP2 PUSH2 0x79E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DD JUMPI PUSH2 0x7DC PUSH2 0x693 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7EA DUP5 DUP3 DUP6 ADD PUSH2 0x7B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 CALLER 0xE0 0x2B CALLVALUE 0xB9 EXTCODESIZE 0x29 ADDMOD 0x26 0x2E 0xBC GASPRICE 0xC6 SWAP15 TSTORE CALLCODE PUSH11 0x6922863C4F20184E1CA141 PUSH25 0x3B7664736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "276:1462:2:-:0;;;966:6;938:34;;1345:388;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1406:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1443:12:2::1;1429:11;:26;;;;1496:1;1482:11;;:15;;;;:::i;:::-;1466:13;:31;;;;1551:9;1540:8;;:20;;;;;;;;;;;;;;;;;;1583:15;1571:9;:27;;;;1660:6;1648:9;;:18;;;;:::i;:::-;1638:7;:28;;;;1720:5;1709:8;;:16;;;;;;;;;;;;;;;;;;1345:388:::0;;276:1462;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:3:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;1718:118::-;1805:24;1823:5;1805:24;:::i;:::-;1800:3;1793:37;1718:118;;:::o;1842:222::-;1935:4;1973:2;1962:9;1958:18;1950:26;;1986:71;2054:1;2043:9;2039:17;2030:6;1986:71;:::i;:::-;1842:222;;;;:::o;2070:180::-;2118:77;2115:1;2108:88;2215:4;2212:1;2205:15;2239:4;2236:1;2229:15;2256:180;2304:77;2301:1;2294:88;2401:4;2398:1;2391:15;2425:4;2422:1;2415:15;2442:185;2482:1;2499:20;2517:1;2499:20;:::i;:::-;2494:25;;2533:20;2551:1;2533:20;:::i;:::-;2528:25;;2572:1;2562:35;;2577:18;;:::i;:::-;2562:35;2619:1;2616;2612:9;2607:14;;2442:185;;;;:::o;2633:191::-;2673:3;2692:20;2710:1;2692:20;:::i;:::-;2687:25;;2726:20;2744:1;2726:20;:::i;:::-;2721:25;;2769:1;2766;2762:9;2755:16;;2790:3;2787:1;2784:10;2781:36;;;2797:18;;:::i;:::-;2781:36;2633:191;;;;:::o;276:1462:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1299,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 1627,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1434,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@bidders_207": {
									"entryPoint": 1108,
									"id": 207,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@bids_204": {
									"entryPoint": 898,
									"id": 204,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@botRedirectContract_219": {
									"entryPoint": 942,
									"id": 219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@endTime_199": {
									"entryPoint": 801,
									"id": 199,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@icoEnded_221": {
									"entryPoint": 842,
									"id": 221,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isBot_217": {
									"entryPoint": 813,
									"id": 217,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxWinners_210": {
									"entryPoint": 1102,
									"id": 210,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1004,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 979,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startTime_197": {
									"entryPoint": 998,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokensForSale_191": {
									"entryPoint": 789,
									"id": 191,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalETH_195": {
									"entryPoint": 807,
									"id": 195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_189": {
									"entryPoint": 795,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1167,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@treasury_193": {
									"entryPoint": 861,
									"id": 193,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@winners_213": {
									"entryPoint": 1043,
									"id": 213,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 1911,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1683,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3321:3",
										"nodeType": "YulBlock",
										"src": "0:3321:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:3",
													"nodeType": "YulBlock",
													"src": "52:32:3",
													"statements": [
														{
															"nativeSrc": "62:16:3",
															"nodeType": "YulAssignment",
															"src": "62:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:3",
																"nodeType": "YulIdentifier",
																"src": "73:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:77:3"
											},
											{
												"body": {
													"nativeSrc": "155:53:3",
													"nodeType": "YulBlock",
													"src": "155:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:3"
																		},
																		"nativeSrc": "177:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:3"
																},
																"nativeSrc": "165:37:3",
																"nodeType": "YulFunctionCall",
																"src": "165:37:3"
															},
															"nativeSrc": "165:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:3",
														"nodeType": "YulTypedName",
														"src": "143:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:3",
														"nodeType": "YulTypedName",
														"src": "150:3:3",
														"type": ""
													}
												],
												"src": "90:118:3"
											},
											{
												"body": {
													"nativeSrc": "312:124:3",
													"nodeType": "YulBlock",
													"src": "312:124:3",
													"statements": [
														{
															"nativeSrc": "322:26:3",
															"nodeType": "YulAssignment",
															"src": "322:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:3",
																		"nodeType": "YulLiteral",
																		"src": "345:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:3"
																},
																"nativeSrc": "330:18:3",
																"nodeType": "YulFunctionCall",
																"src": "330:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:3",
																				"nodeType": "YulLiteral",
																				"src": "426:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:3"
																		},
																		"nativeSrc": "411:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:3"
																},
																"nativeSrc": "358:71:3",
																"nodeType": "YulFunctionCall",
																"src": "358:71:3"
															},
															"nativeSrc": "358:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:3",
														"nodeType": "YulTypedName",
														"src": "284:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:3",
														"nodeType": "YulTypedName",
														"src": "296:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:3",
														"nodeType": "YulTypedName",
														"src": "307:4:3",
														"type": ""
													}
												],
												"src": "214:222:3"
											},
											{
												"body": {
													"nativeSrc": "482:35:3",
													"nodeType": "YulBlock",
													"src": "482:35:3",
													"statements": [
														{
															"nativeSrc": "492:19:3",
															"nodeType": "YulAssignment",
															"src": "492:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:3",
																		"nodeType": "YulLiteral",
																		"src": "508:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:3"
																},
																"nativeSrc": "502:9:3",
																"nodeType": "YulFunctionCall",
																"src": "502:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:3",
														"nodeType": "YulTypedName",
														"src": "475:6:3",
														"type": ""
													}
												],
												"src": "442:75:3"
											},
											{
												"body": {
													"nativeSrc": "612:28:3",
													"nodeType": "YulBlock",
													"src": "612:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:3",
																		"nodeType": "YulLiteral",
																		"src": "629:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:3",
																		"nodeType": "YulLiteral",
																		"src": "632:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:3"
																},
																"nativeSrc": "622:12:3",
																"nodeType": "YulFunctionCall",
																"src": "622:12:3"
															},
															"nativeSrc": "622:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:3"
											},
											{
												"body": {
													"nativeSrc": "735:28:3",
													"nodeType": "YulBlock",
													"src": "735:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:3",
																		"nodeType": "YulLiteral",
																		"src": "752:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:3",
																		"nodeType": "YulLiteral",
																		"src": "755:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:3"
																},
																"nativeSrc": "745:12:3",
																"nodeType": "YulFunctionCall",
																"src": "745:12:3"
															},
															"nativeSrc": "745:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:3"
											},
											{
												"body": {
													"nativeSrc": "814:81:3",
													"nodeType": "YulBlock",
													"src": "814:81:3",
													"statements": [
														{
															"nativeSrc": "824:65:3",
															"nodeType": "YulAssignment",
															"src": "824:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:42:3",
																		"nodeType": "YulLiteral",
																		"src": "846:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "835:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:3"
																},
																"nativeSrc": "835:54:3",
																"nodeType": "YulFunctionCall",
																"src": "835:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "824:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "769:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "796:5:3",
														"nodeType": "YulTypedName",
														"src": "796:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "806:7:3",
														"nodeType": "YulTypedName",
														"src": "806:7:3",
														"type": ""
													}
												],
												"src": "769:126:3"
											},
											{
												"body": {
													"nativeSrc": "946:51:3",
													"nodeType": "YulBlock",
													"src": "946:51:3",
													"statements": [
														{
															"nativeSrc": "956:35:3",
															"nodeType": "YulAssignment",
															"src": "956:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "985:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "967:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:3"
																},
																"nativeSrc": "967:24:3",
																"nodeType": "YulFunctionCall",
																"src": "967:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "956:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "901:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "928:5:3",
														"nodeType": "YulTypedName",
														"src": "928:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "938:7:3",
														"nodeType": "YulTypedName",
														"src": "938:7:3",
														"type": ""
													}
												],
												"src": "901:96:3"
											},
											{
												"body": {
													"nativeSrc": "1046:79:3",
													"nodeType": "YulBlock",
													"src": "1046:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:3",
																"nodeType": "YulBlock",
																"src": "1103:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:3"
																			},
																			"nativeSrc": "1105:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:3"
																		},
																		"nativeSrc": "1105:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1076:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:3"
																				},
																				"nativeSrc": "1076:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:3"
																		},
																		"nativeSrc": "1066:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:3"
																},
																"nativeSrc": "1059:43:3",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:3"
															},
															"nativeSrc": "1056:63:3",
															"nodeType": "YulIf",
															"src": "1056:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1003:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:3",
														"nodeType": "YulTypedName",
														"src": "1039:5:3",
														"type": ""
													}
												],
												"src": "1003:122:3"
											},
											{
												"body": {
													"nativeSrc": "1183:87:3",
													"nodeType": "YulBlock",
													"src": "1183:87:3",
													"statements": [
														{
															"nativeSrc": "1193:29:3",
															"nodeType": "YulAssignment",
															"src": "1193:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:3"
																},
																"nativeSrc": "1202:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1231:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:3"
																},
																"nativeSrc": "1231:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:3"
															},
															"nativeSrc": "1231:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1131:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:3",
														"nodeType": "YulTypedName",
														"src": "1161:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:3",
														"nodeType": "YulTypedName",
														"src": "1169:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:3",
														"nodeType": "YulTypedName",
														"src": "1177:5:3",
														"type": ""
													}
												],
												"src": "1131:139:3"
											},
											{
												"body": {
													"nativeSrc": "1342:263:3",
													"nodeType": "YulBlock",
													"src": "1342:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1388:83:3",
																"nodeType": "YulBlock",
																"src": "1388:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1390:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:3"
																			},
																			"nativeSrc": "1390:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:3"
																		},
																		"nativeSrc": "1390:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1363:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1372:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1359:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:3"
																		},
																		"nativeSrc": "1359:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1384:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1355:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:3"
																},
																"nativeSrc": "1355:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1355:32:3"
															},
															"nativeSrc": "1352:119:3",
															"nodeType": "YulIf",
															"src": "1352:119:3"
														},
														{
															"nativeSrc": "1481:117:3",
															"nodeType": "YulBlock",
															"src": "1481:117:3",
															"statements": [
																{
																	"nativeSrc": "1496:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1510:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1500:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1525:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1525:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1560:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1571:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1556:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:3"
																				},
																				"nativeSrc": "1556:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1580:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1535:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:3"
																		},
																		"nativeSrc": "1535:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1525:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1276:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1312:9:3",
														"nodeType": "YulTypedName",
														"src": "1312:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1323:7:3",
														"nodeType": "YulTypedName",
														"src": "1323:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1335:6:3",
														"nodeType": "YulTypedName",
														"src": "1335:6:3",
														"type": ""
													}
												],
												"src": "1276:329:3"
											},
											{
												"body": {
													"nativeSrc": "1653:48:3",
													"nodeType": "YulBlock",
													"src": "1653:48:3",
													"statements": [
														{
															"nativeSrc": "1663:32:3",
															"nodeType": "YulAssignment",
															"src": "1663:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1688:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1688:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1681:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1681:6:3"
																		},
																		"nativeSrc": "1681:13:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1674:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:3"
																},
																"nativeSrc": "1674:21:3",
																"nodeType": "YulFunctionCall",
																"src": "1674:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1663:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1663:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1611:90:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1635:5:3",
														"nodeType": "YulTypedName",
														"src": "1635:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1645:7:3",
														"nodeType": "YulTypedName",
														"src": "1645:7:3",
														"type": ""
													}
												],
												"src": "1611:90:3"
											},
											{
												"body": {
													"nativeSrc": "1766:50:3",
													"nodeType": "YulBlock",
													"src": "1766:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1783:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1783:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1803:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1803:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1788:14:3",
																			"nodeType": "YulIdentifier",
																			"src": "1788:14:3"
																		},
																		"nativeSrc": "1788:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1788:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1776:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1776:6:3"
																},
																"nativeSrc": "1776:34:3",
																"nodeType": "YulFunctionCall",
																"src": "1776:34:3"
															},
															"nativeSrc": "1776:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "1776:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1707:109:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1754:5:3",
														"nodeType": "YulTypedName",
														"src": "1754:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1761:3:3",
														"nodeType": "YulTypedName",
														"src": "1761:3:3",
														"type": ""
													}
												],
												"src": "1707:109:3"
											},
											{
												"body": {
													"nativeSrc": "1914:118:3",
													"nodeType": "YulBlock",
													"src": "1914:118:3",
													"statements": [
														{
															"nativeSrc": "1924:26:3",
															"nodeType": "YulAssignment",
															"src": "1924:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1936:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1936:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1947:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1947:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1932:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1932:3:3"
																},
																"nativeSrc": "1932:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1932:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1924:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1924:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1998:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1998:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2011:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2011:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2022:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2022:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2007:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2007:3:3"
																		},
																		"nativeSrc": "2007:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2007:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1960:37:3",
																	"nodeType": "YulIdentifier",
																	"src": "1960:37:3"
																},
																"nativeSrc": "1960:65:3",
																"nodeType": "YulFunctionCall",
																"src": "1960:65:3"
															},
															"nativeSrc": "1960:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "1960:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1822:210:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1886:9:3",
														"nodeType": "YulTypedName",
														"src": "1886:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1898:6:3",
														"nodeType": "YulTypedName",
														"src": "1898:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1909:4:3",
														"nodeType": "YulTypedName",
														"src": "1909:4:3",
														"type": ""
													}
												],
												"src": "1822:210:3"
											},
											{
												"body": {
													"nativeSrc": "2103:53:3",
													"nodeType": "YulBlock",
													"src": "2103:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2120:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2120:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2143:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2143:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2125:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "2125:17:3"
																		},
																		"nativeSrc": "2125:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2125:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2113:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2113:6:3"
																},
																"nativeSrc": "2113:37:3",
																"nodeType": "YulFunctionCall",
																"src": "2113:37:3"
															},
															"nativeSrc": "2113:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "2113:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2038:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2091:5:3",
														"nodeType": "YulTypedName",
														"src": "2091:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2098:3:3",
														"nodeType": "YulTypedName",
														"src": "2098:3:3",
														"type": ""
													}
												],
												"src": "2038:118:3"
											},
											{
												"body": {
													"nativeSrc": "2260:124:3",
													"nodeType": "YulBlock",
													"src": "2260:124:3",
													"statements": [
														{
															"nativeSrc": "2270:26:3",
															"nodeType": "YulAssignment",
															"src": "2270:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2282:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2282:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2293:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2293:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2278:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2278:3:3"
																},
																"nativeSrc": "2278:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2278:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2270:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2270:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2350:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2350:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2363:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2363:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2374:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2374:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2359:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2359:3:3"
																		},
																		"nativeSrc": "2359:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2359:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2306:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "2306:43:3"
																},
																"nativeSrc": "2306:71:3",
																"nodeType": "YulFunctionCall",
																"src": "2306:71:3"
															},
															"nativeSrc": "2306:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "2306:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2162:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2232:9:3",
														"nodeType": "YulTypedName",
														"src": "2232:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2244:6:3",
														"nodeType": "YulTypedName",
														"src": "2244:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2255:4:3",
														"nodeType": "YulTypedName",
														"src": "2255:4:3",
														"type": ""
													}
												],
												"src": "2162:222:3"
											},
											{
												"body": {
													"nativeSrc": "2510:200:3",
													"nodeType": "YulBlock",
													"src": "2510:200:3",
													"statements": [
														{
															"nativeSrc": "2520:26:3",
															"nodeType": "YulAssignment",
															"src": "2520:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2532:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2532:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2543:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2543:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2528:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:3"
																},
																"nativeSrc": "2528:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2528:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2520:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2520:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2600:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2600:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2613:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2613:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2624:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2624:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2609:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2609:3:3"
																		},
																		"nativeSrc": "2609:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2609:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2556:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "2556:43:3"
																},
																"nativeSrc": "2556:71:3",
																"nodeType": "YulFunctionCall",
																"src": "2556:71:3"
															},
															"nativeSrc": "2556:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "2556:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2675:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2675:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2688:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2688:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2699:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2699:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2684:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2684:3:3"
																		},
																		"nativeSrc": "2684:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2684:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2637:37:3",
																	"nodeType": "YulIdentifier",
																	"src": "2637:37:3"
																},
																"nativeSrc": "2637:66:3",
																"nodeType": "YulFunctionCall",
																"src": "2637:66:3"
															},
															"nativeSrc": "2637:66:3",
															"nodeType": "YulExpressionStatement",
															"src": "2637:66:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "2390:320:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2474:9:3",
														"nodeType": "YulTypedName",
														"src": "2474:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2486:6:3",
														"nodeType": "YulTypedName",
														"src": "2486:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2494:6:3",
														"nodeType": "YulTypedName",
														"src": "2494:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2505:4:3",
														"nodeType": "YulTypedName",
														"src": "2505:4:3",
														"type": ""
													}
												],
												"src": "2390:320:3"
											},
											{
												"body": {
													"nativeSrc": "2759:79:3",
													"nodeType": "YulBlock",
													"src": "2759:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2816:16:3",
																"nodeType": "YulBlock",
																"src": "2816:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2825:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2825:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2828:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2828:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2818:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2818:6:3"
																			},
																			"nativeSrc": "2818:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2818:12:3"
																		},
																		"nativeSrc": "2818:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2818:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2782:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2782:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2807:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "2807:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2789:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "2789:17:3"
																				},
																				"nativeSrc": "2789:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2789:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2779:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "2779:2:3"
																		},
																		"nativeSrc": "2779:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2779:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2772:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2772:6:3"
																},
																"nativeSrc": "2772:43:3",
																"nodeType": "YulFunctionCall",
																"src": "2772:43:3"
															},
															"nativeSrc": "2769:63:3",
															"nodeType": "YulIf",
															"src": "2769:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2716:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2752:5:3",
														"nodeType": "YulTypedName",
														"src": "2752:5:3",
														"type": ""
													}
												],
												"src": "2716:122:3"
											},
											{
												"body": {
													"nativeSrc": "2896:87:3",
													"nodeType": "YulBlock",
													"src": "2896:87:3",
													"statements": [
														{
															"nativeSrc": "2906:29:3",
															"nodeType": "YulAssignment",
															"src": "2906:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2928:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2928:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2915:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "2915:12:3"
																},
																"nativeSrc": "2915:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2915:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2906:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2906:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2971:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2971:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2944:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "2944:26:3"
																},
																"nativeSrc": "2944:33:3",
																"nodeType": "YulFunctionCall",
																"src": "2944:33:3"
															},
															"nativeSrc": "2944:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "2944:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2844:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2874:6:3",
														"nodeType": "YulTypedName",
														"src": "2874:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2882:3:3",
														"nodeType": "YulTypedName",
														"src": "2882:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2890:5:3",
														"nodeType": "YulTypedName",
														"src": "2890:5:3",
														"type": ""
													}
												],
												"src": "2844:139:3"
											},
											{
												"body": {
													"nativeSrc": "3055:263:3",
													"nodeType": "YulBlock",
													"src": "3055:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "3101:83:3",
																"nodeType": "YulBlock",
																"src": "3101:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3103:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "3103:77:3"
																			},
																			"nativeSrc": "3103:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3103:79:3"
																		},
																		"nativeSrc": "3103:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3103:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3076:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3076:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3085:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3085:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3072:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3072:3:3"
																		},
																		"nativeSrc": "3072:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3072:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3097:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3097:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3068:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3068:3:3"
																},
																"nativeSrc": "3068:32:3",
																"nodeType": "YulFunctionCall",
																"src": "3068:32:3"
															},
															"nativeSrc": "3065:119:3",
															"nodeType": "YulIf",
															"src": "3065:119:3"
														},
														{
															"nativeSrc": "3194:117:3",
															"nodeType": "YulBlock",
															"src": "3194:117:3",
															"statements": [
																{
																	"nativeSrc": "3209:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3209:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3223:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3223:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3213:6:3",
																			"nodeType": "YulTypedName",
																			"src": "3213:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3238:63:3",
																	"nodeType": "YulAssignment",
																	"src": "3238:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3273:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3273:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3284:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3284:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3269:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3269:3:3"
																				},
																				"nativeSrc": "3269:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3269:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3293:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3293:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3248:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "3248:20:3"
																		},
																		"nativeSrc": "3248:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3248:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3238:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "3238:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2989:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3025:9:3",
														"nodeType": "YulTypedName",
														"src": "3025:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3036:7:3",
														"nodeType": "YulTypedName",
														"src": "3036:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3048:6:3",
														"nodeType": "YulTypedName",
														"src": "3048:6:3",
														"type": ""
													}
												],
												"src": "2989:329:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fe575f3560e01c80636c88268b11610095578063a2fb117511610064578063a2fb11751461027b578063cde8e5d3146102ab578063cff29dfd146102c9578063f2fde38b146102f9576100fe565b80636c88268b14610217578063715018a61461023557806378e979251461023f5780638da5cb5b1461025d576100fe565b80633bbac579116100d15780633bbac5791461017a578063585ac3e8146101aa57806361d027b3146101c857806362ea82db146101e6576100fe565b806312aef8c31461010257806318160ddd146101205780633197cbb61461013e57806336bdee741461015c575b5f80fd5b61010a610315565b604051610117919061067a565b60405180910390f35b61012861031b565b604051610135919061067a565b60405180910390f35b610146610321565b604051610153919061067a565b60405180910390f35b610164610327565b604051610171919061067a565b60405180910390f35b610194600480360381019061018f91906106f1565b61032d565b6040516101a19190610736565b60405180910390f35b6101b261034a565b6040516101bf9190610736565b60405180910390f35b6101d061035d565b6040516101dd919061075e565b60405180910390f35b61020060048036038101906101fb91906106f1565b610382565b60405161020e929190610777565b60405180910390f35b61021f6103ae565b60405161022c919061075e565b60405180910390f35b61023d6103d3565b005b6102476103e6565b604051610254919061067a565b60405180910390f35b6102656103ec565b604051610272919061075e565b60405180910390f35b610295600480360381019061029091906107c8565b610413565b6040516102a2919061075e565b60405180910390f35b6102b361044e565b6040516102c0919061067a565b60405180910390f35b6102e360048036038101906102de91906107c8565b610454565b6040516102f0919061075e565b60405180910390f35b610313600480360381019061030e91906106f1565b61048f565b005b60025481565b60015481565b60065481565b60045481565b600b602052805f5260405f205f915054906101000a900460ff1681565b600c60149054906101000a900460ff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6007602052805f5260405f205f91509050805f015490806001015f9054906101000a900460ff16905082565b600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103db610513565b6103e45f61059a565b565b60055481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600a8181548110610422575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095481565b60088181548110610463575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610497610513565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610507575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016104fe919061075e565b60405180910390fd5b6105108161059a565b50565b61051b61065b565b73ffffffffffffffffffffffffffffffffffffffff166105396103ec565b73ffffffffffffffffffffffffffffffffffffffff16146105985761055c61065b565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161058f919061075e565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b61067481610662565b82525050565b5f60208201905061068d5f83018461066b565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106c082610697565b9050919050565b6106d0816106b6565b81146106da575f80fd5b50565b5f813590506106eb816106c7565b92915050565b5f6020828403121561070657610705610693565b5b5f610713848285016106dd565b91505092915050565b5f8115159050919050565b6107308161071c565b82525050565b5f6020820190506107495f830184610727565b92915050565b610758816106b6565b82525050565b5f6020820190506107715f83018461074f565b92915050565b5f60408201905061078a5f83018561066b565b6107976020830184610727565b9392505050565b6107a781610662565b81146107b1575f80fd5b50565b5f813590506107c28161079e565b92915050565b5f602082840312156107dd576107dc610693565b5b5f6107ea848285016107b4565b9150509291505056fea26469706673582212205333e02b34b93b2908262ebc3ac69e5df26a6922863c4f20184e1ca141783b7664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C88268B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA2FB1175 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA2FB1175 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0xCDE8E5D3 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xCFF29DFD EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F9 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6C88268B EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25D JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x3BBAC579 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x3BBAC579 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x585AC3E8 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x62EA82DB EQ PUSH2 0x1E6 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x12AEF8C3 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x36BDEE74 EQ PUSH2 0x15C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH2 0x31B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x164 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH2 0x34A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP3 SWAP2 SWAP1 PUSH2 0x777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH2 0x3D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x247 PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B3 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x3DB PUSH2 0x513 JUMP JUMPDEST PUSH2 0x3E4 PUSH0 PUSH2 0x59A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x422 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x463 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x513 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x507 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x510 DUP2 PUSH2 0x59A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x51B PUSH2 0x65B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x539 PUSH2 0x3EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x598 JUMPI PUSH2 0x55C PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58F SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x674 DUP2 PUSH2 0x662 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x68D PUSH0 DUP4 ADD DUP5 PUSH2 0x66B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6C0 DUP3 PUSH2 0x697 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D0 DUP2 PUSH2 0x6B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x6DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6EB DUP2 PUSH2 0x6C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x706 JUMPI PUSH2 0x705 PUSH2 0x693 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x713 DUP5 DUP3 DUP6 ADD PUSH2 0x6DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x730 DUP2 PUSH2 0x71C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x749 PUSH0 DUP4 ADD DUP5 PUSH2 0x727 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x758 DUP2 PUSH2 0x6B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x771 PUSH0 DUP4 ADD DUP5 PUSH2 0x74F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x78A PUSH0 DUP4 ADD DUP6 PUSH2 0x66B JUMP JUMPDEST PUSH2 0x797 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x727 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7A7 DUP2 PUSH2 0x662 JUMP JUMPDEST DUP2 EQ PUSH2 0x7B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7C2 DUP2 PUSH2 0x79E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DD JUMPI PUSH2 0x7DC PUSH2 0x693 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7EA DUP5 DUP3 DUP6 ADD PUSH2 0x7B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 CALLER 0xE0 0x2B CALLVALUE 0xB9 EXTCODESIZE 0x29 ADDMOD 0x26 0x2E 0xBC GASPRICE 0xC6 SWAP15 TSTORE CALLCODE PUSH11 0x6922863C4F20184E1CA141 PUSH25 0x3B7664736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "276:1462:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;393:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;323:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;697:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;550:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1095:37;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1265:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;470:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;784:35;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1176:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;629:24:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1015:24:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;938:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;872:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;393:28:2;;;;:::o;323:26::-;;;;:::o;697:22::-;;;;:::o;550:23::-;;;;:::o;1095:37::-;;;;;;;;;;;;;;;;;;;;;;:::o;1265:20::-;;;;;;;;;;;;;:::o;470:23::-;;;;;;;;;;;;;:::o;784:35::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1176:34::-;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;629:24:2:-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1015:24:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;938:34::-;;;;:::o;872:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;7:77:3:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:90::-;1645:7;1688:5;1681:13;1674:21;1663:32;;1611:90;;;:::o;1707:109::-;1788:21;1803:5;1788:21;:::i;:::-;1783:3;1776:34;1707:109;;:::o;1822:210::-;1909:4;1947:2;1936:9;1932:18;1924:26;;1960:65;2022:1;2011:9;2007:17;1998:6;1960:65;:::i;:::-;1822:210;;;;:::o;2038:118::-;2125:24;2143:5;2125:24;:::i;:::-;2120:3;2113:37;2038:118;;:::o;2162:222::-;2255:4;2293:2;2282:9;2278:18;2270:26;;2306:71;2374:1;2363:9;2359:17;2350:6;2306:71;:::i;:::-;2162:222;;;;:::o;2390:320::-;2505:4;2543:2;2532:9;2528:18;2520:26;;2556:71;2624:1;2613:9;2609:17;2600:6;2556:71;:::i;:::-;2637:66;2699:2;2688:9;2684:18;2675:6;2637:66;:::i;:::-;2390:320;;;;;:::o;2716:122::-;2789:24;2807:5;2789:24;:::i;:::-;2782:5;2779:35;2769:63;;2828:1;2825;2818:12;2769:63;2716:122;:::o;2844:139::-;2890:5;2928:6;2915:20;2906:29;;2944:33;2971:5;2944:33;:::i;:::-;2844:139;;;;:::o;2989:329::-;3048:6;3097:2;3085:9;3076:7;3072:23;3068:32;3065:119;;;3103:79;;:::i;:::-;3065:119;3223:1;3248:53;3293:7;3284:6;3273:9;3269:22;3248:53;:::i;:::-;3238:63;;3194:117;2989:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "417800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"bidders(uint256)": "5010",
								"bids(address)": "5156",
								"botRedirectContract()": "2531",
								"endTime()": "2493",
								"icoEnded()": "2562",
								"isBot(address)": "2856",
								"maxWinners()": "2469",
								"owner()": "2604",
								"renounceOwnership()": "infinite",
								"startTime()": "2492",
								"tokensForSale()": "2449",
								"totalETH()": "2515",
								"totalSupply()": "2471",
								"transferOwnership(address)": "infinite",
								"treasury()": "2575",
								"winners(uint256)": "4966"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 1738,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 276,
									"end": 1738,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 276,
									"end": 1738,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 966,
									"end": 972,
									"name": "PUSH",
									"source": 2,
									"value": "7A120"
								},
								{
									"begin": 938,
									"end": 972,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 938,
									"end": 972,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1345,
									"end": 1733,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1406,
									"end": 1416,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 1455,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1429,
									"end": 1440,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1429,
									"end": 1455,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1429,
									"end": 1455,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1429,
									"end": 1455,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1429,
									"end": 1455,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1496,
									"end": 1497,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1482,
									"end": 1493,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1482,
									"end": 1493,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 1497,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1482,
									"end": 1497,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 1497,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 1497,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1482,
									"end": 1497,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 1497,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1482,
									"end": 1497,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1466,
									"end": 1479,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1466,
									"end": 1497,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1466,
									"end": 1497,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1466,
									"end": 1497,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1466,
									"end": 1497,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1551,
									"end": 1560,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1540,
									"end": 1548,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1540,
									"end": 1548,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1540,
									"end": 1560,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1540,
									"end": 1560,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1540,
									"end": 1560,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1540,
									"end": 1560,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1540,
									"end": 1560,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1540,
									"end": 1560,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1540,
									"end": 1560,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1540,
									"end": 1560,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1540,
									"end": 1560,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1540,
									"end": 1560,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1540,
									"end": 1560,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1540,
									"end": 1560,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1540,
									"end": 1560,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1540,
									"end": 1560,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1540,
									"end": 1560,
									"modifierDepth": 1,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1540,
									"end": 1560,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1540,
									"end": 1560,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1540,
									"end": 1560,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1583,
									"end": 1598,
									"modifierDepth": 1,
									"name": "TIMESTAMP",
									"source": 2
								},
								{
									"begin": 1571,
									"end": 1580,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1571,
									"end": 1598,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1571,
									"end": 1598,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1571,
									"end": 1598,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1571,
									"end": 1598,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1660,
									"end": 1666,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "2A300"
								},
								{
									"begin": 1648,
									"end": 1657,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1648,
									"end": 1657,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1666,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1648,
									"end": 1666,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1666,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1666,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1648,
									"end": 1666,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1666,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1648,
									"end": 1666,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1638,
									"end": 1645,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1638,
									"end": 1666,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1638,
									"end": 1666,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1638,
									"end": 1666,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1638,
									"end": 1666,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1720,
									"end": 1725,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1709,
									"end": 1717,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "C"
								},
								{
									"begin": 1709,
									"end": 1717,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1709,
									"end": 1725,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1709,
									"end": 1725,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1709,
									"end": 1725,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1709,
									"end": 1725,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1709,
									"end": 1725,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1709,
									"end": 1725,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1709,
									"end": 1725,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1709,
									"end": 1725,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1709,
									"end": 1725,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1709,
									"end": 1725,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1709,
									"end": 1725,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1709,
									"end": 1725,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1709,
									"end": 1725,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1709,
									"end": 1725,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1709,
									"end": 1725,
									"modifierDepth": 1,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1709,
									"end": 1725,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1709,
									"end": 1725,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1709,
									"end": 1725,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1733,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 276,
									"end": 1738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 276,
									"end": 1738,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 826,
									"end": 922,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 826,
									"end": 922,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 863,
									"end": 870,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 910,
									"end": 915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 892,
									"end": 916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 892,
									"end": 916,
									"name": "tag",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 881,
									"end": 916,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 881,
									"end": 916,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 826,
									"end": 922,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 826,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1718,
									"end": 1836,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1718,
									"end": 1836,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1805,
									"end": 1829,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 1823,
									"end": 1828,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1805,
									"end": 1829,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1805,
									"end": 1829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1805,
									"end": 1829,
									"name": "tag",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 1805,
									"end": 1829,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1800,
									"end": 1803,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1793,
									"end": 1830,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1718,
									"end": 1836,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1718,
									"end": 1836,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1718,
									"end": 1836,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1935,
									"end": 1939,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1973,
									"end": 1975,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1962,
									"end": 1971,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 1976,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1950,
									"end": 1976,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1950,
									"end": 1976,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1986,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2043,
									"end": 2052,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2039,
									"end": 2056,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2030,
									"end": 2036,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1986,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1986,
									"end": 2057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1986,
									"end": 2057,
									"name": "tag",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 1986,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1842,
									"end": 2064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2070,
									"end": 2250,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 2070,
									"end": 2250,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2118,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2115,
									"end": 2116,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2108,
									"end": 2196,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2215,
									"end": 2219,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2212,
									"end": 2213,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2205,
									"end": 2220,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2239,
									"end": 2243,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 2236,
									"end": 2237,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2229,
									"end": 2244,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2256,
									"end": 2436,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 2256,
									"end": 2436,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2304,
									"end": 2381,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2301,
									"end": 2302,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2294,
									"end": 2382,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2401,
									"end": 2405,
									"name": "PUSH",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 2398,
									"end": 2399,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2391,
									"end": 2406,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 2422,
									"end": 2423,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2415,
									"end": 2430,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2442,
									"end": 2627,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 2442,
									"end": 2627,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2482,
									"end": 2483,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2499,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2499,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 2499,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2499,
									"end": 2519,
									"name": "tag",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 2499,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2494,
									"end": 2519,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2494,
									"end": 2519,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2533,
									"end": 2553,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 2551,
									"end": 2552,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2533,
									"end": 2553,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 2533,
									"end": 2553,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2533,
									"end": 2553,
									"name": "tag",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 2533,
									"end": 2553,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2528,
									"end": 2553,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2528,
									"end": 2553,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2572,
									"end": 2573,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2562,
									"end": 2597,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 2562,
									"end": 2597,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2577,
									"end": 2595,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 2577,
									"end": 2595,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 2577,
									"end": 2595,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2577,
									"end": 2595,
									"name": "tag",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 2577,
									"end": 2595,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2562,
									"end": 2597,
									"name": "tag",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 2562,
									"end": 2597,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2619,
									"end": 2620,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2616,
									"end": 2617,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2612,
									"end": 2621,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 2607,
									"end": 2621,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2607,
									"end": 2621,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2442,
									"end": 2627,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2442,
									"end": 2627,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2442,
									"end": 2627,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2442,
									"end": 2627,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2442,
									"end": 2627,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2633,
									"end": 2824,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 2633,
									"end": 2824,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2673,
									"end": 2676,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2692,
									"end": 2712,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "67"
								},
								{
									"begin": 2710,
									"end": 2711,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2712,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 2692,
									"end": 2712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2712,
									"name": "tag",
									"source": 3,
									"value": "67"
								},
								{
									"begin": 2692,
									"end": 2712,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2687,
									"end": 2712,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2687,
									"end": 2712,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 2744,
									"end": 2745,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 2726,
									"end": 2746,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "tag",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2721,
									"end": 2746,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2721,
									"end": 2746,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2769,
									"end": 2770,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2766,
									"end": 2767,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2762,
									"end": 2771,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2755,
									"end": 2771,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2755,
									"end": 2771,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2790,
									"end": 2793,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2787,
									"end": 2788,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2784,
									"end": 2794,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2781,
									"end": 2817,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2781,
									"end": 2817,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "69"
								},
								{
									"begin": 2781,
									"end": 2817,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "70"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 2797,
									"end": 2815,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "tag",
									"source": 3,
									"value": "70"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2781,
									"end": 2817,
									"name": "tag",
									"source": 3,
									"value": "69"
								},
								{
									"begin": 2781,
									"end": 2817,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2633,
									"end": 2824,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2633,
									"end": 2824,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2633,
									"end": 2824,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2633,
									"end": 2824,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2633,
									"end": 2824,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 276,
									"end": 1738,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 276,
									"end": 1738,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 276,
									"end": 1738,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 1738,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 276,
									"end": 1738,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 1738,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 1738,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 276,
									"end": 1738,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 1738,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205333e02b34b93b2908262ebc3ac69e5df26a6922863c4f20184e1ca141783b7664736f6c634300081a0033",
									".code": [
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "6C88268B"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "A2FB1175"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "A2FB1175"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "CDE8E5D3"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "CFF29DFD"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "6C88268B"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "78E97925"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "3BBAC579"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "3BBAC579"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "585AC3E8"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "61D027B3"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "62EA82DB"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "12AEF8C3"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "3197CBB6"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "36BDEE74"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 1738,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 393,
											"end": 421,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 393,
											"end": 421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 393,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 393,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 393,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 393,
											"end": 421,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 393,
											"end": 421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 393,
											"end": 421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 421,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 393,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 393,
											"end": 421,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 393,
											"end": 421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 393,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 393,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 393,
											"end": 421,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 393,
											"end": 421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 393,
											"end": 421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 421,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 393,
											"end": 421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 393,
											"end": 421,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 393,
											"end": 421,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 393,
											"end": 421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 393,
											"end": 421,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 323,
											"end": 349,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 323,
											"end": 349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 323,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 323,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 323,
											"end": 349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 323,
											"end": 349,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 323,
											"end": 349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 323,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 349,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 323,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 323,
											"end": 349,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 323,
											"end": 349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 323,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 323,
											"end": 349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 323,
											"end": 349,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 323,
											"end": 349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 323,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 349,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 323,
											"end": 349,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 323,
											"end": 349,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 323,
											"end": 349,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 323,
											"end": 349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 323,
											"end": 349,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 697,
											"end": 719,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 697,
											"end": 719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 697,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 697,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 697,
											"end": 719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 697,
											"end": 719,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 697,
											"end": 719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 697,
											"end": 719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 697,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 697,
											"end": 719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 697,
											"end": 719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 697,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 697,
											"end": 719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 697,
											"end": 719,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 697,
											"end": 719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 697,
											"end": 719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 697,
											"end": 719,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 697,
											"end": 719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 697,
											"end": 719,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 697,
											"end": 719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 697,
											"end": 719,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 550,
											"end": 573,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 550,
											"end": 573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 550,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 550,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 550,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 550,
											"end": 573,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 550,
											"end": 573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 550,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 550,
											"end": 573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 550,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 550,
											"end": 573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 550,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 550,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 550,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 550,
											"end": 573,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 550,
											"end": 573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 550,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 550,
											"end": 573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 550,
											"end": 573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 550,
											"end": 573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 550,
											"end": 573,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 550,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 550,
											"end": 573,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1095,
											"end": 1132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1095,
											"end": 1132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1265,
											"end": 1285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 470,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 470,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 784,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 784,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 784,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1176,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1176,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 629,
											"end": 653,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 629,
											"end": 653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 629,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 629,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 629,
											"end": 653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 629,
											"end": 653,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 629,
											"end": 653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 629,
											"end": 653,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 653,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 629,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 629,
											"end": 653,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 629,
											"end": 653,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 629,
											"end": 653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 629,
											"end": 653,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 629,
											"end": 653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 629,
											"end": 653,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 653,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 629,
											"end": 653,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 653,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 629,
											"end": 653,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 629,
											"end": 653,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 653,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1015,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1015,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1015,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 938,
											"end": 972,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 938,
											"end": 972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 938,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 938,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 938,
											"end": 972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 938,
											"end": 972,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 938,
											"end": 972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 938,
											"end": 972,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 972,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 938,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 938,
											"end": 972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 938,
											"end": 972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 938,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 938,
											"end": 972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 938,
											"end": 972,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 938,
											"end": 972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 938,
											"end": 972,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 972,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 938,
											"end": 972,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 938,
											"end": 972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 938,
											"end": 972,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 938,
											"end": 972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 938,
											"end": 972,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 872,
											"end": 896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 872,
											"end": 896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 872,
											"end": 896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 421,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 393,
											"end": 421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 393,
											"end": 421,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 393,
											"end": 421,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 393,
											"end": 421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 393,
											"end": 421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 323,
											"end": 349,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 323,
											"end": 349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 323,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 323,
											"end": 349,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 323,
											"end": 349,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 323,
											"end": 349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 697,
											"end": 719,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 697,
											"end": 719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 697,
											"end": 719,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 697,
											"end": 719,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 697,
											"end": 719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 697,
											"end": 719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 550,
											"end": 573,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 550,
											"end": 573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 550,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 550,
											"end": 573,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 550,
											"end": 573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 550,
											"end": 573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 470,
											"end": 493,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 470,
											"end": 493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 784,
											"end": 819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 784,
											"end": 819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 629,
											"end": 653,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 629,
											"end": 653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 629,
											"end": 653,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 629,
											"end": 653,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 629,
											"end": 653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 629,
											"end": 653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 938,
											"end": 972,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 938,
											"end": 972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 938,
											"end": 972,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 938,
											"end": 972,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 938,
											"end": 972,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 938,
											"end": 972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 872,
											"end": 896,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 872,
											"end": 896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1652,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1693,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1694,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1695,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1816,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1707,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1803,
											"end": 1808,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1788,
											"end": 1809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1783,
											"end": 1786,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1776,
											"end": 1810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1816,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1816,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1909,
											"end": 1913,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1949,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1950,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 1950,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 1950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2007,
											"end": 2024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1960,
											"end": 2025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2143,
											"end": 2148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2125,
											"end": 2149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2120,
											"end": 2123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2150,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2295,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2291,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2296,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2374,
											"end": 2375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2372,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2376,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2306,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2710,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2390,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2505,
											"end": 2509,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2545,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2532,
											"end": 2541,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2528,
											"end": 2546,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2624,
											"end": 2625,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2622,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2609,
											"end": 2626,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2606,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2556,
											"end": 2627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2627,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2556,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2637,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2699,
											"end": 2701,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2688,
											"end": 2697,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2675,
											"end": 2681,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2637,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2637,
											"end": 2703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2637,
											"end": 2703,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2637,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2710,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2710,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2838,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2716,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2807,
											"end": 2812,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2789,
											"end": 2813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2782,
											"end": 2787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2769,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2769,
											"end": 2832,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2769,
											"end": 2832,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2769,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2838,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 2983,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2844,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2890,
											"end": 2895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2928,
											"end": 2934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2935,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2906,
											"end": 2935,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2906,
											"end": 2935,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2944,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2971,
											"end": 2976,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2944,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2944,
											"end": 2977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2944,
											"end": 2977,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2944,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 2983,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 2983,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 2983,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 2983,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 2983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2989,
											"end": 3318,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2989,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3099,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3083,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3072,
											"end": 3095,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3100,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3184,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3065,
											"end": 3184,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3103,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3103,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3103,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3103,
											"end": 3182,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3103,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3184,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3065,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3223,
											"end": 3224,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3293,
											"end": 3300,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3290,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3282,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3269,
											"end": 3291,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3248,
											"end": 3301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3301,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3248,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3301,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3194,
											"end": 3311,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2989,
											"end": 3318,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2989,
											"end": 3318,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2989,
											"end": 3318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2989,
											"end": 3318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2989,
											"end": 3318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/ico.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"bidders(uint256)": "cff29dfd",
							"bids(address)": "62ea82db",
							"botRedirectContract()": "6c88268b",
							"endTime()": "3197cbb6",
							"icoEnded()": "585ac3e8",
							"isBot(address)": "3bbac579",
							"maxWinners()": "cde8e5d3",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"startTime()": "78e97925",
							"tokensForSale()": "12aef8c3",
							"totalETH()": "36bdee74",
							"totalSupply()": "18160ddd",
							"transferOwnership(address)": "f2fde38b",
							"treasury()": "61d027b3",
							"winners(uint256)": "a2fb1175"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bidders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWinner\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"botRedirectContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"icoEnded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWinners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensForSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ico.sol\":\"InitialCoinOffering\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/ico.sol\":{\"keccak256\":\"0x2bf5a7530e7d72b1b942c36facd9c48e9caac1b3964f224d8dcd6626870e5b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c9104cf0cbcd3a663b7b1515e69621973598e9a8d54d2e4f72515d79126988d\",\"dweb:/ipfs/QmRy6ig7yooRKuizrTzXY4CjsG5fDU8xQdvyV43jhnR7UP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/ico.sol:InitialCoinOffering",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 189,
								"contract": "contracts/ico.sol:InitialCoinOffering",
								"label": "totalSupply",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 191,
								"contract": "contracts/ico.sol:InitialCoinOffering",
								"label": "tokensForSale",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 193,
								"contract": "contracts/ico.sol:InitialCoinOffering",
								"label": "treasury",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 195,
								"contract": "contracts/ico.sol:InitialCoinOffering",
								"label": "totalETH",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 197,
								"contract": "contracts/ico.sol:InitialCoinOffering",
								"label": "startTime",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 199,
								"contract": "contracts/ico.sol:InitialCoinOffering",
								"label": "endTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 204,
								"contract": "contracts/ico.sol:InitialCoinOffering",
								"label": "bids",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_struct(Bid)185_storage)"
							},
							{
								"astId": 207,
								"contract": "contracts/ico.sol:InitialCoinOffering",
								"label": "bidders",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 210,
								"contract": "contracts/ico.sol:InitialCoinOffering",
								"label": "maxWinners",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 213,
								"contract": "contracts/ico.sol:InitialCoinOffering",
								"label": "winners",
								"offset": 0,
								"slot": "10",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 217,
								"contract": "contracts/ico.sol:InitialCoinOffering",
								"label": "isBot",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 219,
								"contract": "contracts/ico.sol:InitialCoinOffering",
								"label": "botRedirectContract",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 221,
								"contract": "contracts/ico.sol:InitialCoinOffering",
								"label": "icoEnded",
								"offset": 20,
								"slot": "12",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(Bid)185_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Bid)",
								"numberOfBytes": "32",
								"value": "t_struct(Bid)185_storage"
							},
							"t_struct(Bid)185_storage": {
								"encoding": "inplace",
								"label": "struct Bid",
								"members": [
									{
										"astId": 182,
										"contract": "contracts/ico.sol:InitialCoinOffering",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 184,
										"contract": "contracts/ico.sol:InitialCoinOffering",
										"label": "isWinner",
										"offset": 0,
										"slot": "1",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"contracts/ico.sol": {
				"ast": {
					"absolutePath": "contracts/ico.sol",
					"exportedSymbols": {
						"Bid": [
							185
						],
						"Context": [
							177
						],
						"InitialCoinOffering": [
							263
						],
						"Ownable": [
							147
						]
					},
					"id": 264,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 264,
							"sourceUnit": 148,
							"src": "60:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"canonicalName": "Bid",
							"id": 185,
							"members": [
								{
									"constant": false,
									"id": 182,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "142:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "134:14:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 181,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "134:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 184,
									"mutability": "mutable",
									"name": "isWinner",
									"nameLocation": "199:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "194:13:2",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 183,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "194:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Bid",
							"nameLocation": "123:3:2",
							"nodeType": "StructDefinition",
							"scope": 264,
							"src": "116:156:2",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 186,
										"name": "Ownable",
										"nameLocations": [
											"308:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "308:7:2"
									},
									"id": 187,
									"nodeType": "InheritanceSpecifier",
									"src": "308:7:2"
								}
							],
							"canonicalName": "InitialCoinOffering",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 263,
							"linearizedBaseContracts": [
								263,
								147,
								177
							],
							"name": "InitialCoinOffering",
							"nameLocation": "285:19:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 189,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "338:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "323:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 188,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "323:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "12aef8c3",
									"id": 191,
									"mutability": "mutable",
									"name": "tokensForSale",
									"nameLocation": "408:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "393:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 190,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "393:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61d027b3",
									"id": 193,
									"mutability": "mutable",
									"name": "treasury",
									"nameLocation": "485:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "470:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 192,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "470:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "36bdee74",
									"id": 195,
									"mutability": "mutable",
									"name": "totalETH",
									"nameLocation": "565:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "550:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 194,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "550:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 197,
									"mutability": "mutable",
									"name": "startTime",
									"nameLocation": "644:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "629:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 196,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "629:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3197cbb6",
									"id": 199,
									"mutability": "mutable",
									"name": "endTime",
									"nameLocation": "712:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "697:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 198,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "62ea82db",
									"id": 204,
									"mutability": "mutable",
									"name": "bids",
									"nameLocation": "815:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "784:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bid_$185_storage_$",
										"typeString": "mapping(address => struct Bid)"
									},
									"typeName": {
										"id": 203,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 200,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "792:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "784:23:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bid_$185_storage_$",
											"typeString": "mapping(address => struct Bid)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 202,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 201,
												"name": "Bid",
												"nameLocations": [
													"803:3:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 185,
												"src": "803:3:2"
											},
											"referencedDeclaration": 185,
											"src": "803:3:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bid_$185_storage_ptr",
												"typeString": "struct Bid"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cff29dfd",
									"id": 207,
									"mutability": "mutable",
									"name": "bidders",
									"nameLocation": "889:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "872:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 205,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "872:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 206,
										"nodeType": "ArrayTypeName",
										"src": "872:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cde8e5d3",
									"id": 210,
									"mutability": "mutable",
									"name": "maxWinners",
									"nameLocation": "953:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "938:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 208,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "938:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353030303030",
										"id": 209,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "966:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000_by_1",
											"typeString": "int_const 500000"
										},
										"value": "500000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a2fb1175",
									"id": 213,
									"mutability": "mutable",
									"name": "winners",
									"nameLocation": "1032:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "1015:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 211,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1015:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 212,
										"nodeType": "ArrayTypeName",
										"src": "1015:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3bbac579",
									"id": 217,
									"mutability": "mutable",
									"name": "isBot",
									"nameLocation": "1127:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "1095:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 216,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 214,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1103:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1095:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 215,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1114:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6c88268b",
									"id": 219,
									"mutability": "mutable",
									"name": "botRedirectContract",
									"nameLocation": "1191:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "1176:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 218,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1176:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "585ac3e8",
									"id": 221,
									"mutability": "mutable",
									"name": "icoEnded",
									"nameLocation": "1277:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "1265:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 220,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1265:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "1418:315:2",
										"statements": [
											{
												"expression": {
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 232,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "1429:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 233,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "1443:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1429:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "1429:26:2"
											},
											{
												"expression": {
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 236,
														"name": "tokensForSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "1466:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 237,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "1482:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1496:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "1482:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1466:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "1466:31:2"
											},
											{
												"expression": {
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 242,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "1540:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 243,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "1551:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1540:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "1540:20:2"
											},
											{
												"expression": {
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 246,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "1571:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 247,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1583:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1589:9:2",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1583:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1571:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "1571:27:2"
											},
											{
												"expression": {
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1638:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 252,
															"name": "startTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "1648:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "32",
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1660:6:2",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_172800_by_1",
																"typeString": "int_const 172800"
															},
															"value": "2"
														},
														"src": "1648:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1638:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "1638:28:2"
											},
											{
												"expression": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 257,
														"name": "icoEnded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "1709:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1720:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1709:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "1709:16:2"
											}
										]
									},
									"id": 262,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 228,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1406:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1410:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1406:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 230,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 227,
												"name": "Ownable",
												"nameLocations": [
													"1398:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1398:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1398:19:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "_totalSupply",
												"nameLocation": "1365:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1357:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "1387:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1379:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1356:41:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1418:0:2"
									},
									"scope": 263,
									"src": "1345:388:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 264,
							"src": "276:1462:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "33:1705:2"
				},
				"id": 2
			}
		}
	}
}